
@kernel void insSetFlowField3D(const dlong Nelements,
                              const dfloat t,
                              @restrict const  dfloat *  x,
                              @restrict const  dfloat *  y,
                              @restrict const  dfloat *  z,
                              const dlong offset,
                                    @restrict dfloat *  U,
                                    @restrict dfloat *  P){

  for(dlong n=0;n<p_Np*Nelements;++n;@tile(256,@outer,@inner)){

    if(n<p_Np*Nelements){
      dfloat xn = x[n];
      dfloat yn = y[n];
      dfloat zn = z[n];
      
      dfloat u = 0.0;
      dfloat v = 0.0;
      dfloat w = 0.0;
      dfloat p = 0.0;

      insFlowField3D(t, xn, yn, zn, &u, &v, &w, &p);

      U[n+0*offset] = u;
      U[n+1*offset] = v;
      U[n+2*offset] = w;
      P[n]          = p;
    }
  }
}
