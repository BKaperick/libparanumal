// P^s = PI + \sum^s-1 prk_si P^i 
kernel void insPressureUpdate(const dlong Nelements,
                            const int stage,
                            const dfloat * restrict prkB,
                            const dlong fieldOffset,
                            const dfloat * restrict PI,
                            const dfloat * restrict P,
                                  dfloat * restrict rkP){

  for(dlong e=0;e<Nelements;++e;outer0){
    for(int n=0;n<p_Np;++n;inner0){
      const dlong id  = n + e*p_Np;

      dfloat rkPn = PI[id];
      for (int s=0;s<stage;s++) {
        dfloat prkBn = p_EXTBDF ? prkB[s] : prkB[stage*(p_Nstages+1)+s]; 
        // dfloat prkBn = prkB[s];   
        rkPn += prkBn*P[id+s*fieldOffset];
      }

      rkP[id] = rkPn;      
    }
  }
}
