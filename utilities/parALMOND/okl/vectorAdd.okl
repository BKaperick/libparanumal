// y = beta*y + alpha*x
kernel void vectorAddKernel(const int outerDim0, const int innerDim0,
				const int   N,
				const datafloat   alpha,
				const datafloat   beta,
				  const datafloat *restrict x,
				        datafloat *restrict y){

  for(int globalId0=0;globalId0<outerDim0*innerDim0;++globalId0;tile(innerDim0)){

    const int i = globalId0;

    if(i<N)
      y[i] = beta*y[i] + alpha*x[i];
  }
}

// z = alpha*x + beta*y
kernel void vectorAddKernel2(const int outerDim0, const int innerDim0,
				 const int   N,
				 const datafloat   alpha,
				 const datafloat   beta,
				   const datafloat *restrict x,
				   const datafloat *restrict y,
				         datafloat *restrict z){

  for(int globalId0=0;globalId0<outerDim0*innerDim0;++globalId0;tile(innerDim0)){

    const int i = globalId0;

    if(i<N)
      z[i] = beta*y[i] + alpha*x[i];
  }
}
