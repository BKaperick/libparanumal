
kernel void insUpdateUpdate2D(const iint Nelements,
				                      const dfloat dt,
                              const dfloat g0,
                              const dfloat a0,
                              const dfloat a1,
                              const dfloat a2,
                              const dfloat c0,
                              const dfloat c1,
                              const dfloat c2,
                              const dfloat * restrict PI,
                              const dfloat * restrict PIx,
                              const dfloat * restrict PIy,
                              const iint index,
                              const iint offset,
				                            dfloat * restrict U,
				                            dfloat * restrict V,
				                            dfloat * restrict P){

	for(iint e=0;e<Nelements;++e;outer0){
		for(iint n=0;n<p_Np;++n;inner0){
      const iint id  = n + e*p_Np;

      //hard coded for 3 stages
      const int index0 = (index+0)%3;
      const int index1 = (index+2)%3; //back one step
      const int index2 = (index+1)%3; //back two steps

      const iint id0 = n + (e+index0*offset)*p_Np;
      const iint id1 = n + (e+index1*offset)*p_Np;
      const iint id2 = n + (e+index2*offset)*p_Np;

      // // Update Velocity u = u - dt/g0 * grad(Pr)
      U[id2] = U[id2] - dt/g0 * PIx[id];
      V[id2] = V[id2] - dt/g0 * PIy[id];

      // Get Pressure from Pressure Increament
       P[id2] = PI[id] + c0*P[id0] + c1*P[id1] + c2*P[id2];
		}
	}
}
