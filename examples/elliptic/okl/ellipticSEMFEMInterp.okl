
kernel void ellipticSEMFEMInterp(const dlong Nelements,
                                 const dfloat * restrict I,
                                 const dfloat * restrict q,
                                 dfloat * restrict Iq){

  for(dlong eo=0;eo<Nelements;eo+=p_NblockV;outer0){

    shared dfloat s_q[p_NblockV][p_Np];

    for(int es=0;es<p_NblockV;++es;inner1){
      for(int n=0;n<p_NpFEM;++n;inner0){
        dlong t = n + es*p_NpFEM;

        if(t<p_Np*p_NblockV)
          if((eo*p_Np + t)<Nelements*p_Np)
            s_q[0][t] = q[eo*p_Np+t];
      }
    }

    barrier(localMemFence);

    for(int es=0;es<p_NblockV;++es;inner1){
      for(int n=0;n<p_NpFEM;++n;inner0){
        const dlong e = eo + es;
        if(e<Nelements){
          dfloat tmp = 0.;
          occaUnroll(p_Np)
            for(int i=0;i<p_Np;++i){
              const dfloat In = I[n+i*p_NpFEM];
              tmp += In*s_q[es][i];
            }

          Iq[e*p_NpFEM+n] = tmp;
        }
      }
    }
  }
}
