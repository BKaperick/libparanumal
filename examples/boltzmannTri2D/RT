boltzmannMain2D.c:88:      mesh->Ntscale=1;
boltzmannMain2D.c:90:      mesh->Ntscale=i;
boltzmannSRABStep2D.c:17:  dfloat t = (tstep+1)*mesh->dt;
boltzmannSRABStep2D.c:24:  if(mesh->totalHaloPairs>0){
boltzmannSRABStep2D.c:27:      mesh->device.setStream(dataStream);
boltzmannSRABStep2D.c:30:    iint Nentries = mesh->Np*mesh->Nfields;
boltzmannSRABStep2D.c:31:    mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannSRABStep2D.c:33:                            mesh->o_haloElementList,
boltzmannSRABStep2D.c:34:                            mesh->o_q,
boltzmannSRABStep2D.c:35:                            mesh->o_haloBuffer);
boltzmannSRABStep2D.c:38:    mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannSRABStep2D.c:41:      mesh->device.setStream(defaultStream);
boltzmannSRABStep2D.c:46:  if (mesh->nonPmlNelements)
boltzmannSRABStep2D.c:47:    mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannSRABStep2D.c:48:                      mesh->o_nonPmlElementIds,
boltzmannSRABStep2D.c:51:                      mesh->Nrhs,
boltzmannSRABStep2D.c:52:                      mesh->shiftIndex,
boltzmannSRABStep2D.c:53:                      mesh->o_vgeo,
boltzmannSRABStep2D.c:54:                      mesh->o_DrT,
boltzmannSRABStep2D.c:55:                      mesh->o_DsT,
boltzmannSRABStep2D.c:56:                      mesh->o_q,
boltzmannSRABStep2D.c:57:                      mesh->o_rhsq);
boltzmannSRABStep2D.c:59:  if (mesh->pmlNelements)
boltzmannSRABStep2D.c:60:    mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannSRABStep2D.c:61:                          mesh->o_pmlElementIds,
boltzmannSRABStep2D.c:62:                          mesh->o_pmlIds,
boltzmannSRABStep2D.c:65:                          mesh->Nrhs,
boltzmannSRABStep2D.c:66:                          mesh->shiftIndex,
boltzmannSRABStep2D.c:67:                          mesh->o_vgeo,
boltzmannSRABStep2D.c:68:                          mesh->o_pmlSigmaX,
boltzmannSRABStep2D.c:69:                          mesh->o_pmlSigmaY,
boltzmannSRABStep2D.c:70:                          mesh->o_DrT,
boltzmannSRABStep2D.c:71:                          mesh->o_DsT,
boltzmannSRABStep2D.c:72:                          mesh->o_q,
boltzmannSRABStep2D.c:73:                          mesh->o_pmlqx,
boltzmannSRABStep2D.c:74:                          mesh->o_pmlqy,
boltzmannSRABStep2D.c:75:                          mesh->o_rhsq,
boltzmannSRABStep2D.c:76:                          mesh->o_pmlrhsqx,
boltzmannSRABStep2D.c:77:                          mesh->o_pmlrhsqy);
boltzmannSRABStep2D.c:82:    if (mesh->nonPmlNelements)
boltzmannSRABStep2D.c:83:      mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannSRABStep2D.c:84:                            mesh->o_nonPmlElementIds,
boltzmannSRABStep2D.c:85:                            mesh->Nrhs,
boltzmannSRABStep2D.c:86:                            mesh->shiftIndex,
boltzmannSRABStep2D.c:87:                            mesh->o_cubInterpT,
boltzmannSRABStep2D.c:88:                            mesh->o_cubProjectT,
boltzmannSRABStep2D.c:89:                            mesh->o_q,
boltzmannSRABStep2D.c:90:                            mesh->o_rhsq);  
boltzmannSRABStep2D.c:92:    if (mesh->pmlNelements)
boltzmannSRABStep2D.c:93:      mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannSRABStep2D.c:94:                                mesh->o_pmlElementIds,
boltzmannSRABStep2D.c:95:                                mesh->o_pmlIds,
boltzmannSRABStep2D.c:96:                                mesh->Nrhs,
boltzmannSRABStep2D.c:97:                                mesh->shiftIndex,
boltzmannSRABStep2D.c:98:                                mesh->o_cubInterpT,
boltzmannSRABStep2D.c:99:                                mesh->o_cubProjectT,
boltzmannSRABStep2D.c:100:                                mesh->o_q,
boltzmannSRABStep2D.c:101:                                mesh->o_rhsq);
boltzmannSRABStep2D.c:106:  if(mesh->totalHaloPairs>0){
boltzmannSRABStep2D.c:108:      mesh->device.setStream(dataStream);
boltzmannSRABStep2D.c:112:    mesh->device.finish();
boltzmannSRABStep2D.c:116:                          mesh->Nfields*mesh->Np*sizeof(dfloat),
boltzmannSRABStep2D.c:125:    size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannSRABStep2D.c:126:    mesh->o_q.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannSRABStep2D.c:127:    mesh->device.finish();        
boltzmannSRABStep2D.c:130:      mesh->device.setStream(defaultStream);
boltzmannSRABStep2D.c:135:  if (mesh->nonPmlNelements)
boltzmannSRABStep2D.c:136:    mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannSRABStep2D.c:137:                        mesh->o_nonPmlElementIds,
boltzmannSRABStep2D.c:140:                        mesh->Nrhs,
boltzmannSRABStep2D.c:141:                        mesh->shiftIndex,
boltzmannSRABStep2D.c:142:                        mesh->o_sgeo,
boltzmannSRABStep2D.c:143:                        mesh->o_LIFTT,
boltzmannSRABStep2D.c:144:                        mesh->o_vmapM,
boltzmannSRABStep2D.c:145:                        mesh->o_vmapP,
boltzmannSRABStep2D.c:146:                        mesh->o_EToB,
boltzmannSRABStep2D.c:147:                        mesh->o_x,
boltzmannSRABStep2D.c:148:                        mesh->o_y,
boltzmannSRABStep2D.c:149:                        mesh->o_q,
boltzmannSRABStep2D.c:150:                        mesh->o_rhsq);
boltzmannSRABStep2D.c:152:  if (mesh->pmlNelements)
boltzmannSRABStep2D.c:153:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannSRABStep2D.c:154:                          mesh->o_pmlElementIds,
boltzmannSRABStep2D.c:155:                          mesh->o_pmlIds,
boltzmannSRABStep2D.c:158:                          mesh->Nrhs,
boltzmannSRABStep2D.c:159:                          mesh->shiftIndex,
boltzmannSRABStep2D.c:160:                          mesh->o_sgeo,
boltzmannSRABStep2D.c:161:                          mesh->o_LIFTT,
boltzmannSRABStep2D.c:162:                          mesh->o_vmapM,
boltzmannSRABStep2D.c:163:                          mesh->o_vmapP,
boltzmannSRABStep2D.c:164:                          mesh->o_EToB,
boltzmannSRABStep2D.c:165:                          mesh->o_x,
boltzmannSRABStep2D.c:166:                          mesh->o_y,
boltzmannSRABStep2D.c:167:                          mesh->o_q,
boltzmannSRABStep2D.c:168:                          mesh->o_rhsq,
boltzmannSRABStep2D.c:169:                          mesh->o_pmlrhsqx,
boltzmannSRABStep2D.c:170:                          mesh->o_pmlrhsqy);
boltzmannSRABStep2D.c:177:  if (mesh->nonPmlNelements)
boltzmannSRABStep2D.c:178:    mesh->updateKernel(mesh->nonPmlNelements,
boltzmannSRABStep2D.c:179:                      mesh->o_nonPmlElementIds,
boltzmannSRABStep2D.c:180:                      mesh->MRAB_C[0],
boltzmannSRABStep2D.c:181:                      mesh->MRAB_A[id+0], //
boltzmannSRABStep2D.c:182:                      mesh->MRAB_A[id+1],
boltzmannSRABStep2D.c:183:                      mesh->MRAB_A[id+2], //
boltzmannSRABStep2D.c:184:                      mesh->shiftIndex,
boltzmannSRABStep2D.c:185:                      mesh->o_rhsq,
boltzmannSRABStep2D.c:186:                      mesh->o_q);
boltzmannSRABStep2D.c:188:  if (mesh->pmlNelements)
boltzmannSRABStep2D.c:189:    mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannSRABStep2D.c:190:                          mesh->o_pmlElementIds,
boltzmannSRABStep2D.c:191:                          mesh->o_pmlIds,
boltzmannSRABStep2D.c:192:                          mesh->MRAB_C[0],
boltzmannSRABStep2D.c:193:                          mesh->MRAB_A[id+0], //
boltzmannSRABStep2D.c:194:                          mesh->MRAB_A[id+1],
boltzmannSRABStep2D.c:195:                          mesh->MRAB_A[id+2], 
boltzmannSRABStep2D.c:196:                          mesh->shiftIndex,
boltzmannSRABStep2D.c:197:                          mesh->o_rhsq,
boltzmannSRABStep2D.c:198:                          mesh->o_pmlrhsqx,
boltzmannSRABStep2D.c:199:                          mesh->o_pmlrhsqy,
boltzmannSRABStep2D.c:200:                          mesh->o_q,
boltzmannSRABStep2D.c:201:                          mesh->o_pmlqx,
boltzmannSRABStep2D.c:202:                          mesh->o_pmlqy);
boltzmannSRABStep2D.c:205:  mesh->shiftIndex = (mesh->shiftIndex+1)%3;
meshBoltzmannUpdate2D.c:6:  for(iint n=0;n<mesh->Nelements*mesh->Np*mesh->Nfields;++n){
meshBoltzmannUpdate2D.c:8:    mesh->resq[n] = rka*mesh->resq[n] + mesh->dt*mesh->rhsq[n];
meshBoltzmannUpdate2D.c:10:    mesh->q[n] += rkb*mesh->resq[n];
meshBoltzmannSetup2D.c:11:  mesh->Nfields = 8;
meshBoltzmannSetup2D.c:14:  mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:16:  mesh->rhsq = (dfloat*) calloc(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:18:  mesh->resq = (dfloat*) calloc(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:21:  mesh->wx    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:23:  mesh->rhswx = (dfloat*) calloc(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:25:  mesh->reswx = (dfloat*) calloc(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannSetup2D.c:27:  mesh->sigmax= (dfloat*) calloc(mesh->Nelements,
meshBoltzmannSetup2D.c:31:  mesh->RT = 9.;
meshBoltzmannSetup2D.c:32:  mesh->sqrtRT = sqrt(mesh->RT);  
meshBoltzmannSetup2D.c:39:  dfloat q2bar = rho*u/mesh->sqrtRT;
meshBoltzmannSetup2D.c:40:  dfloat q3bar = rho*v/mesh->sqrtRT;
meshBoltzmannSetup2D.c:41:  dfloat q4bar = (rho*u*v - sigma12)/(mesh->sqrtRT*mesh->sqrtRT);
meshBoltzmannSetup2D.c:42:  dfloat q5bar = (rho*u*u - sigma11)/(sqrt(2.)*mesh->sqrtRT*mesh->sqrtRT);
meshBoltzmannSetup2D.c:43:  dfloat q6bar = (rho*v*v - sigma22)/(sqrt(2.)*mesh->sqrtRT*mesh->sqrtRT);
meshBoltzmannSetup2D.c:46:  for(iint e=0;e<mesh->Nelements;++e){
meshBoltzmannSetup2D.c:47:    for(iint n=0;n<mesh->Np;++n){
meshBoltzmannSetup2D.c:49:      dfloat x = mesh->x[n + mesh->Np*e];
meshBoltzmannSetup2D.c:50:      dfloat y = mesh->y[n + mesh->Np*e];
meshBoltzmannSetup2D.c:54:				mesh->q+cnt, mesh->q+cnt+1, mesh->q+cnt+2);
meshBoltzmannSetup2D.c:59:			       mesh->q+cnt,
meshBoltzmannSetup2D.c:60:			       mesh->q+cnt+1,
meshBoltzmannSetup2D.c:61:			       mesh->q+cnt+2,
meshBoltzmannSetup2D.c:62:			       mesh->q+cnt+3,
meshBoltzmannSetup2D.c:63:			       mesh->q+cnt+4,
meshBoltzmannSetup2D.c:64:			       mesh->q+cnt+5);
meshBoltzmannSetup2D.c:66:      mesh->q[cnt+0] = q1bar; // uniform density, zero flow
meshBoltzmannSetup2D.c:67:      mesh->q[cnt+1] = q2bar;
meshBoltzmannSetup2D.c:68:      mesh->q[cnt+2] = q3bar;
meshBoltzmannSetup2D.c:69:      mesh->q[cnt+3] = q4bar;
meshBoltzmannSetup2D.c:70:      mesh->q[cnt+4] = q5bar;
meshBoltzmannSetup2D.c:71:      mesh->q[cnt+5] = q6bar;
meshBoltzmannSetup2D.c:72:      cnt += mesh->Nfields;
meshBoltzmannSetup2D.c:80:  mesh->tauInv = mesh->RT/nu; // TW
meshBoltzmannSetup2D.c:83:  //  mesh->Lambda2 = 0.5/(sqrt(3.)*mesh->sqrtRT);
meshBoltzmannSetup2D.c:84:  mesh->Lambda2 = 0.5/(mesh->sqrtRT);
meshBoltzmannSetup2D.c:89:  for(iint e=0;e<mesh->Nelements;++e){
meshBoltzmannSetup2D.c:91:    for(iint n=0;n<mesh->Nverts;++n){
meshBoltzmannSetup2D.c:92:      cx += mesh->EX[e*mesh->Nverts+n];
meshBoltzmannSetup2D.c:94:    cx /= mesh->Nverts;
meshBoltzmannSetup2D.c:99:      mesh->sigmax[e] = xsigma;
meshBoltzmannSetup2D.c:105:  for(iint e=0;e<mesh->Nelements;++e){  
meshBoltzmannSetup2D.c:107:    for(iint f=0;f<mesh->Nfaces;++f){
meshBoltzmannSetup2D.c:108:      iint sid = mesh->Nsgeo*(mesh->Nfaces*e + f);
meshBoltzmannSetup2D.c:109:      dfloat sJ   = mesh->sgeo[sid + SJID];
meshBoltzmannSetup2D.c:110:      dfloat invJ = mesh->sgeo[sid + IJID];
meshBoltzmannSetup2D.c:124:  dfloat dt = cfl*hmin/((mesh->N+1.)*(mesh->N+1.)
meshBoltzmannSetup2D.c:125:			*mymax(mesh->Lambda2*mesh->RT*sqrt(2.), sqrt(3.)*mesh->sqrtRT));
meshBoltzmannSetup2D.c:130:  printf("max wave speed = %g\n", sqrt(3.)*mesh->sqrtRT);
meshBoltzmannSetup2D.c:135:  MPI_Allreduce(&dt, &(mesh->dt), 1, MPI_DFLOAT, MPI_MIN, MPI_COMM_WORLD);
meshBoltzmannSetup2D.c:138:  mesh->finalTime = 20;
meshBoltzmannSetup2D.c:139:  mesh->NtimeSteps = mesh->finalTime/mesh->dt;
meshBoltzmannSetup2D.c:140:  mesh->dt = mesh->finalTime/mesh->NtimeSteps;
meshBoltzmannSetup2D.c:143:  mesh->errorStep = 2000;
meshBoltzmannSetup2D.c:145:  printf("dt = %g\n", mesh->dt);
meshBoltzmannSetup2D.c:157:  mesh->device.setup(deviceConfig);
meshBoltzmannSetup2D.c:160:  dfloat *DrT = (dfloat*) calloc(mesh->Np*mesh->Np, sizeof(dfloat));
meshBoltzmannSetup2D.c:161:  dfloat *DsT = (dfloat*) calloc(mesh->Np*mesh->Np, sizeof(dfloat));
meshBoltzmannSetup2D.c:162:  for(int n=0;n<mesh->Np;++n){
meshBoltzmannSetup2D.c:163:    for(int m=0;m<mesh->Np;++m){
meshBoltzmannSetup2D.c:164:      DrT[n+m*mesh->Np] = mesh->Dr[n*mesh->Np+m];
meshBoltzmannSetup2D.c:165:      DsT[n+m*mesh->Np] = mesh->Ds[n*mesh->Np+m];
meshBoltzmannSetup2D.c:169:  dfloat *LIFTT = (dfloat*) calloc(mesh->Np*mesh->Nfaces*mesh->Nfp, sizeof(dfloat));
meshBoltzmannSetup2D.c:170:  for(int n=0;n<mesh->Np;++n){
meshBoltzmannSetup2D.c:171:    for(int m=0;m<mesh->Nfaces*mesh->Nfp;++m){
meshBoltzmannSetup2D.c:172:      LIFTT[n+m*mesh->Np] = mesh->LIFT[n*mesh->Nfp*mesh->Nfaces+m];
meshBoltzmannSetup2D.c:177:  iint *internalElementIds = (iint*) calloc(mesh->Nelements, sizeof(iint));
meshBoltzmannSetup2D.c:178:  iint *notInternalElementIds = (iint*) calloc(mesh->Nelements, sizeof(iint));
meshBoltzmannSetup2D.c:181:  for(iint e=0;e<mesh->Nelements;++e){
meshBoltzmannSetup2D.c:183:    for(iint f=0;f<mesh->Nfaces;++f)
meshBoltzmannSetup2D.c:184:      if(mesh->EToP[e*mesh->Nfaces+f]!=-1)
meshBoltzmannSetup2D.c:194:  mesh->NinternalElements = Ninterior;
meshBoltzmannSetup2D.c:195:  mesh->NnotInternalElements = NnotInterior;
meshBoltzmannSetup2D.c:197:    mesh->o_internalElementIds    = mesh->device.malloc(Ninterior*sizeof(iint), internalElementIds);
meshBoltzmannSetup2D.c:199:    mesh->o_notInternalElementIds = mesh->device.malloc(NnotInterior*sizeof(iint), notInternalElementIds);
meshBoltzmannSetup2D.c:202:  mesh->o_q =
meshBoltzmannSetup2D.c:203:    mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->q);
meshBoltzmannSetup2D.c:204:  mesh->o_rhsq =
meshBoltzmannSetup2D.c:205:    mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
meshBoltzmannSetup2D.c:206:  mesh->o_resq =
meshBoltzmannSetup2D.c:207:    mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->resq);
meshBoltzmannSetup2D.c:210:  mesh->o_wx =    
meshBoltzmannSetup2D.c:211:    mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->wx);
meshBoltzmannSetup2D.c:212:  mesh->o_rhswx =
meshBoltzmannSetup2D.c:213:    mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhswx);
meshBoltzmannSetup2D.c:214:  mesh->o_reswx =
meshBoltzmannSetup2D.c:215:    mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->reswx);
meshBoltzmannSetup2D.c:217:  mesh->o_sigmax =
meshBoltzmannSetup2D.c:218:    mesh->device.malloc(mesh->Nelements*sizeof(dfloat), mesh->sigmax);
meshBoltzmannSetup2D.c:220:  mesh->o_Dr = mesh->device.malloc(mesh->Np*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:221:				   mesh->Dr);
meshBoltzmannSetup2D.c:223:  mesh->o_Ds = mesh->device.malloc(mesh->Np*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:224:				   mesh->Ds);
meshBoltzmannSetup2D.c:226:  mesh->o_DrT = mesh->device.malloc(mesh->Np*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:229:  mesh->o_DsT = mesh->device.malloc(mesh->Np*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:232:  mesh->o_LIFT =
meshBoltzmannSetup2D.c:233:    mesh->device.malloc(mesh->Np*mesh->Nfaces*mesh->Nfp*sizeof(dfloat),
meshBoltzmannSetup2D.c:234:			mesh->LIFT);
meshBoltzmannSetup2D.c:236:  mesh->o_LIFTT =
meshBoltzmannSetup2D.c:237:    mesh->device.malloc(mesh->Np*mesh->Nfaces*mesh->Nfp*sizeof(dfloat),
meshBoltzmannSetup2D.c:241:  mesh->o_vgeo =
meshBoltzmannSetup2D.c:242:    mesh->device.malloc(mesh->Nelements*mesh->Nvgeo*sizeof(dfloat),
meshBoltzmannSetup2D.c:243:			mesh->vgeo);
meshBoltzmannSetup2D.c:245:  mesh->o_sgeo =
meshBoltzmannSetup2D.c:246:    mesh->device.malloc(mesh->Nelements*mesh->Nfaces*mesh->Nsgeo*sizeof(dfloat),
meshBoltzmannSetup2D.c:247:			mesh->sgeo);
meshBoltzmannSetup2D.c:249:  mesh->o_vmapM =
meshBoltzmannSetup2D.c:250:    mesh->device.malloc(mesh->Nelements*mesh->Nfp*mesh->Nfaces*sizeof(iint),
meshBoltzmannSetup2D.c:251:			mesh->vmapM);
meshBoltzmannSetup2D.c:253:  mesh->o_vmapP =
meshBoltzmannSetup2D.c:254:    mesh->device.malloc(mesh->Nelements*mesh->Nfp*mesh->Nfaces*sizeof(iint),
meshBoltzmannSetup2D.c:255:			mesh->vmapP);
meshBoltzmannSetup2D.c:257:  mesh->o_EToB =
meshBoltzmannSetup2D.c:258:    mesh->device.malloc(mesh->Nelements*mesh->Nfaces*sizeof(iint),
meshBoltzmannSetup2D.c:259:			mesh->EToB);
meshBoltzmannSetup2D.c:261:  mesh->o_x =
meshBoltzmannSetup2D.c:262:    mesh->device.malloc(mesh->Nelements*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:263:			mesh->x);
meshBoltzmannSetup2D.c:265:  mesh->o_y =
meshBoltzmannSetup2D.c:266:    mesh->device.malloc(mesh->Nelements*mesh->Np*sizeof(dfloat),
meshBoltzmannSetup2D.c:267:			mesh->y);
meshBoltzmannSetup2D.c:269:  if(mesh->totalHaloPairs>0){
meshBoltzmannSetup2D.c:271:    mesh->o_haloElementList =
meshBoltzmannSetup2D.c:272:      mesh->device.malloc(mesh->totalHaloPairs*sizeof(iint), mesh->haloElementList);
meshBoltzmannSetup2D.c:275:    mesh->o_haloBuffer =
meshBoltzmannSetup2D.c:276:      mesh->device.malloc(mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat));
meshBoltzmannSetup2D.c:285:  mesh->stream0 = mesh->device.getStream();
meshBoltzmannSetup2D.c:287:  mesh->stream1 = mesh->device.createStream();  // NBN: second stream
meshBoltzmannSetup2D.c:289:  mesh->stream1 = mesh->stream0;                // NBN: stream1 == stream0
meshBoltzmannSetup2D.c:291:  mesh->device.setStream(mesh->stream0);
meshBoltzmannSetup2D.c:296:  kernelInfo.addDefine("p_Nfields", mesh->Nfields);
meshBoltzmannSetup2D.c:297:  kernelInfo.addDefine("p_N", mesh->N);
meshBoltzmannSetup2D.c:298:  kernelInfo.addDefine("p_Np", mesh->Np);
meshBoltzmannSetup2D.c:299:  kernelInfo.addDefine("p_Nfp", mesh->Nfp);
meshBoltzmannSetup2D.c:300:  kernelInfo.addDefine("p_Nfaces", mesh->Nfaces);
meshBoltzmannSetup2D.c:301:  kernelInfo.addDefine("p_NfacesNfp", mesh->Nfp*mesh->Nfaces);
meshBoltzmannSetup2D.c:302:  kernelInfo.addDefine("p_Nvgeo", mesh->Nvgeo);
meshBoltzmannSetup2D.c:303:  kernelInfo.addDefine("p_Nsgeo", mesh->Nsgeo);
meshBoltzmannSetup2D.c:305:  int maxNodes = mymax(mesh->Np, (mesh->Nfp*mesh->Nfaces));
meshBoltzmannSetup2D.c:308:  int NblockV = 512/mesh->Np; // works for CUDA
meshBoltzmannSetup2D.c:316:  kernelInfo.addDefine("p_sqrtRT", mesh->sqrtRT);
meshBoltzmannSetup2D.c:319:  kernelInfo.addDefine("p_tauInv", mesh->tauInv);
meshBoltzmannSetup2D.c:347:  if(mesh->device.mode()=="CUDA"){ // add backend compiler optimization for CUDA
meshBoltzmannSetup2D.c:355:  mesh->volumeKernel =
meshBoltzmannSetup2D.c:356:    mesh->device.buildKernelFromSource("src/meshBoltzmannVolume2D.okl",
meshBoltzmannSetup2D.c:360:  mesh->surfaceKernel =
meshBoltzmannSetup2D.c:361:    mesh->device.buildKernelFromSource("src/meshBoltzmannSurface2D.okl",
meshBoltzmannSetup2D.c:366:  mesh->boltzmannPartialSurfaceKernel =
meshBoltzmannSetup2D.c:367:    mesh->device.buildKernelFromSource("src/meshBoltzmannPartialSurface2D.okl",
meshBoltzmannSetup2D.c:372:  mesh->updateKernel =
meshBoltzmannSetup2D.c:373:    mesh->device.buildKernelFromSource("src/meshBoltzmannUpdate2D.okl",
meshBoltzmannSetup2D.c:377:  mesh->pmlVolumeKernel =
meshBoltzmannSetup2D.c:378:    mesh->device.buildKernelFromSource("src/meshBoltzmannPmlVolume2D.okl",
meshBoltzmannSetup2D.c:382:  mesh->pmlSurfaceKernel =
meshBoltzmannSetup2D.c:383:    mesh->device.buildKernelFromSource("src/meshBoltzmannPmlSurface2D.okl",
meshBoltzmannSetup2D.c:386:  mesh->pmlUpdateKernel =
meshBoltzmannSetup2D.c:387:    mesh->device.buildKernelFromSource("src/meshBoltzmannPmlUpdate2D.okl",
meshBoltzmannSetup2D.c:391:  mesh->haloExtractKernel =
meshBoltzmannSetup2D.c:392:    mesh->device.buildKernelFromSource("src/meshHaloExtract2D.okl",
boltzmannMRRun2D.c:12:  iint haloBytes = mesh->totalHaloPairs*mesh->Nfp*mesh->Nfields*mesh->Nfaces*sizeof(dfloat);
boltzmannMRRun2D.c:14:    occa::memory o_sendBufferPinned = mesh->device.mappedAlloc(haloBytes, NULL);
boltzmannMRRun2D.c:15:    occa::memory o_recvBufferPinned = mesh->device.mappedAlloc(haloBytes, NULL);
boltzmannMRRun2D.c:24:  for (iint l=0; l<mesh->MRABNlevels; l++) {
boltzmannMRRun2D.c:27:       if (mesh->MRABNelements[l])
boltzmannMRRun2D.c:28:      mesh->updateKernel(mesh->MRABNelements[l],
boltzmannMRRun2D.c:29:                        mesh->o_MRABelementIds[l],
boltzmannMRRun2D.c:32:                        mesh->MRABshiftIndex[l],
boltzmannMRRun2D.c:33:                        mesh->o_vmapM,
boltzmannMRRun2D.c:34:                        mesh->o_rhsq,
boltzmannMRRun2D.c:35:                        mesh->o_fQM,
boltzmannMRRun2D.c:36:                        mesh->o_fQP,
boltzmannMRRun2D.c:37:                        mesh->o_q);
boltzmannMRRun2D.c:39:    if (mesh->MRABpmlNelements[l])
boltzmannMRRun2D.c:40:      mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannMRRun2D.c:41:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRRun2D.c:42:                            mesh->o_MRABpmlIds[l],
boltzmannMRRun2D.c:45:                            mesh->MRABshiftIndex[l],
boltzmannMRRun2D.c:46:                            mesh->o_vmapM,
boltzmannMRRun2D.c:47:                            mesh->o_rhsq,
boltzmannMRRun2D.c:48:                            mesh->o_pmlrhsqx,
boltzmannMRRun2D.c:49:                            mesh->o_pmlrhsqy,
boltzmannMRRun2D.c:50:                            mesh->o_q,
boltzmannMRRun2D.c:51:                            mesh->o_pmlqx,
boltzmannMRRun2D.c:52:                            mesh->o_pmlqy,
boltzmannMRRun2D.c:53:                            mesh->o_fQM,
boltzmannMRRun2D.c:54:                            mesh->o_fQP);
boltzmannMRRun2D.c:59:    if (mesh->MRABNelements[l])
boltzmannMRRun2D.c:60:      mesh->updateKernel(mesh->MRABNelements[l],
boltzmannMRRun2D.c:61:                        mesh->o_MRABelementIds[l],
boltzmannMRRun2D.c:65:                        mesh->MRABshiftIndex[l],
boltzmannMRRun2D.c:66:                        mesh->o_vmapM,
boltzmannMRRun2D.c:67:                        mesh->o_rhsq,
boltzmannMRRun2D.c:68:                        mesh->o_fQM,
boltzmannMRRun2D.c:69:                        mesh->o_fQP,
boltzmannMRRun2D.c:70:                        mesh->o_q);
boltzmannMRRun2D.c:72:    if (mesh->MRABpmlNelements[l])
boltzmannMRRun2D.c:73:      mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannMRRun2D.c:74:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRRun2D.c:75:                            mesh->o_MRABpmlIds[l],
boltzmannMRRun2D.c:79:                            mesh->MRABshiftIndex[l],
boltzmannMRRun2D.c:80:                            mesh->o_vmapM,
boltzmannMRRun2D.c:81:                            mesh->o_rhsq,
boltzmannMRRun2D.c:82:                            mesh->o_pmlrhsqx,
boltzmannMRRun2D.c:83:                            mesh->o_pmlrhsqy,
boltzmannMRRun2D.c:84:                            mesh->o_q,
boltzmannMRRun2D.c:85:                            mesh->o_pmlqx,
boltzmannMRRun2D.c:86:                            mesh->o_pmlqy,
boltzmannMRRun2D.c:87:                            mesh->o_fQM,
boltzmannMRRun2D.c:88:                            mesh->o_fQP);
boltzmannMRRun2D.c:95:occa::initTimer(mesh->device);
boltzmannMRRun2D.c:99:    mesh->device.finish();
boltzmannMRRun2D.c:102: for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
boltzmannMRRun2D.c:115:      if((tstep%mesh->errorStep)==0){
boltzmannMRRun2D.c:124:mesh->device.finish();
boltzmannMRRun2D.c:128:boltzmannReport2D(mesh, mesh->NtimeSteps,options);
boltzmannCouetteError2D.c:12:dfloat nu = mesh->sqrtRT*mesh->sqrtRT/mesh->tauInv;
boltzmannCouetteError2D.c:14:  for(iint e=0;e<mesh->Nelements;++e)
boltzmannCouetteError2D.c:16:    for(iint n=0;n<mesh->Np;++n)
boltzmannCouetteError2D.c:19:      iint id = n+e*mesh->Np;
boltzmannCouetteError2D.c:20:      dfloat x = mesh->x[id];
boltzmannCouetteError2D.c:21:      dfloat y = mesh->y[id];
boltzmannCouetteError2D.c:23:      dfloat u   = mesh->sqrtRT*mesh->q[id*mesh->Nfields + 1]/mesh->q[id*mesh->Nfields];
boltzmannCouetteError2D.c:37:      maxQ1 = mymax(maxQ1, fabs(mesh->q[id*mesh->Nfields]));
boltzmannCouetteError2D.c:38:      minQ1 = mymin(minQ1, fabs(mesh->q[id*mesh->Nfields]));
boltzmannCouetteError2D.c:59:    mesh->maxErrorBoltzmann = globalMaxErr; 
boltzmannMRABPmlSetup2D.c:10:  mesh->MRABpmlNelements = (iint *) calloc(mesh->MRABNlevels,sizeof(iint));
boltzmannMRABPmlSetup2D.c:11:  mesh->MRABpmlElementIds = (iint **) calloc(mesh->MRABNlevels,sizeof(iint*));
boltzmannMRABPmlSetup2D.c:12:  mesh->MRABpmlIds = (iint **) calloc(mesh->MRABNlevels, sizeof(iint*));
boltzmannMRABPmlSetup2D.c:14:  mesh->MRABpmlNhaloElements = (iint *) calloc(mesh->MRABNlevels,sizeof(iint));
boltzmannMRABPmlSetup2D.c:15:  mesh->MRABpmlHaloElementIds = (iint **) calloc(mesh->MRABNlevels,sizeof(iint*));
boltzmannMRABPmlSetup2D.c:16:  mesh->MRABpmlHaloIds = (iint **) calloc(mesh->MRABNlevels, sizeof(iint*));
boltzmannMRABPmlSetup2D.c:19:  mesh->pmlNelements=0;
boltzmannMRABPmlSetup2D.c:20:  for (iint lev =0;lev<mesh->MRABNlevels;lev++){
boltzmannMRABPmlSetup2D.c:21:    for (iint m=0;m<mesh->MRABNelements[lev];m++) {
boltzmannMRABPmlSetup2D.c:22:      iint e = mesh->MRABelementIds[lev][m];
boltzmannMRABPmlSetup2D.c:23:      int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:25:        mesh->pmlNelements++;
boltzmannMRABPmlSetup2D.c:26:        mesh->MRABpmlNelements[lev]++;
boltzmannMRABPmlSetup2D.c:29:    for (iint m=0;m<mesh->MRABNhaloElements[lev];m++) {
boltzmannMRABPmlSetup2D.c:30:      iint e = mesh->MRABhaloIds[lev][m];
boltzmannMRABPmlSetup2D.c:31:      int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:33:        mesh->MRABpmlNhaloElements[lev]++;
boltzmannMRABPmlSetup2D.c:39:  if (mesh->pmlNelements) {
boltzmannMRABPmlSetup2D.c:42:    iint *pmlIds = (iint *) calloc(mesh->Nelements,sizeof(iint));
boltzmannMRABPmlSetup2D.c:44:    for (iint e=0;e<mesh->Nelements;e++) {
boltzmannMRABPmlSetup2D.c:45:      int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:51:    for (iint lev =0;lev<mesh->MRABNlevels;lev++){
boltzmannMRABPmlSetup2D.c:52:      mesh->MRABpmlElementIds[lev] = (iint *) calloc(mesh->MRABpmlNelements[lev],sizeof(iint));
boltzmannMRABPmlSetup2D.c:53:      mesh->MRABpmlIds[lev] = (iint *) calloc(mesh->MRABpmlNelements[lev],sizeof(iint));
boltzmannMRABPmlSetup2D.c:54:      mesh->MRABpmlHaloElementIds[lev] = (iint *) calloc(mesh->MRABpmlNhaloElements[lev],sizeof(iint));
boltzmannMRABPmlSetup2D.c:55:      mesh->MRABpmlHaloIds[lev] = (iint *) calloc(mesh->MRABpmlNhaloElements[lev],sizeof(iint));
boltzmannMRABPmlSetup2D.c:59:      for (iint m=0;m<mesh->MRABNelements[lev];m++){
boltzmannMRABPmlSetup2D.c:60:        iint e = mesh->MRABelementIds[lev][m];
boltzmannMRABPmlSetup2D.c:61:        int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:64:          mesh->MRABpmlElementIds[lev][pmlcnt] = e;
boltzmannMRABPmlSetup2D.c:65:          mesh->MRABpmlIds[lev][pmlcnt] = pmlIds[e];
boltzmannMRABPmlSetup2D.c:68:          mesh->MRABelementIds[lev][nonpmlcnt] = e;
boltzmannMRABPmlSetup2D.c:75:      for (iint m=0;m<mesh->MRABNhaloElements[lev];m++){
boltzmannMRABPmlSetup2D.c:76:        iint e = mesh->MRABhaloIds[lev][m];
boltzmannMRABPmlSetup2D.c:77:        int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:80:          mesh->MRABpmlHaloElementIds[lev][pmlcnt] = e;
boltzmannMRABPmlSetup2D.c:81:          mesh->MRABpmlHaloIds[lev][pmlcnt] = pmlIds[e];
boltzmannMRABPmlSetup2D.c:84:          mesh->MRABhaloIds[lev][nonpmlcnt] = e;
boltzmannMRABPmlSetup2D.c:90:      mesh->MRABNelements[lev] -= mesh->MRABpmlNelements[lev];
boltzmannMRABPmlSetup2D.c:91:      mesh->MRABNhaloElements[lev] -= mesh->MRABpmlNhaloElements[lev];
boltzmannMRABPmlSetup2D.c:92:      mesh->MRABelementIds[lev] = (iint*) realloc(mesh->MRABelementIds[lev],mesh->MRABNelements[lev]*sizeof(iint));
boltzmannMRABPmlSetup2D.c:93:      mesh->MRABhaloIds[lev]    = (iint*) realloc(mesh->MRABhaloIds[lev],mesh->MRABNhaloElements[lev]*sizeof(iint));
boltzmannMRABPmlSetup2D.c:97:    mesh->pmlSigmaX = (dfloat *) calloc(mesh->pmlNelements*mesh->Np,sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:98:    mesh->pmlSigmaY = (dfloat *) calloc(mesh->pmlNelements*mesh->Np,sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:105:    for (iint e=0;e<mesh->Nelements;e++) {
boltzmannMRABPmlSetup2D.c:106:      for (int n=0;n<mesh->Nverts;n++) {
boltzmannMRABPmlSetup2D.c:107:        dfloat x = mesh->EX[e*mesh->Nverts+n];
boltzmannMRABPmlSetup2D.c:108:        dfloat y = mesh->EY[e*mesh->Nverts+n];
boltzmannMRABPmlSetup2D.c:117:      int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:120:      for (int n=0;n<mesh->Nverts;n++) {
boltzmannMRABPmlSetup2D.c:121:        dfloat x = mesh->EX[e*mesh->Nverts+n];
boltzmannMRABPmlSetup2D.c:122:        dfloat y = mesh->EY[e*mesh->Nverts+n];
boltzmannMRABPmlSetup2D.c:137:    for (iint lev =0;lev<mesh->MRABNlevels;lev++){
boltzmannMRABPmlSetup2D.c:138:      for (iint m=0;m<mesh->MRABpmlNelements[lev];m++) {
boltzmannMRABPmlSetup2D.c:139:        iint e = mesh->MRABpmlElementIds[lev][m];
boltzmannMRABPmlSetup2D.c:140:        iint pmlId = mesh->MRABpmlIds[lev][m];
boltzmannMRABPmlSetup2D.c:141:        int type = mesh->elementInfo[e];
boltzmannMRABPmlSetup2D.c:143:        iint id = e*mesh->Nverts;
boltzmannMRABPmlSetup2D.c:145:        dfloat xe1 = mesh->EX[id+0]; /* x-coordinates of vertices */
boltzmannMRABPmlSetup2D.c:146:        dfloat xe2 = mesh->EX[id+1];
boltzmannMRABPmlSetup2D.c:147:        dfloat xe3 = mesh->EX[id+2];
boltzmannMRABPmlSetup2D.c:149:        dfloat ye1 = mesh->EY[id+0]; /* y-coordinates of vertices */
boltzmannMRABPmlSetup2D.c:150:        dfloat ye2 = mesh->EY[id+1];
boltzmannMRABPmlSetup2D.c:151:        dfloat ye3 = mesh->EY[id+2];
boltzmannMRABPmlSetup2D.c:153:        for(iint n=0;n<mesh->Np;++n){ /* for each node */
boltzmannMRABPmlSetup2D.c:154:          dfloat x = mesh->x[n + e*mesh->Np];
boltzmannMRABPmlSetup2D.c:155:          dfloat y = mesh->y[n + e*mesh->Np];
boltzmannMRABPmlSetup2D.c:161:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmax,2)/xmaxScale;
boltzmannMRABPmlSetup2D.c:163:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmin,2)/xminScale;
boltzmannMRABPmlSetup2D.c:166:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymax,2)/ymaxScale;
boltzmannMRABPmlSetup2D.c:168:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymin,2)/yminScale;
boltzmannMRABPmlSetup2D.c:171:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmax,2)/xmaxScale;
boltzmannMRABPmlSetup2D.c:173:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmin,2)/xminScale;
boltzmannMRABPmlSetup2D.c:175:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymax,2)/ymaxScale;
boltzmannMRABPmlSetup2D.c:177:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymin,2)/yminScale;
boltzmannMRABPmlSetup2D.c:186:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannMRABPmlSetup2D.c:188:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannMRABPmlSetup2D.c:191:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannMRABPmlSetup2D.c:193:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannMRABPmlSetup2D.c:196:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannMRABPmlSetup2D.c:198:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannMRABPmlSetup2D.c:200:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannMRABPmlSetup2D.c:202:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannMRABPmlSetup2D.c:210:    mesh->pmlNelements, mesh->Nelements-mesh->pmlNelements);
boltzmannMRABPmlSetup2D.c:212:    mesh->pmlNfields = 6;
boltzmannMRABPmlSetup2D.c:214:      mesh->pmlqx    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:215:      mesh->pmlrhsqx = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:217:      mesh->pmlqy    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:218:      mesh->pmlrhsqy = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannMRABPmlSetup2D.c:222:      mesh->o_pmlqx     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannMRABPmlSetup2D.c:223:      mesh->o_pmlrhsqx  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqx);
boltzmannMRABPmlSetup2D.c:225:      mesh->o_pmlqy     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannMRABPmlSetup2D.c:226:      mesh->o_pmlrhsqy  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqy);
boltzmannMRABPmlSetup2D.c:229:    mesh->o_pmlSigmaX = mesh->device.malloc(mesh->pmlNelements*mesh->Np*sizeof(dfloat),mesh->pmlSigmaX);
boltzmannMRABPmlSetup2D.c:230:    mesh->o_pmlSigmaY = mesh->device.malloc(mesh->pmlNelements*mesh->Np*sizeof(dfloat),mesh->pmlSigmaY);
boltzmannMRABPmlSetup2D.c:234:    mesh->o_MRABpmlElementIds     = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABPmlSetup2D.c:235:    mesh->o_MRABpmlIds            = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABPmlSetup2D.c:236:    mesh->o_MRABpmlHaloElementIds = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABPmlSetup2D.c:237:    mesh->o_MRABpmlHaloIds        = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABPmlSetup2D.c:238:    for (iint lev=0;lev<mesh->MRABNlevels;lev++) {
boltzmannMRABPmlSetup2D.c:239:      if (mesh->MRABpmlNelements[lev]) {
boltzmannMRABPmlSetup2D.c:240:        mesh->o_MRABpmlElementIds[lev] = mesh->device.malloc(mesh->MRABpmlNelements[lev]*sizeof(iint),
boltzmannMRABPmlSetup2D.c:241:           mesh->MRABpmlElementIds[lev]);
boltzmannMRABPmlSetup2D.c:242:        mesh->o_MRABpmlIds[lev] = mesh->device.malloc(mesh->MRABpmlNelements[lev]*sizeof(iint),
boltzmannMRABPmlSetup2D.c:243:           mesh->MRABpmlIds[lev]);
boltzmannMRABPmlSetup2D.c:245:      if (mesh->MRABpmlNhaloElements[lev]) {
boltzmannMRABPmlSetup2D.c:246:        mesh->o_MRABpmlHaloElementIds[lev] = mesh->device.malloc(mesh->MRABpmlNhaloElements[lev]*sizeof(iint),
boltzmannMRABPmlSetup2D.c:247:           mesh->MRABpmlHaloElementIds[lev]);
boltzmannMRABPmlSetup2D.c:248:        mesh->o_MRABpmlHaloIds[lev] = mesh->device.malloc(mesh->MRABpmlNhaloElements[lev]*sizeof(iint),
boltzmannMRABPmlSetup2D.c:249:           mesh->MRABpmlHaloIds[lev]);
boltzmannMRSAABStep2D.c:7:for (iint Ntick=0; Ntick < pow(2,mesh->MRABNlevels-1);Ntick++) {
boltzmannMRSAABStep2D.c:10:    dfloat t = mesh->dt*(tstep*pow(2,mesh->MRABNlevels-1) + Ntick);
boltzmannMRSAABStep2D.c:32:      for (lev=0;lev<mesh->MRABNlevels;lev++)
boltzmannMRSAABStep2D.c:37:    if(mesh->totalHaloPairs>0){
boltzmannMRSAABStep2D.c:40:          mesh->device.setStream(dataStream);
boltzmannMRSAABStep2D.c:43:        iint Nentries = mesh->Nfp*mesh->Nfields*mesh->Nfaces;
boltzmannMRSAABStep2D.c:44:        mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannMRSAABStep2D.c:46:                    mesh->o_haloElementList,
boltzmannMRSAABStep2D.c:47:                    mesh->o_fQP,
boltzmannMRSAABStep2D.c:48:                    mesh->o_haloBuffer);
boltzmannMRSAABStep2D.c:51:        mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannMRSAABStep2D.c:54:          mesh->device.setStream(defaultStream);
boltzmannMRSAABStep2D.c:61:        if (mesh->MRABNelements[l])
boltzmannMRSAABStep2D.c:62:             mesh->volumeKernel(mesh->MRABNelements[l],
boltzmannMRSAABStep2D.c:63:                            mesh->o_MRABelementIds[l],
boltzmannMRSAABStep2D.c:66:                            mesh->Nrhs,
boltzmannMRSAABStep2D.c:67:                            mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:68:                            mesh->o_vgeo,
boltzmannMRSAABStep2D.c:69:                            mesh->o_DrT,
boltzmannMRSAABStep2D.c:70:                            mesh->o_DsT,
boltzmannMRSAABStep2D.c:71:                            mesh->o_q,
boltzmannMRSAABStep2D.c:72:                            mesh->o_rhsq);
boltzmannMRSAABStep2D.c:74:        if (mesh->MRABpmlNelements[l])
boltzmannMRSAABStep2D.c:75:          mesh->pmlVolumeKernel(mesh->MRABpmlNelements[l],
boltzmannMRSAABStep2D.c:76:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRSAABStep2D.c:77:                            mesh->o_MRABpmlIds[l],
boltzmannMRSAABStep2D.c:80:                            mesh->Nrhs,
boltzmannMRSAABStep2D.c:81:                            mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:82:                            mesh->o_vgeo,
boltzmannMRSAABStep2D.c:83:                            mesh->o_pmlSigmaX,
boltzmannMRSAABStep2D.c:84:                            mesh->o_pmlSigmaY,
boltzmannMRSAABStep2D.c:85:                            mesh->o_DrT,
boltzmannMRSAABStep2D.c:86:                            mesh->o_DsT,
boltzmannMRSAABStep2D.c:87:                            mesh->o_q,
boltzmannMRSAABStep2D.c:88:                            mesh->o_pmlqx,
boltzmannMRSAABStep2D.c:89:                            mesh->o_pmlqy,
boltzmannMRSAABStep2D.c:90:                            mesh->o_rhsq,
boltzmannMRSAABStep2D.c:91:                            mesh->o_pmlrhsqx,
boltzmannMRSAABStep2D.c:92:                            mesh->o_pmlrhsqy);
boltzmannMRSAABStep2D.c:101:        if (mesh->MRABNelements[l])
boltzmannMRSAABStep2D.c:102:              mesh->relaxationKernel(mesh->MRABNelements[l],
boltzmannMRSAABStep2D.c:103:                            mesh->o_MRABelementIds[l],
boltzmannMRSAABStep2D.c:104:                            mesh->Nrhs,
boltzmannMRSAABStep2D.c:105:                            mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:106:                            mesh->o_cubInterpT,
boltzmannMRSAABStep2D.c:107:                            mesh->o_cubProjectT,
boltzmannMRSAABStep2D.c:108:                            mesh->o_q,
boltzmannMRSAABStep2D.c:109:                            mesh->o_rhsq);  
boltzmannMRSAABStep2D.c:111:        if (mesh->MRABpmlNelements[l])
boltzmannMRSAABStep2D.c:112:             mesh->pmlRelaxationKernel(mesh->MRABpmlNelements[l],
boltzmannMRSAABStep2D.c:113:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRSAABStep2D.c:114:                            mesh->o_MRABpmlIds[l],
boltzmannMRSAABStep2D.c:115:                            mesh->Nrhs,
boltzmannMRSAABStep2D.c:116:                            mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:117:                            mesh->o_cubInterpT,
boltzmannMRSAABStep2D.c:118:                            mesh->o_cubProjectT,
boltzmannMRSAABStep2D.c:119:                            mesh->o_q,
boltzmannMRSAABStep2D.c:120:                            mesh->o_rhsq);
boltzmannMRSAABStep2D.c:125:       if(mesh->totalHaloPairs>0){
boltzmannMRSAABStep2D.c:127:          mesh->device.setStream(dataStream);
boltzmannMRSAABStep2D.c:131:        mesh->device.finish();
boltzmannMRSAABStep2D.c:135:              mesh->Nfields*mesh->Nfp*mesh->Nfaces*sizeof(dfloat),
boltzmannMRSAABStep2D.c:143:        size_t offset = mesh->Nfaces*mesh->Nfp*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannMRSAABStep2D.c:144:        mesh->o_fQP.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannMRSAABStep2D.c:145:        mesh->device.finish();        
boltzmannMRSAABStep2D.c:148:          mesh->device.setStream(defaultStream);
boltzmannMRSAABStep2D.c:155:        if (mesh->MRABNelements[l])
boltzmannMRSAABStep2D.c:156:          mesh->surfaceKernel(mesh->MRABNelements[l],
boltzmannMRSAABStep2D.c:157:                              mesh->o_MRABelementIds[l],
boltzmannMRSAABStep2D.c:160:                              mesh->Nrhs,
boltzmannMRSAABStep2D.c:161:                              mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:162:                              mesh->o_sgeo,
boltzmannMRSAABStep2D.c:163:                              mesh->o_LIFTT,
boltzmannMRSAABStep2D.c:164:                              mesh->o_vmapM,
boltzmannMRSAABStep2D.c:165:                              mesh->o_mapP,
boltzmannMRSAABStep2D.c:166:                              mesh->o_EToB,
boltzmannMRSAABStep2D.c:167:                              mesh->o_x,
boltzmannMRSAABStep2D.c:168:                              mesh->o_y,
boltzmannMRSAABStep2D.c:169:                              mesh->o_q,
boltzmannMRSAABStep2D.c:170:                              mesh->o_fQM,
boltzmannMRSAABStep2D.c:171:                              mesh->o_fQP,
boltzmannMRSAABStep2D.c:172:                              mesh->o_rhsq);
boltzmannMRSAABStep2D.c:174:        if (mesh->MRABpmlNelements[l])
boltzmannMRSAABStep2D.c:175:          mesh->pmlSurfaceKernel(mesh->MRABpmlNelements[l],
boltzmannMRSAABStep2D.c:176:                              mesh->o_MRABpmlElementIds[l],
boltzmannMRSAABStep2D.c:177:                              mesh->o_MRABpmlIds[l],
boltzmannMRSAABStep2D.c:180:                              mesh->Nrhs,
boltzmannMRSAABStep2D.c:181:                              mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:182:                              mesh->o_sgeo,
boltzmannMRSAABStep2D.c:183:                              mesh->o_LIFTT,
boltzmannMRSAABStep2D.c:184:                              mesh->o_vmapM,
boltzmannMRSAABStep2D.c:185:                              mesh->o_mapP,
boltzmannMRSAABStep2D.c:186:                              mesh->o_EToB,
boltzmannMRSAABStep2D.c:187:                              mesh->o_x,
boltzmannMRSAABStep2D.c:188:                              mesh->o_y,
boltzmannMRSAABStep2D.c:189:                              mesh->o_q,
boltzmannMRSAABStep2D.c:190:                              mesh->o_fQM,
boltzmannMRSAABStep2D.c:191:                              mesh->o_fQP,
boltzmannMRSAABStep2D.c:192:                              mesh->o_rhsq,
boltzmannMRSAABStep2D.c:193:                              mesh->o_pmlrhsqx,
boltzmannMRSAABStep2D.c:194:                              mesh->o_pmlrhsqy);
boltzmannMRSAABStep2D.c:198:      for (lev=0;lev<mesh->MRABNlevels;lev++)
boltzmannMRSAABStep2D.c:205:        const iint id = mrab_order*mesh->MRABNlevels*3 + l*3;
boltzmannMRSAABStep2D.c:208:          if (mesh->MRABNelements[l])
boltzmannMRSAABStep2D.c:209:            mesh->updateKernel(mesh->MRABNelements[l],
boltzmannMRSAABStep2D.c:210:                              mesh->o_MRABelementIds[l],
boltzmannMRSAABStep2D.c:211:                              mesh->MRSAAB_C[l], //
boltzmannMRSAABStep2D.c:212:                              mesh->MRAB_A[id+0], //
boltzmannMRSAABStep2D.c:213:                              mesh->MRAB_A[id+1],
boltzmannMRSAABStep2D.c:214:                              mesh->MRAB_A[id+2], //
boltzmannMRSAABStep2D.c:215:                              mesh->MRSAAB_A[id+0], //
boltzmannMRSAABStep2D.c:216:                              mesh->MRSAAB_A[id+1],
boltzmannMRSAABStep2D.c:217:                              mesh->MRSAAB_A[id+2], //
boltzmannMRSAABStep2D.c:218:                              mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:219:                              mesh->o_vmapM,
boltzmannMRSAABStep2D.c:220:                              mesh->o_rhsq,
boltzmannMRSAABStep2D.c:221:                              mesh->o_fQM,
boltzmannMRSAABStep2D.c:222:                              mesh->o_fQP,
boltzmannMRSAABStep2D.c:223:                              mesh->o_q);
boltzmannMRSAABStep2D.c:225:          if (mesh->MRABpmlNelements[l])
boltzmannMRSAABStep2D.c:226:            mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannMRSAABStep2D.c:227:                                  mesh->o_MRABpmlElementIds[l],
boltzmannMRSAABStep2D.c:228:                                  mesh->o_MRABpmlIds[l],
boltzmannMRSAABStep2D.c:229:                                  mesh->MRSAAB_C[l], //
boltzmannMRSAABStep2D.c:230:                                  mesh->MRAB_A[id+0], //
boltzmannMRSAABStep2D.c:231:                                  mesh->MRAB_A[id+1],
boltzmannMRSAABStep2D.c:232:                                  mesh->MRAB_A[id+2], //
boltzmannMRSAABStep2D.c:233:                                  mesh->MRSAAB_A[id+0], //
boltzmannMRSAABStep2D.c:234:                                  mesh->MRSAAB_A[id+1],
boltzmannMRSAABStep2D.c:235:                                  mesh->MRSAAB_A[id+2], //
boltzmannMRSAABStep2D.c:236:                                  mesh->MRABshiftIndex[l],
boltzmannMRSAABStep2D.c:237:                                  mesh->o_vmapM,
boltzmannMRSAABStep2D.c:238:                                  mesh->o_rhsq,
boltzmannMRSAABStep2D.c:239:                                  mesh->o_pmlrhsqx,
boltzmannMRSAABStep2D.c:240:                                  mesh->o_pmlrhsqy,
boltzmannMRSAABStep2D.c:241:                                  mesh->o_q,
boltzmannMRSAABStep2D.c:242:                                  mesh->o_pmlqx,
boltzmannMRSAABStep2D.c:243:                                  mesh->o_pmlqy,
boltzmannMRSAABStep2D.c:244:                                  mesh->o_fQM,
boltzmannMRSAABStep2D.c:245:                                  mesh->o_fQP);
boltzmannMRSAABStep2D.c:248:          mesh->MRABshiftIndex[l] = (mesh->MRABshiftIndex[l]+1)%3;
boltzmannMRSAABStep2D.c:252:        if (lev<mesh->MRABNlevels) {
boltzmannMRSAABStep2D.c:254:          const iint id = mrab_order*mesh->MRABNlevels*3 + (lev-1)*3;
boltzmannMRSAABStep2D.c:256:          if (mesh->MRABNhaloElements[lev])
boltzmannMRSAABStep2D.c:257:            mesh->traceUpdateKernel(mesh->MRABNhaloElements[lev],
boltzmannMRSAABStep2D.c:258:                                    mesh->o_MRABhaloIds[lev],
boltzmannMRSAABStep2D.c:259:                                    mesh->MRSAAB_C[lev-1], //
boltzmannMRSAABStep2D.c:260:                                    mesh->MRAB_B[id+0], //
boltzmannMRSAABStep2D.c:261:                                    mesh->MRAB_B[id+1],
boltzmannMRSAABStep2D.c:262:                                    mesh->MRAB_B[id+2], //
boltzmannMRSAABStep2D.c:263:                                    mesh->MRSAAB_B[id+0], //
boltzmannMRSAABStep2D.c:264:                                    mesh->MRSAAB_B[id+1],
boltzmannMRSAABStep2D.c:265:                                    mesh->MRSAAB_B[id+2], 
boltzmannMRSAABStep2D.c:266:                                    mesh->MRABshiftIndex[lev],
boltzmannMRSAABStep2D.c:267:                                    mesh->o_vmapM,
boltzmannMRSAABStep2D.c:268:                                    mesh->o_rhsq,
boltzmannMRSAABStep2D.c:269:                                    mesh->o_fQM,
boltzmannMRSAABStep2D.c:270:                                    mesh->o_fQP,
boltzmannMRSAABStep2D.c:271:                                    mesh->o_q);
boltzmannMRSAABStep2D.c:273:          if (mesh->MRABpmlNhaloElements[lev])
boltzmannMRSAABStep2D.c:274:            mesh->pmlTraceUpdateKernel(mesh->MRABpmlNhaloElements[lev],
boltzmannMRSAABStep2D.c:275:                                      mesh->o_MRABpmlHaloElementIds[lev],
boltzmannMRSAABStep2D.c:276:                                      mesh->o_MRABpmlHaloIds[lev],
boltzmannMRSAABStep2D.c:277:                                      mesh->MRSAAB_C[lev-1], //
boltzmannMRSAABStep2D.c:278:                                      mesh->MRAB_B[id+0], //
boltzmannMRSAABStep2D.c:279:                                      mesh->MRAB_B[id+1],
boltzmannMRSAABStep2D.c:280:                                      mesh->MRAB_B[id+2], //
boltzmannMRSAABStep2D.c:281:                                      mesh->MRSAAB_B[id+0], //
boltzmannMRSAABStep2D.c:282:                                      mesh->MRSAAB_B[id+1],
boltzmannMRSAABStep2D.c:283:                                      mesh->MRSAAB_B[id+2], 
boltzmannMRSAABStep2D.c:284:                                      mesh->MRABshiftIndex[lev],
boltzmannMRSAABStep2D.c:285:                                      mesh->o_vmapM,
boltzmannMRSAABStep2D.c:286:                                      mesh->o_rhsq,
boltzmannMRSAABStep2D.c:287:                                      mesh->o_pmlrhsqx,
boltzmannMRSAABStep2D.c:288:                                      mesh->o_pmlrhsqy,
boltzmannMRSAABStep2D.c:289:                                      mesh->o_q,
boltzmannMRSAABStep2D.c:290:                                      mesh->o_pmlqx,
boltzmannMRSAABStep2D.c:291:                                      mesh->o_pmlqy,
boltzmannMRSAABStep2D.c:292:                                      mesh->o_fQM,
boltzmannMRSAABStep2D.c:293:                                      mesh->o_fQP);
boltzmannSplitPmlRightHandSide2D.c:6:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
boltzmannSplitPmlRightHandSide2D.c:10:  occa::initTimer(mesh->device);
boltzmannSplitPmlRightHandSide2D.c:13:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
boltzmannSplitPmlRightHandSide2D.c:15:    for(iint rk=0;rk<mesh->Nrk;++rk){
boltzmannSplitPmlRightHandSide2D.c:17:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
boltzmannSplitPmlRightHandSide2D.c:19:      if(mesh->totalHaloPairs>0){
boltzmannSplitPmlRightHandSide2D.c:21:	iint Nentries = mesh->Np*mesh->Nfields;
boltzmannSplitPmlRightHandSide2D.c:23:	mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannSplitPmlRightHandSide2D.c:25:				mesh->o_haloElementList,
boltzmannSplitPmlRightHandSide2D.c:26:				mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:27:				mesh->o_haloBuffer);
boltzmannSplitPmlRightHandSide2D.c:30:	mesh->o_haloBuffer.copyTo(sendBuffer);      
boltzmannSplitPmlRightHandSide2D.c:34:				mesh->Np*mesh->Nfields*sizeof(dfloat),
boltzmannSplitPmlRightHandSide2D.c:42:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:46:      mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannSplitPmlRightHandSide2D.c:47:			    mesh->o_pmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:48:			    mesh->o_vgeo,
boltzmannSplitPmlRightHandSide2D.c:49:			    mesh->o_sigmax,
boltzmannSplitPmlRightHandSide2D.c:50:			    mesh->o_sigmay,
boltzmannSplitPmlRightHandSide2D.c:51:			    mesh->o_DrT,
boltzmannSplitPmlRightHandSide2D.c:52:			    mesh->o_DsT,
boltzmannSplitPmlRightHandSide2D.c:53:			    mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:54:			    mesh->o_pmlqx,
boltzmannSplitPmlRightHandSide2D.c:55:			    mesh->o_pmlqy,
boltzmannSplitPmlRightHandSide2D.c:56:			    mesh->o_pmlNT,
boltzmannSplitPmlRightHandSide2D.c:57:			    mesh->o_rhspmlqx,
boltzmannSplitPmlRightHandSide2D.c:58:			    mesh->o_rhspmlqy,
boltzmannSplitPmlRightHandSide2D.c:59:			    mesh->o_rhspmlNT);
boltzmannSplitPmlRightHandSide2D.c:63:      if(mesh->nonPmlNelements)
boltzmannSplitPmlRightHandSide2D.c:64:	mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannSplitPmlRightHandSide2D.c:65:			   mesh->o_nonPmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:68:			   mesh->o_vgeo,
boltzmannSplitPmlRightHandSide2D.c:69:			   mesh->o_DrT,
boltzmannSplitPmlRightHandSide2D.c:70:			   mesh->o_DsT,
boltzmannSplitPmlRightHandSide2D.c:71:			   mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:72:			   mesh->o_rhsq);
boltzmannSplitPmlRightHandSide2D.c:75:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:80:      mesh->relaxationKernel(mesh->pmlNelements,
boltzmannSplitPmlRightHandSide2D.c:81:			     mesh->o_pmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:82:			     mesh->o_cubInterpT,
boltzmannSplitPmlRightHandSide2D.c:83:			     mesh->o_cubProjectT,
boltzmannSplitPmlRightHandSide2D.c:84:			     mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:85:			     mesh->o_rhspmlqx,
boltzmannSplitPmlRightHandSide2D.c:86:			     mesh->o_rhspmlqy,
boltzmannSplitPmlRightHandSide2D.c:87:			     mesh->o_rhspmlNT);
boltzmannSplitPmlRightHandSide2D.c:89:      if(mesh->totalHaloPairs>0){
boltzmannSplitPmlRightHandSide2D.c:94:	size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannSplitPmlRightHandSide2D.c:95:	mesh->o_q.copyFrom(recvBuffer, haloBytes, offset);
boltzmannSplitPmlRightHandSide2D.c:98:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:102:      mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannSplitPmlRightHandSide2D.c:103:			     mesh->o_pmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:104:			     mesh->o_sgeo,
boltzmannSplitPmlRightHandSide2D.c:105:			     mesh->o_LIFTT,
boltzmannSplitPmlRightHandSide2D.c:106:			     mesh->o_vmapM,
boltzmannSplitPmlRightHandSide2D.c:107:			     mesh->o_vmapP,
boltzmannSplitPmlRightHandSide2D.c:108:			     mesh->o_EToB,
boltzmannSplitPmlRightHandSide2D.c:110:			     mesh->o_x,
boltzmannSplitPmlRightHandSide2D.c:111:			     mesh->o_y,
boltzmannSplitPmlRightHandSide2D.c:113:			     mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:114:			     mesh->o_rhspmlqx,
boltzmannSplitPmlRightHandSide2D.c:115:			     mesh->o_rhspmlqy);
boltzmannSplitPmlRightHandSide2D.c:117:      if(mesh->nonPmlNelements)
boltzmannSplitPmlRightHandSide2D.c:118:	mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannSplitPmlRightHandSide2D.c:119:			    mesh->o_nonPmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:120:			    mesh->o_sgeo,
boltzmannSplitPmlRightHandSide2D.c:121:			    mesh->o_LIFTT,
boltzmannSplitPmlRightHandSide2D.c:122:			    mesh->o_vmapM,
boltzmannSplitPmlRightHandSide2D.c:123:			    mesh->o_vmapP,
boltzmannSplitPmlRightHandSide2D.c:124:			    mesh->o_EToB,
boltzmannSplitPmlRightHandSide2D.c:126:			    mesh->o_x,
boltzmannSplitPmlRightHandSide2D.c:127:			    mesh->o_y,
boltzmannSplitPmlRightHandSide2D.c:129:			    mesh->o_q,
boltzmannSplitPmlRightHandSide2D.c:130:			    mesh->o_rhsq);
boltzmannSplitPmlRightHandSide2D.c:132:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:138:      dfloat tupdate = tstep*mesh->dt + mesh->dt*mesh->rkc[rk+1];
boltzmannSplitPmlRightHandSide2D.c:142:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:145:      mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannSplitPmlRightHandSide2D.c:146:			    mesh->o_pmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:147:			    mesh->dt,
boltzmannSplitPmlRightHandSide2D.c:148:			    mesh->rka[rk],
boltzmannSplitPmlRightHandSide2D.c:149:			    mesh->rkb[rk],
boltzmannSplitPmlRightHandSide2D.c:151:			    mesh->o_rhspmlqx,
boltzmannSplitPmlRightHandSide2D.c:152:			    mesh->o_rhspmlqy,
boltzmannSplitPmlRightHandSide2D.c:153:			    mesh->o_rhspmlNT,
boltzmannSplitPmlRightHandSide2D.c:154:			    mesh->o_respmlqx,
boltzmannSplitPmlRightHandSide2D.c:155:			    mesh->o_respmlqy,
boltzmannSplitPmlRightHandSide2D.c:156:			    mesh->o_respmlNT,
boltzmannSplitPmlRightHandSide2D.c:157:			    mesh->o_pmlqx,
boltzmannSplitPmlRightHandSide2D.c:158:			    mesh->o_pmlqy,
boltzmannSplitPmlRightHandSide2D.c:159:			    mesh->o_pmlNT,
boltzmannSplitPmlRightHandSide2D.c:160:			    mesh->o_q);
boltzmannSplitPmlRightHandSide2D.c:162:      if(mesh->nonPmlNelements)
boltzmannSplitPmlRightHandSide2D.c:163:	mesh->updateKernel(mesh->nonPmlNelements,
boltzmannSplitPmlRightHandSide2D.c:164:			   mesh->o_nonPmlElementIds,
boltzmannSplitPmlRightHandSide2D.c:165:			   mesh->dt,
boltzmannSplitPmlRightHandSide2D.c:166:			   mesh->rka[rk],
boltzmannSplitPmlRightHandSide2D.c:167:			   mesh->rkb[rk],
boltzmannSplitPmlRightHandSide2D.c:168:			   mesh->o_rhsq,
boltzmannSplitPmlRightHandSide2D.c:169:			   mesh->o_resq,
boltzmannSplitPmlRightHandSide2D.c:170:			   mesh->o_q);
boltzmannSplitPmlRightHandSide2D.c:172:      mesh->device.finish();
boltzmannSplitPmlRightHandSide2D.c:178:    if((tstep%mesh->errorStep)==0){
boltzmannSplitPmlRightHandSide2D.c:179:      dfloat t = (tstep+1)*mesh->dt;
boltzmannSplitPmlRightHandSide2D.c:182:      mesh->o_q.copyTo(mesh->q);
boltzmannSplitPmlRightHandSide2D.c:197:      boltzmannComputeVorticity2D(mesh, mesh->q, 0, mesh->Nfields);
boltzmannSplitPmlRightHandSide2D.c:202:      sprintf(fname, "foo_T%04d", tstep/mesh->errorStep);
boltzmannLserk3Step2D.c:11:    dfloat t = tstep*mesh->dt + mesh->dt*mesh->lserk3c[rk];
boltzmannLserk3Step2D.c:13:    if(mesh->totalHaloPairs>0){
boltzmannLserk3Step2D.c:15:      iint Nentries = mesh->Np*mesh->Nfields;
boltzmannLserk3Step2D.c:17:      mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannLserk3Step2D.c:19:			      mesh->o_haloElementList,
boltzmannLserk3Step2D.c:20:			      mesh->o_q,
boltzmannLserk3Step2D.c:21:			      mesh->o_haloBuffer);
boltzmannLserk3Step2D.c:24:      mesh->o_haloBuffer.copyTo(sendBuffer);      
boltzmannLserk3Step2D.c:28:			    mesh->Np*mesh->Nfields*sizeof(dfloat),
boltzmannLserk3Step2D.c:37:    mesh->device.finish();
boltzmannLserk3Step2D.c:41:    if(mesh->pmlNelements){	
boltzmannLserk3Step2D.c:42:      mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannLserk3Step2D.c:43:			    mesh->o_pmlElementIds,
boltzmannLserk3Step2D.c:44:			    mesh->o_vgeo,
boltzmannLserk3Step2D.c:45:			    mesh->o_sigmax,
boltzmannLserk3Step2D.c:46:			    mesh->o_sigmay,
boltzmannLserk3Step2D.c:47:			    mesh->o_DrT,
boltzmannLserk3Step2D.c:48:			    mesh->o_DsT,
boltzmannLserk3Step2D.c:49:			    mesh->o_q,
boltzmannLserk3Step2D.c:50:			    mesh->o_pmlqx,
boltzmannLserk3Step2D.c:51:			    mesh->o_pmlqy,
boltzmannLserk3Step2D.c:52:			    mesh->o_pmlNT,
boltzmannLserk3Step2D.c:53:			    mesh->o_rhspmlqx,
boltzmannLserk3Step2D.c:54:			    mesh->o_rhspmlqy,
boltzmannLserk3Step2D.c:55:			    mesh->o_rhspmlNT);
boltzmannLserk3Step2D.c:63:    if(mesh->nonPmlNelements){
boltzmannLserk3Step2D.c:64:      mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannLserk3Step2D.c:65:			 mesh->o_nonPmlElementIds,
boltzmannLserk3Step2D.c:68:			 mesh->o_vgeo,
boltzmannLserk3Step2D.c:69:			 mesh->o_DrT,
boltzmannLserk3Step2D.c:70:			 mesh->o_DsT,
boltzmannLserk3Step2D.c:71:			 mesh->o_q,
boltzmannLserk3Step2D.c:72:			 mesh->o_rhsq);
boltzmannLserk3Step2D.c:76:    mesh->device.finish();
boltzmannLserk3Step2D.c:82:    if(mesh->pmlNelements)
boltzmannLserk3Step2D.c:83:      mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannLserk3Step2D.c:84:			     mesh->o_pmlElementIds,
boltzmannLserk3Step2D.c:85:			     mesh->o_cubInterpT,
boltzmannLserk3Step2D.c:86:			     mesh->o_cubProjectT,
boltzmannLserk3Step2D.c:87:			     mesh->o_q,
boltzmannLserk3Step2D.c:88:			     mesh->o_rhspmlqx,
boltzmannLserk3Step2D.c:89:			     mesh->o_rhspmlqy,
boltzmannLserk3Step2D.c:90:			     mesh->o_rhspmlNT);
boltzmannLserk3Step2D.c:93:    if(mesh->nonPmlNelements)
boltzmannLserk3Step2D.c:94:      mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannLserk3Step2D.c:95:			     mesh->o_nonPmlElementIds,
boltzmannLserk3Step2D.c:96:			     mesh->o_cubInterpT,
boltzmannLserk3Step2D.c:97:			     mesh->o_cubProjectT,
boltzmannLserk3Step2D.c:98:			     mesh->o_q,
boltzmannLserk3Step2D.c:99:			     mesh->o_rhsq);
boltzmannLserk3Step2D.c:104:    if(mesh->totalHaloPairs>0){
boltzmannLserk3Step2D.c:109:      size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannLserk3Step2D.c:110:      mesh->o_q.copyFrom(recvBuffer, haloBytes, offset);
boltzmannLserk3Step2D.c:113:    mesh->device.finish();
boltzmannLserk3Step2D.c:116:     if(mesh->pmlNelements)
boltzmannLserk3Step2D.c:118:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannLserk3Step2D.c:119:			   mesh->o_pmlElementIds,
boltzmannLserk3Step2D.c:120:			   mesh->o_sgeo,
boltzmannLserk3Step2D.c:121:			   mesh->o_LIFTT,
boltzmannLserk3Step2D.c:122:			   mesh->o_vmapM,
boltzmannLserk3Step2D.c:123:			   mesh->o_vmapP,
boltzmannLserk3Step2D.c:124:			   mesh->o_EToB,
boltzmannLserk3Step2D.c:126:			   mesh->o_x,
boltzmannLserk3Step2D.c:127:			   mesh->o_y,
boltzmannLserk3Step2D.c:129:			   mesh->o_q,
boltzmannLserk3Step2D.c:130:			   mesh->o_rhspmlqx,
boltzmannLserk3Step2D.c:131:			   mesh->o_rhspmlqy);
boltzmannLserk3Step2D.c:133:    if(mesh->nonPmlNelements)
boltzmannLserk3Step2D.c:134:      mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannLserk3Step2D.c:135:			  mesh->o_nonPmlElementIds,
boltzmannLserk3Step2D.c:136:			  mesh->o_sgeo,
boltzmannLserk3Step2D.c:137:			  mesh->o_LIFTT,
boltzmannLserk3Step2D.c:138:			  mesh->o_vmapM,
boltzmannLserk3Step2D.c:139:			  mesh->o_vmapP,
boltzmannLserk3Step2D.c:140:			  mesh->o_EToB,
boltzmannLserk3Step2D.c:142:			  mesh->o_x,
boltzmannLserk3Step2D.c:143:			  mesh->o_y,
boltzmannLserk3Step2D.c:145:			  mesh->o_q,
boltzmannLserk3Step2D.c:146:			  mesh->o_rhsq);
boltzmannLserk3Step2D.c:148:    mesh->device.finish();
boltzmannLserk3Step2D.c:152:    dfloat tupdate = tstep*mesh->dt + mesh->dt*mesh->lserk3c[rk+1];
boltzmannLserk3Step2D.c:156:    mesh->device.finish();
boltzmannLserk3Step2D.c:159:    //printf("running with %d pml Nelements\n",mesh->pmlNelements);    
boltzmannLserk3Step2D.c:160:    if (mesh->pmlNelements)   
boltzmannLserk3Step2D.c:161:      mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannLserk3Step2D.c:162:			    mesh->o_pmlElementIds,
boltzmannLserk3Step2D.c:163:			    mesh->dt,
boltzmannLserk3Step2D.c:164:			    mesh->lserk3a[rk],
boltzmannLserk3Step2D.c:165:			    mesh->lserk3b[rk],
boltzmannLserk3Step2D.c:167:			    mesh->o_rhspmlqx,
boltzmannLserk3Step2D.c:168:			    mesh->o_rhspmlqy,
boltzmannLserk3Step2D.c:169:			    mesh->o_rhspmlNT,
boltzmannLserk3Step2D.c:170:			    mesh->o_respmlqx,
boltzmannLserk3Step2D.c:171:			    mesh->o_respmlqy,
boltzmannLserk3Step2D.c:172:			    mesh->o_respmlNT,
boltzmannLserk3Step2D.c:173:			    mesh->o_pmlqx,
boltzmannLserk3Step2D.c:174:			    mesh->o_pmlqy,
boltzmannLserk3Step2D.c:175:			    mesh->o_pmlNT,
boltzmannLserk3Step2D.c:176:			    mesh->o_q);
boltzmannLserk3Step2D.c:178:    if(mesh->nonPmlNelements)
boltzmannLserk3Step2D.c:179:      mesh->updateKernel(mesh->nonPmlNelements,
boltzmannLserk3Step2D.c:180:			 mesh->o_nonPmlElementIds,
boltzmannLserk3Step2D.c:181:			 mesh->dt,
boltzmannLserk3Step2D.c:182:			 mesh->lserk3a[rk],
boltzmannLserk3Step2D.c:183:			 mesh->lserk3b[rk],
boltzmannLserk3Step2D.c:184:			 mesh->o_rhsq,
boltzmannLserk3Step2D.c:185:			 mesh->o_resq,
boltzmannLserk3Step2D.c:186:			 mesh->o_q);
boltzmannLserk3Step2D.c:188:    mesh->device.finish();
boltzmannPeriodic2D.c:9:        for(iint n=0;n<mesh->Nfp;++n)
boltzmannPeriodic2D.c:11:          iint  id1 = mesh->faceNodes[f1*mesh->Nfp+n] + k1*mesh->Np;
boltzmannPeriodic2D.c:12:          dfloat x1 = mesh->x[id1];
boltzmannPeriodic2D.c:13:          dfloat y1 = mesh->y[id1];
boltzmannPeriodic2D.c:15:          iint  id2 = mesh->faceNodes[f2*mesh->Nfp+n] + k2*mesh->Np;
boltzmannPeriodic2D.c:16:          dfloat x2 = mesh->x[id2];
boltzmannPeriodic2D.c:17:          dfloat y2 = mesh->y[id2];
boltzmannPeriodic2D.c:25:           xc1 /= mesh->Nfp;
boltzmannPeriodic2D.c:26:           yc1 /= mesh->Nfp;
boltzmannPeriodic2D.c:27:           xc2 /= mesh->Nfp;
boltzmannPeriodic2D.c:28:           yc2 /= mesh->Nfp;
boltzmannPeriodic2D.c:71:    for(iint e=0;e<mesh->Nelements;++e)
boltzmannPeriodic2D.c:73:      for(iint f=0;f<mesh->Nfaces;++f)
boltzmannPeriodic2D.c:75:        iint e1 = mesh->EToE[e*mesh->Nfaces+f];
boltzmannPeriodic2D.c:76:        iint f1 = mesh->EToF[e*mesh->Nfaces+f];
boltzmannPeriodic2D.c:77:        iint bc1 = mesh->EToB[e*mesh->Nfaces+f];
boltzmannPeriodic2D.c:84:              for(iint k=0;k<mesh->Nelements;++k)
boltzmannPeriodic2D.c:86:                  for(iint l=0;l<mesh->Nfaces;++l)
boltzmannPeriodic2D.c:88:                    iint e2  = mesh->EToE[k*mesh->Nfaces+l];
boltzmannPeriodic2D.c:89:                    iint f2  = mesh->EToF[k*mesh->Nfaces+l];
boltzmannPeriodic2D.c:90:                    iint bc2 = mesh->EToB[k*mesh->Nfaces+l];
boltzmannPeriodic2D.c:102:                             mesh->EToE[e*mesh->Nfaces+f] = k;
boltzmannPeriodic2D.c:103:                             mesh->EToE[k*mesh->Nfaces+l] = e;
boltzmannPeriodic2D.c:105:                             mesh->EToF[e*mesh->Nfaces+f] = l;
boltzmannPeriodic2D.c:106:                             mesh->EToF[k*mesh->Nfaces+l] = f;
boltzmannPeriodic2D.c:108:                              for(iint n=0;n<mesh->Nfp;++n){
boltzmannPeriodic2D.c:109:                                  iint  id1M = mesh->faceNodes[f*mesh->Nfp+n] + e*mesh->Np;
boltzmannPeriodic2D.c:110:                                  iint  id2M = mesh->faceNodes[l*mesh->Nfp+n] + k*mesh->Np;
boltzmannPeriodic2D.c:112:                                  dfloat x1M = mesh->x[id1M];
boltzmannPeriodic2D.c:113:                                  dfloat y1M = mesh->y[id1M];
boltzmannPeriodic2D.c:115:                                  dfloat x2M = mesh->x[id2M];
boltzmannPeriodic2D.c:116:                                  dfloat y2M = mesh->y[id2M];
boltzmannPeriodic2D.c:118:                                  iint   id1 = mesh->Nfaces*mesh->Nfp*e + f*mesh->Nfp + n;
boltzmannPeriodic2D.c:119:                                  iint   id2 = mesh->Nfaces*mesh->Nfp*k + l*mesh->Nfp + n;
boltzmannPeriodic2D.c:130:                                         mesh->Nfp, 
boltzmannPeriodic2D.c:131:                                         mesh->faceNodes+f1P*mesh->Nfp,
boltzmannPeriodic2D.c:132:                                         mesh->x+e1P*mesh->Np,
boltzmannPeriodic2D.c:133:                                         mesh->y+e1P*mesh->Np, &n1P);
boltzmannPeriodic2D.c:138:                                         mesh->Nfp, 
boltzmannPeriodic2D.c:139:                                         mesh->faceNodes+f2P*mesh->Nfp,
boltzmannPeriodic2D.c:140:                                         mesh->x+e2P*mesh->Np,
boltzmannPeriodic2D.c:141:                                         mesh->y+e2P*mesh->Np, &n2P);
boltzmannPeriodic2D.c:145:                                  mesh->vmapM[id1] = id1M;
boltzmannPeriodic2D.c:146:                                  mesh->vmapP[id1] = id1P + e1P*mesh->Np;
boltzmannPeriodic2D.c:149:                                  mesh->vmapM[id2] = id2M;
boltzmannPeriodic2D.c:150:                                  mesh->vmapP[id2] = id2P + e2P*mesh->Np;
boltzmannPeriodic2D.c:153:                                  mesh->mapP[id1] = e1P*mesh->Nfaces*mesh->Nfp + f1P*mesh->Nfp + n1P;  
boltzmannPeriodic2D.c:156:                                  mesh->mapP[id2] = e2P*mesh->Nfaces*mesh->Nfp + f2P*mesh->Nfp + n2P;
boltzmannMrabStep2D.c:11: dfloat t = tstep*mesh->dt;
boltzmannMrabStep2D.c:13:if(mesh->totalHaloPairs>0){
boltzmannMrabStep2D.c:14:      iint Nentries = mesh->Np*mesh->Nfields;
boltzmannMrabStep2D.c:16:      mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannMrabStep2D.c:18:			      mesh->o_haloElementList,
boltzmannMrabStep2D.c:19:			      mesh->o_q,
boltzmannMrabStep2D.c:20:			      mesh->o_haloBuffer);
boltzmannMrabStep2D.c:23:      mesh->o_haloBuffer.copyTo(sendBuffer);      
boltzmannMrabStep2D.c:27:			    mesh->Np*mesh->Nfields*sizeof(dfloat),
boltzmannMrabStep2D.c:35:    mesh->device.finish();
boltzmannMrabStep2D.c:39:    if(mesh->pmlNelements){	
boltzmannMrabStep2D.c:40:      mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannMrabStep2D.c:41:			    mesh->o_pmlElementIds,
boltzmannMrabStep2D.c:42:			    mesh->o_vgeo,
boltzmannMrabStep2D.c:43:			    mesh->o_sigmax,
boltzmannMrabStep2D.c:44:			    mesh->o_sigmay,
boltzmannMrabStep2D.c:45:			    mesh->o_DrT,
boltzmannMrabStep2D.c:46:			    mesh->o_DsT,
boltzmannMrabStep2D.c:47:			    mesh->o_q,
boltzmannMrabStep2D.c:48:			    mesh->o_pmlqx,
boltzmannMrabStep2D.c:49:			    mesh->o_pmlqy,
boltzmannMrabStep2D.c:50:			    mesh->o_pmlNT,
boltzmannMrabStep2D.c:51:			    mesh->o_rhspmlqx,
boltzmannMrabStep2D.c:52:			    mesh->o_rhspmlqy,
boltzmannMrabStep2D.c:53:			    mesh->o_rhspmlNT);
boltzmannMrabStep2D.c:61:    if(mesh->nonPmlNelements){
boltzmannMrabStep2D.c:62:      mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:63:			 mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:66:			 mesh->o_vgeo,
boltzmannMrabStep2D.c:67:			 mesh->o_DrT,
boltzmannMrabStep2D.c:68:			 mesh->o_DsT,
boltzmannMrabStep2D.c:69:			 mesh->o_q,
boltzmannMrabStep2D.c:70:			 mesh->o_rhsq);
boltzmannMrabStep2D.c:74:    mesh->device.finish();
boltzmannMrabStep2D.c:79:    if(mesh->pmlNelements)
boltzmannMrabStep2D.c:80:      mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannMrabStep2D.c:81:			     mesh->o_pmlElementIds,
boltzmannMrabStep2D.c:82:			     mesh->o_cubInterpT,
boltzmannMrabStep2D.c:83:			     mesh->o_cubProjectT,
boltzmannMrabStep2D.c:84:			     mesh->o_q,
boltzmannMrabStep2D.c:85:			     mesh->o_rhspmlqx,
boltzmannMrabStep2D.c:86:			     mesh->o_rhspmlqy,
boltzmannMrabStep2D.c:87:			     mesh->o_rhspmlNT);
boltzmannMrabStep2D.c:90:    if(mesh->nonPmlNelements)
boltzmannMrabStep2D.c:91:      mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:92:			     mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:93:			     mesh->o_cubInterpT,
boltzmannMrabStep2D.c:94:			     mesh->o_cubProjectT,
boltzmannMrabStep2D.c:95:			     mesh->o_q,
boltzmannMrabStep2D.c:96:			     mesh->o_rhsq);
boltzmannMrabStep2D.c:101:    if(mesh->totalHaloPairs>0){
boltzmannMrabStep2D.c:106:      size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannMrabStep2D.c:107:      mesh->o_q.copyFrom(recvBuffer, haloBytes, offset);
boltzmannMrabStep2D.c:110:    mesh->device.finish();
boltzmannMrabStep2D.c:113:     if(mesh->pmlNelements){
boltzmannMrabStep2D.c:115:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannMrabStep2D.c:116:			   mesh->o_pmlElementIds,
boltzmannMrabStep2D.c:117:			   mesh->o_sgeo,
boltzmannMrabStep2D.c:118:			   mesh->o_LIFTT,
boltzmannMrabStep2D.c:119:			   mesh->o_vmapM,
boltzmannMrabStep2D.c:120:			   mesh->o_vmapP,
boltzmannMrabStep2D.c:121:			   mesh->o_EToB,
boltzmannMrabStep2D.c:123:			   mesh->o_x,
boltzmannMrabStep2D.c:124:			   mesh->o_y,
boltzmannMrabStep2D.c:126:			   mesh->o_q,
boltzmannMrabStep2D.c:127:			   mesh->o_rhspmlqx,
boltzmannMrabStep2D.c:128:			   mesh->o_rhspmlqy);
boltzmannMrabStep2D.c:131:    if(mesh->nonPmlNelements){
boltzmannMrabStep2D.c:132:      mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:133:			  mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:134:			  mesh->o_sgeo,
boltzmannMrabStep2D.c:135:			  mesh->o_LIFTT,
boltzmannMrabStep2D.c:136:			  mesh->o_vmapM,
boltzmannMrabStep2D.c:137:			  mesh->o_vmapP,
boltzmannMrabStep2D.c:138:			  mesh->o_EToB,
boltzmannMrabStep2D.c:140:			  mesh->o_x,
boltzmannMrabStep2D.c:141:			  mesh->o_y,
boltzmannMrabStep2D.c:143:			  mesh->o_q,
boltzmannMrabStep2D.c:144:			  mesh->o_rhsq);
boltzmannMrabStep2D.c:147:    mesh->device.finish();
boltzmannMrabStep2D.c:150:  mesh->device.finish();
boltzmannMrabStep2D.c:154:	if(mesh->nonPmlNelements){
boltzmannMrabStep2D.c:155:		dfloat abc1 = mesh->dt;
boltzmannMrabStep2D.c:158:		     mesh->updateKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:159:				 mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:160:				 mesh->dt,
boltzmannMrabStep2D.c:164:				 mesh->o_rhsq3,
boltzmannMrabStep2D.c:165:				 mesh->o_rhsq2,
boltzmannMrabStep2D.c:166:				 mesh->o_rhsq,
boltzmannMrabStep2D.c:167:				 mesh->o_q);
boltzmannMrabStep2D.c:171:    if(mesh->nonPmlNelements){
boltzmannMrabStep2D.c:172:    	dfloat abc1 = 3.0*mesh->dt/2.0;
boltzmannMrabStep2D.c:173:    	dfloat abc2 = -1.0*mesh->dt/2.0;
boltzmannMrabStep2D.c:176:		    mesh->updateKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:177:				 mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:178:				 mesh->dt,
boltzmannMrabStep2D.c:182:				 mesh->o_rhsq3,
boltzmannMrabStep2D.c:183:				 mesh->o_rhsq2,
boltzmannMrabStep2D.c:184:				 mesh->o_rhsq,
boltzmannMrabStep2D.c:185:				 mesh->o_q);
boltzmannMrabStep2D.c:191:	if(mesh->nonPmlNelements){
boltzmannMrabStep2D.c:192:		    mesh->updateKernel(mesh->nonPmlNelements,
boltzmannMrabStep2D.c:193:				 mesh->o_nonPmlElementIds,
boltzmannMrabStep2D.c:194:				 mesh->dt,
boltzmannMrabStep2D.c:195:				 mesh->mrab[0],
boltzmannMrabStep2D.c:196:				 mesh->mrab[1],
boltzmannMrabStep2D.c:197:				 mesh->mrab[2],
boltzmannMrabStep2D.c:198:				 mesh->o_rhsq3,
boltzmannMrabStep2D.c:199:				 mesh->o_rhsq2,
boltzmannMrabStep2D.c:200:				 mesh->o_rhsq,
boltzmannMrabStep2D.c:201:				 mesh->o_q);
boltzmannMrabStep2D.c:207:mesh->device.finish();
boltzmannSAABStep2D.c:17:  dfloat t = mesh->startTime + (tstep+1)*mesh->dt;
boltzmannSAABStep2D.c:24:  if(mesh->totalHaloPairs>0){
boltzmannSAABStep2D.c:27:      mesh->device.setStream(dataStream);
boltzmannSAABStep2D.c:30:    iint Nentries = mesh->Np*mesh->Nfields;
boltzmannSAABStep2D.c:31:    mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannSAABStep2D.c:33:                            mesh->o_haloElementList,
boltzmannSAABStep2D.c:34:                            mesh->o_q,
boltzmannSAABStep2D.c:35:                            mesh->o_haloBuffer);
boltzmannSAABStep2D.c:38:    mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannSAABStep2D.c:41:      mesh->device.setStream(defaultStream);
boltzmannSAABStep2D.c:46:  if (mesh->nonPmlNelements)
boltzmannSAABStep2D.c:47:    mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannSAABStep2D.c:48:                      mesh->o_nonPmlElementIds,
boltzmannSAABStep2D.c:51:                      mesh->Nrhs,
boltzmannSAABStep2D.c:52:                      mesh->shiftIndex,
boltzmannSAABStep2D.c:53:                      mesh->o_vgeo,
boltzmannSAABStep2D.c:54:                      mesh->o_DrT,
boltzmannSAABStep2D.c:55:                      mesh->o_DsT,
boltzmannSAABStep2D.c:56:                      mesh->o_q,
boltzmannSAABStep2D.c:57:                      mesh->o_rhsq);
boltzmannSAABStep2D.c:59:  if (mesh->pmlNelements)
boltzmannSAABStep2D.c:60:    mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannSAABStep2D.c:61:                          mesh->o_pmlElementIds,
boltzmannSAABStep2D.c:62:                          mesh->o_pmlIds,
boltzmannSAABStep2D.c:65:                          mesh->Nrhs,
boltzmannSAABStep2D.c:66:                          mesh->shiftIndex,
boltzmannSAABStep2D.c:67:                          mesh->o_vgeo,
boltzmannSAABStep2D.c:68:                          mesh->o_pmlSigmaX,
boltzmannSAABStep2D.c:69:                          mesh->o_pmlSigmaY,
boltzmannSAABStep2D.c:70:                          mesh->o_DrT,
boltzmannSAABStep2D.c:71:                          mesh->o_DsT,
boltzmannSAABStep2D.c:72:                          mesh->o_q,
boltzmannSAABStep2D.c:73:                          mesh->o_pmlqx,
boltzmannSAABStep2D.c:74:                          mesh->o_pmlqy,
boltzmannSAABStep2D.c:75:                          mesh->o_rhsq,
boltzmannSAABStep2D.c:76:                          mesh->o_pmlrhsqx,
boltzmannSAABStep2D.c:77:                          mesh->o_pmlrhsqy);
boltzmannSAABStep2D.c:82:    if (mesh->nonPmlNelements)
boltzmannSAABStep2D.c:83:      mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannSAABStep2D.c:84:                            mesh->o_nonPmlElementIds,
boltzmannSAABStep2D.c:85:                            mesh->Nrhs,
boltzmannSAABStep2D.c:86:                            mesh->shiftIndex,
boltzmannSAABStep2D.c:87:                            mesh->o_cubInterpT,
boltzmannSAABStep2D.c:88:                            mesh->o_cubProjectT,
boltzmannSAABStep2D.c:89:                            mesh->o_q,
boltzmannSAABStep2D.c:90:                            mesh->o_rhsq);  
boltzmannSAABStep2D.c:92:    if (mesh->pmlNelements)
boltzmannSAABStep2D.c:93:      mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannSAABStep2D.c:94:                                mesh->o_pmlElementIds,
boltzmannSAABStep2D.c:95:                                mesh->o_pmlIds,
boltzmannSAABStep2D.c:96:                                mesh->Nrhs,
boltzmannSAABStep2D.c:97:                                mesh->shiftIndex,
boltzmannSAABStep2D.c:98:                                mesh->o_cubInterpT,
boltzmannSAABStep2D.c:99:                                mesh->o_cubProjectT,
boltzmannSAABStep2D.c:100:                                mesh->o_q,
boltzmannSAABStep2D.c:101:                                mesh->o_rhsq);
boltzmannSAABStep2D.c:106:  if(mesh->totalHaloPairs>0){
boltzmannSAABStep2D.c:108:      mesh->device.setStream(dataStream);
boltzmannSAABStep2D.c:112:    mesh->device.finish();
boltzmannSAABStep2D.c:116:                          mesh->Nfields*mesh->Np*sizeof(dfloat),
boltzmannSAABStep2D.c:125:    size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannSAABStep2D.c:126:    mesh->o_q.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannSAABStep2D.c:127:    mesh->device.finish();        
boltzmannSAABStep2D.c:130:      mesh->device.setStream(defaultStream);
boltzmannSAABStep2D.c:135:  if (mesh->nonPmlNelements)
boltzmannSAABStep2D.c:136:    mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannSAABStep2D.c:137:                        mesh->o_nonPmlElementIds,
boltzmannSAABStep2D.c:140:                        mesh->Nrhs,
boltzmannSAABStep2D.c:141:                        mesh->shiftIndex,
boltzmannSAABStep2D.c:142:                        mesh->o_sgeo,
boltzmannSAABStep2D.c:143:                        mesh->o_LIFTT,
boltzmannSAABStep2D.c:144:                        mesh->o_vmapM,
boltzmannSAABStep2D.c:145:                        mesh->o_vmapP,
boltzmannSAABStep2D.c:146:                        mesh->o_EToB,
boltzmannSAABStep2D.c:147:                        mesh->o_x,
boltzmannSAABStep2D.c:148:                        mesh->o_y,
boltzmannSAABStep2D.c:149:                        mesh->o_q,
boltzmannSAABStep2D.c:150:                        mesh->o_rhsq);
boltzmannSAABStep2D.c:152:  if (mesh->pmlNelements)
boltzmannSAABStep2D.c:153:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannSAABStep2D.c:154:                          mesh->o_pmlElementIds,
boltzmannSAABStep2D.c:155:                          mesh->o_pmlIds,
boltzmannSAABStep2D.c:158:                          mesh->Nrhs,
boltzmannSAABStep2D.c:159:                          mesh->shiftIndex,
boltzmannSAABStep2D.c:160:                          mesh->o_sgeo,
boltzmannSAABStep2D.c:161:                          mesh->o_LIFTT,
boltzmannSAABStep2D.c:162:                          mesh->o_vmapM,
boltzmannSAABStep2D.c:163:                          mesh->o_vmapP,
boltzmannSAABStep2D.c:164:                          mesh->o_EToB,
boltzmannSAABStep2D.c:165:                          mesh->o_x,
boltzmannSAABStep2D.c:166:                          mesh->o_y,
boltzmannSAABStep2D.c:167:                          mesh->o_q,
boltzmannSAABStep2D.c:168:                          mesh->o_rhsq,
boltzmannSAABStep2D.c:169:                          mesh->o_pmlrhsqx,
boltzmannSAABStep2D.c:170:                          mesh->o_pmlrhsqy);
boltzmannSAABStep2D.c:177:  if (mesh->nonPmlNelements)
boltzmannSAABStep2D.c:178:    mesh->updateKernel(mesh->nonPmlNelements,
boltzmannSAABStep2D.c:179:                      mesh->o_nonPmlElementIds,
boltzmannSAABStep2D.c:180:                      mesh->MRSAAB_C[0], //
boltzmannSAABStep2D.c:181:                      mesh->MRAB_A[id+0], //
boltzmannSAABStep2D.c:182:                      mesh->MRAB_A[id+1],
boltzmannSAABStep2D.c:183:                      mesh->MRAB_A[id+2], //
boltzmannSAABStep2D.c:184:                      mesh->MRSAAB_A[id+0], //
boltzmannSAABStep2D.c:185:                      mesh->MRSAAB_A[id+1],
boltzmannSAABStep2D.c:186:                      mesh->MRSAAB_A[id+2], 
boltzmannSAABStep2D.c:187:                      mesh->shiftIndex,
boltzmannSAABStep2D.c:188:                      mesh->o_rhsq,
boltzmannSAABStep2D.c:189:                      mesh->o_q);
boltzmannSAABStep2D.c:191:  if (mesh->pmlNelements)
boltzmannSAABStep2D.c:192:    mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannSAABStep2D.c:193:                          mesh->o_pmlElementIds,
boltzmannSAABStep2D.c:194:                          mesh->o_pmlIds,
boltzmannSAABStep2D.c:195:                          mesh->MRSAAB_C[0], //
boltzmannSAABStep2D.c:196:                          mesh->MRAB_A[id+0], //
boltzmannSAABStep2D.c:197:                          mesh->MRAB_A[id+1],
boltzmannSAABStep2D.c:198:                          mesh->MRAB_A[id+2], //
boltzmannSAABStep2D.c:199:                          mesh->MRSAAB_A[id+0], //
boltzmannSAABStep2D.c:200:                          mesh->MRSAAB_A[id+1],
boltzmannSAABStep2D.c:201:                          mesh->MRSAAB_A[id+2], 
boltzmannSAABStep2D.c:202:                          mesh->shiftIndex,
boltzmannSAABStep2D.c:203:                          mesh->o_rhsq,
boltzmannSAABStep2D.c:204:                          mesh->o_pmlrhsqx,
boltzmannSAABStep2D.c:205:                          mesh->o_pmlrhsqy,
boltzmannSAABStep2D.c:206:                          mesh->o_q,
boltzmannSAABStep2D.c:207:                          mesh->o_pmlqx,
boltzmannSAABStep2D.c:208:                          mesh->o_pmlqy);
boltzmannSAABStep2D.c:211:  mesh->shiftIndex = (mesh->shiftIndex+1)%3;
boltzmannLSIMEXStep2D.c:8:mesh->shiftIndex =0;
boltzmannLSIMEXStep2D.c:10:  for(iint k=0;k<mesh->Nimex;++k)
boltzmannLSIMEXStep2D.c:14:      dfloat t = mesh->startTime+ tstep*mesh->dt + mesh->dt*mesh->LSIMEX_C[k];
boltzmannLSIMEXStep2D.c:21:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:24:      if(mesh->pmlNelements){
boltzmannLSIMEXStep2D.c:26:      	mesh->device.finish();
boltzmannLSIMEXStep2D.c:28:		//	printf("pmlNel = %d\n", mesh->pmlNelements);
boltzmannLSIMEXStep2D.c:29:		mesh->pmlResidualUpdateKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:30:                          mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:31:                          mesh->o_pmlIds,
boltzmannLSIMEXStep2D.c:32:					      mesh->dt,
boltzmannLSIMEXStep2D.c:34:						  mesh->LSIMEX_ABi[k],
boltzmannLSIMEXStep2D.c:35:						  mesh->LSIMEX_ABe[k],
boltzmannLSIMEXStep2D.c:36:						  mesh->o_q,
boltzmannLSIMEXStep2D.c:37:						  mesh->o_pmlqx,
boltzmannLSIMEXStep2D.c:38:						  mesh->o_pmlqy,
boltzmannLSIMEXStep2D.c:39:						  mesh->o_qZ,
boltzmannLSIMEXStep2D.c:40:						  mesh->o_qY,
boltzmannLSIMEXStep2D.c:41:                          mesh->o_qYx,
boltzmannLSIMEXStep2D.c:42:                          mesh->o_qYy);
boltzmannLSIMEXStep2D.c:43:		mesh->device.finish();
boltzmannLSIMEXStep2D.c:46:      if(mesh->nonPmlNelements){
boltzmannLSIMEXStep2D.c:47:      	mesh->device.finish();
boltzmannLSIMEXStep2D.c:49:		mesh->residualUpdateKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:50:					   mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:51:					   mesh->dt,
boltzmannLSIMEXStep2D.c:52:					   mesh->LSIMEX_ABi[k],
boltzmannLSIMEXStep2D.c:53:					   mesh->LSIMEX_ABe[k],
boltzmannLSIMEXStep2D.c:54:					   mesh->o_q,
boltzmannLSIMEXStep2D.c:55:					   mesh->o_qZ,
boltzmannLSIMEXStep2D.c:56:					   mesh->o_qY);
boltzmannLSIMEXStep2D.c:57:		mesh->device.finish();
boltzmannLSIMEXStep2D.c:60:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:66:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:69:      if(mesh->pmlNelements){
boltzmannLSIMEXStep2D.c:70:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:72:	  mesh->pmlImplicitSolveKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:73:				     mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:74:				     mesh->dt,
boltzmannLSIMEXStep2D.c:75:					 mesh->LSIMEX_Ad[k],
boltzmannLSIMEXStep2D.c:76:					 mesh->o_cubInterpT,
boltzmannLSIMEXStep2D.c:77:					 mesh->o_cubProjectT,
boltzmannLSIMEXStep2D.c:78:					 mesh->o_qY,
boltzmannLSIMEXStep2D.c:79:					 mesh->o_qZ); 
boltzmannLSIMEXStep2D.c:80:	  mesh->device.finish();
boltzmannLSIMEXStep2D.c:84:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:87:	mesh->pmlImplicitUpdateKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:88:	                  mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:89:	                  mesh->o_pmlIds,
boltzmannLSIMEXStep2D.c:90:				      mesh->dt,
boltzmannLSIMEXStep2D.c:92:				      mesh->LSIMEX_Ad[k],
boltzmannLSIMEXStep2D.c:93:				      mesh->o_qY,
boltzmannLSIMEXStep2D.c:94:				      mesh->o_qYx,
boltzmannLSIMEXStep2D.c:95:				      mesh->o_qYy,
boltzmannLSIMEXStep2D.c:96:				      mesh->o_qZ,
boltzmannLSIMEXStep2D.c:97:				      mesh->o_pmlqx,
boltzmannLSIMEXStep2D.c:98:				      mesh->o_pmlqy,
boltzmannLSIMEXStep2D.c:99:				      mesh->o_qSx,
boltzmannLSIMEXStep2D.c:100:				      mesh->o_qSy,
boltzmannLSIMEXStep2D.c:101:				      mesh->o_qS,
boltzmannLSIMEXStep2D.c:102:				      mesh->o_q);
boltzmannLSIMEXStep2D.c:103:	  mesh->device.finish();
boltzmannLSIMEXStep2D.c:107:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:112:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:114:    if(mesh->nonPmlNelements){
boltzmannLSIMEXStep2D.c:115:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:118:         mesh->implicitSolveKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:119:				  mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:120:				  mesh->dt,
boltzmannLSIMEXStep2D.c:121:				  mesh->LSIMEX_Ad[k],
boltzmannLSIMEXStep2D.c:122:				  mesh->o_cubInterpT,
boltzmannLSIMEXStep2D.c:123:				  mesh->o_cubProjectT,
boltzmannLSIMEXStep2D.c:124:				  mesh->o_qY,
boltzmannLSIMEXStep2D.c:125:				  mesh->o_qZ); 
boltzmannLSIMEXStep2D.c:126:       mesh->device.finish();
boltzmannLSIMEXStep2D.c:129:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:133:	mesh->implicitUpdateKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:134:				   mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:135:				   mesh->dt,
boltzmannLSIMEXStep2D.c:136:				   mesh->LSIMEX_Ad[k],
boltzmannLSIMEXStep2D.c:137:				   mesh->o_qZ,
boltzmannLSIMEXStep2D.c:138:				   mesh->o_qY,
boltzmannLSIMEXStep2D.c:139:				   mesh->o_q,
boltzmannLSIMEXStep2D.c:140:				   mesh->o_qS);	
boltzmannLSIMEXStep2D.c:141:   	  mesh->device.finish();
boltzmannLSIMEXStep2D.c:145:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:149:  if(mesh->totalHaloPairs>0){
boltzmannLSIMEXStep2D.c:152:      mesh->device.setStream(dataStream);
boltzmannLSIMEXStep2D.c:155:    iint Nentries = mesh->Np*mesh->Nfields;
boltzmannLSIMEXStep2D.c:156:    mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannLSIMEXStep2D.c:158:                            mesh->o_haloElementList,
boltzmannLSIMEXStep2D.c:159:                            mesh->o_q,
boltzmannLSIMEXStep2D.c:160:                            mesh->o_haloBuffer);
boltzmannLSIMEXStep2D.c:163:    mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannLSIMEXStep2D.c:166:      mesh->device.setStream(defaultStream);
boltzmannLSIMEXStep2D.c:172:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:176:    if(mesh->pmlNelements){	
boltzmannLSIMEXStep2D.c:177:       mesh->device.finish();
boltzmannLSIMEXStep2D.c:180:      mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:181:                          	mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:182:                         	mesh->o_pmlIds,
boltzmannLSIMEXStep2D.c:185:							mesh->Nrhs,
boltzmannLSIMEXStep2D.c:186:							mesh->shiftIndex,
boltzmannLSIMEXStep2D.c:187:							mesh->o_vgeo,
boltzmannLSIMEXStep2D.c:188:							mesh->o_pmlSigmaX,
boltzmannLSIMEXStep2D.c:189:							mesh->o_pmlSigmaY,
boltzmannLSIMEXStep2D.c:190:							mesh->o_DrT,
boltzmannLSIMEXStep2D.c:191:							mesh->o_DsT,
boltzmannLSIMEXStep2D.c:192:							mesh->o_q,
boltzmannLSIMEXStep2D.c:193:							mesh->o_pmlqx,
boltzmannLSIMEXStep2D.c:194:							mesh->o_pmlqy,
boltzmannLSIMEXStep2D.c:195:							mesh->o_qY,
boltzmannLSIMEXStep2D.c:196:							mesh->o_qYx,
boltzmannLSIMEXStep2D.c:197:							mesh->o_qYy);
boltzmannLSIMEXStep2D.c:198:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:204:    if(mesh->nonPmlNelements){
boltzmannLSIMEXStep2D.c:206:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:209:      mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:210:						mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:213:						mesh->Nrhs,
boltzmannLSIMEXStep2D.c:214:						mesh->shiftIndex,
boltzmannLSIMEXStep2D.c:215:						mesh->o_vgeo,
boltzmannLSIMEXStep2D.c:216:						mesh->o_DrT,
boltzmannLSIMEXStep2D.c:217:						mesh->o_DsT,
boltzmannLSIMEXStep2D.c:218:						mesh->o_q,
boltzmannLSIMEXStep2D.c:219:						mesh->o_qY);
boltzmannLSIMEXStep2D.c:221:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:226:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:230:  if(mesh->totalHaloPairs>0){
boltzmannLSIMEXStep2D.c:232:      mesh->device.setStream(dataStream);
boltzmannLSIMEXStep2D.c:236:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:240:                          mesh->Nfields*mesh->Np*sizeof(dfloat),
boltzmannLSIMEXStep2D.c:249:    size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannLSIMEXStep2D.c:250:    mesh->o_q.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannLSIMEXStep2D.c:251:    mesh->device.finish();        
boltzmannLSIMEXStep2D.c:254:      mesh->device.setStream(defaultStream);
boltzmannLSIMEXStep2D.c:260:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:263:     if(mesh->pmlNelements){
boltzmannLSIMEXStep2D.c:266:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:269:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:270:              mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:271:              mesh->o_pmlIds,
boltzmannLSIMEXStep2D.c:274:              mesh->Nrhs,
boltzmannLSIMEXStep2D.c:275:              mesh->shiftIndex,
boltzmannLSIMEXStep2D.c:276:              mesh->o_sgeo,
boltzmannLSIMEXStep2D.c:277:              mesh->o_LIFTT,
boltzmannLSIMEXStep2D.c:278:              mesh->o_vmapM,
boltzmannLSIMEXStep2D.c:279:              mesh->o_vmapP,
boltzmannLSIMEXStep2D.c:280:              mesh->o_EToB,
boltzmannLSIMEXStep2D.c:281:              mesh->o_x,
boltzmannLSIMEXStep2D.c:282:              mesh->o_y,
boltzmannLSIMEXStep2D.c:283:			   mesh->o_q,
boltzmannLSIMEXStep2D.c:284:			   mesh->o_qY,
boltzmannLSIMEXStep2D.c:285:			   mesh->o_qYx,
boltzmannLSIMEXStep2D.c:286:			   mesh->o_qYy);
boltzmannLSIMEXStep2D.c:288:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:292:    if(mesh->nonPmlNelements){
boltzmannLSIMEXStep2D.c:293:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:296:      mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:297:            mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:300:            mesh->Nrhs,
boltzmannLSIMEXStep2D.c:301:            mesh->shiftIndex,
boltzmannLSIMEXStep2D.c:302:            mesh->o_sgeo,
boltzmannLSIMEXStep2D.c:303:            mesh->o_LIFTT,
boltzmannLSIMEXStep2D.c:304:            mesh->o_vmapM,
boltzmannLSIMEXStep2D.c:305:            mesh->o_vmapP,
boltzmannLSIMEXStep2D.c:306:            mesh->o_EToB,
boltzmannLSIMEXStep2D.c:307:            mesh->o_x,
boltzmannLSIMEXStep2D.c:308:            mesh->o_y,
boltzmannLSIMEXStep2D.c:309:			  mesh->o_q,
boltzmannLSIMEXStep2D.c:310:			  mesh->o_qY);
boltzmannLSIMEXStep2D.c:311:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:315:    mesh->device.finish();
boltzmannLSIMEXStep2D.c:320:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:323:      //printf("running with %d pml Nelements\n",mesh->pmlNelements);    
boltzmannLSIMEXStep2D.c:324:      if (mesh->pmlNelements){ 
boltzmannLSIMEXStep2D.c:325:       mesh->device.finish();
boltzmannLSIMEXStep2D.c:328:	mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannLSIMEXStep2D.c:329:                  mesh->o_pmlElementIds,
boltzmannLSIMEXStep2D.c:330:                  mesh->o_pmlIds,
boltzmannLSIMEXStep2D.c:331:			      mesh->dt,
boltzmannLSIMEXStep2D.c:332:			      mesh->LSIMEX_B[k],
boltzmannLSIMEXStep2D.c:334:			      mesh->o_qZ,
boltzmannLSIMEXStep2D.c:335:			      mesh->o_qY,
boltzmannLSIMEXStep2D.c:336:			      mesh->o_qYx,
boltzmannLSIMEXStep2D.c:337:			      mesh->o_qYy,
boltzmannLSIMEXStep2D.c:338:			      mesh->o_qS,
boltzmannLSIMEXStep2D.c:339:			      mesh->o_qSx,
boltzmannLSIMEXStep2D.c:340:			      mesh->o_qSy,
boltzmannLSIMEXStep2D.c:341:			      mesh->o_pmlqx,
boltzmannLSIMEXStep2D.c:342:			      mesh->o_pmlqy,
boltzmannLSIMEXStep2D.c:343:			      mesh->o_q);
boltzmannLSIMEXStep2D.c:345:	  mesh->device.finish();
boltzmannLSIMEXStep2D.c:349:      if(mesh->nonPmlNelements){
boltzmannLSIMEXStep2D.c:351:      mesh->device.finish();
boltzmannLSIMEXStep2D.c:353:	  mesh->updateKernel(mesh->nonPmlNelements,
boltzmannLSIMEXStep2D.c:354:			   mesh->o_nonPmlElementIds,
boltzmannLSIMEXStep2D.c:355:			   mesh->dt,
boltzmannLSIMEXStep2D.c:356:			   mesh->LSIMEX_B[k],
boltzmannLSIMEXStep2D.c:357:			   mesh->o_qZ,
boltzmannLSIMEXStep2D.c:358:			   mesh->o_qY,
boltzmannLSIMEXStep2D.c:359:			   mesh->o_qS,
boltzmannLSIMEXStep2D.c:360:			   mesh->o_q);
boltzmannLSIMEXStep2D.c:362:	  mesh->device.finish();
boltzmannLSIMEXStep2D.c:366:      mesh->device.finish();
meshBoltzmannRun2D.c:8:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
meshBoltzmannRun2D.c:14:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
meshBoltzmannRun2D.c:16:    for(iint rk=0;rk<mesh->Nrk;++rk){
meshBoltzmannRun2D.c:18:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
meshBoltzmannRun2D.c:20:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:22:	meshHaloExtract2D(mesh, mesh->Np*mesh->Nfields*sizeof(dfloat),
meshBoltzmannRun2D.c:23:			  mesh->q, sendBuffer);
meshBoltzmannRun2D.c:27:				mesh->Np*mesh->Nfields*sizeof(dfloat),
meshBoltzmannRun2D.c:35:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:40:	memcpy(mesh->q+mesh->Np*mesh->Nfields*mesh->Nelements, recvBuffer, haloBytes);
meshBoltzmannRun2D.c:47:      meshBoltzmannUpdate2D(mesh, mesh->rka[rk], mesh->rkb[rk]);
meshBoltzmannRun2D.c:52:    if((tstep%mesh->errorStep)==0){
meshBoltzmannRun2D.c:55:      meshBoltzmannError2D(mesh, mesh->dt*(tstep+1));
meshBoltzmannRun2D.c:71:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
meshBoltzmannRun2D.c:76:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
meshBoltzmannRun2D.c:78:    for(iint rk=0;rk<mesh->Nrk;++rk){
meshBoltzmannRun2D.c:80:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
meshBoltzmannRun2D.c:82:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:84:	iint Nentries = mesh->Np*mesh->Nfields;
meshBoltzmannRun2D.c:86:	mesh->haloExtractKernel(mesh->totalHaloPairs,
meshBoltzmannRun2D.c:88:				mesh->o_haloElementList,
meshBoltzmannRun2D.c:89:				mesh->o_q,
meshBoltzmannRun2D.c:90:				mesh->o_haloBuffer);
meshBoltzmannRun2D.c:93:	mesh->o_haloBuffer.copyTo(sendBuffer);      
meshBoltzmannRun2D.c:97:				mesh->Np*mesh->Nfields*sizeof(dfloat),
meshBoltzmannRun2D.c:103:      mesh->boltzmannVolumeKernel(mesh->Nelements,
meshBoltzmannRun2D.c:104:				  mesh->o_vgeo,
meshBoltzmannRun2D.c:105:				  mesh->o_DrT,
meshBoltzmannRun2D.c:106:				  mesh->o_DsT,
meshBoltzmannRun2D.c:107:				  mesh->o_q,
meshBoltzmannRun2D.c:108:				  mesh->o_rhsq);
meshBoltzmannRun2D.c:110:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:115:	size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
meshBoltzmannRun2D.c:116:	mesh->o_q.copyFrom(recvBuffer, haloBytes, offset);
meshBoltzmannRun2D.c:120:      mesh->boltzmannSurfaceKernel(mesh->Nelements,
meshBoltzmannRun2D.c:121:				   mesh->o_sgeo,
meshBoltzmannRun2D.c:122:				   mesh->o_LIFTT,
meshBoltzmannRun2D.c:123:				   mesh->o_vmapM,
meshBoltzmannRun2D.c:124:				   mesh->o_vmapP,
meshBoltzmannRun2D.c:125:				   mesh->o_EToB,
meshBoltzmannRun2D.c:127:				   mesh->o_x,
meshBoltzmannRun2D.c:128:				   mesh->o_y,
meshBoltzmannRun2D.c:129:				   mesh->o_q,
meshBoltzmannRun2D.c:130:				   mesh->o_rhsq);
meshBoltzmannRun2D.c:133:      mesh->boltzmannUpdateKernel(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannRun2D.c:134:				  mesh->dt,
meshBoltzmannRun2D.c:135:				  mesh->rka[rk],
meshBoltzmannRun2D.c:136:				  mesh->rkb[rk],
meshBoltzmannRun2D.c:137:				  mesh->o_rhsq,
meshBoltzmannRun2D.c:138:				  mesh->o_resq,
meshBoltzmannRun2D.c:139:				  mesh->o_q);
meshBoltzmannRun2D.c:144:    if((tstep%mesh->errorStep)==0){
meshBoltzmannRun2D.c:147:      mesh->o_q.copyTo(mesh->q);
meshBoltzmannRun2D.c:150:      meshBoltzmannError2D(mesh, mesh->dt*(tstep+1));
meshBoltzmannRun2D.c:166:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
meshBoltzmannRun2D.c:171:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
meshBoltzmannRun2D.c:173:    for(iint rk=0;rk<mesh->Nrk;++rk){
meshBoltzmannRun2D.c:175:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
meshBoltzmannRun2D.c:177:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:179:	iint Nentries = mesh->Np*mesh->Nfields;
meshBoltzmannRun2D.c:181:	mesh->haloExtractKernel(mesh->totalHaloPairs,
meshBoltzmannRun2D.c:183:				mesh->o_haloElementList,
meshBoltzmannRun2D.c:184:				mesh->o_q,
meshBoltzmannRun2D.c:185:				mesh->o_haloBuffer);
meshBoltzmannRun2D.c:188:	mesh->o_haloBuffer.copyTo(sendBuffer);      
meshBoltzmannRun2D.c:192:				mesh->Np*mesh->Nfields*sizeof(dfloat),
meshBoltzmannRun2D.c:198:      mesh->boltzmannPmlVolumeKernel(mesh->Nelements,
meshBoltzmannRun2D.c:199:				     mesh->o_vgeo,
meshBoltzmannRun2D.c:200:				     mesh->o_sigmax,
meshBoltzmannRun2D.c:201:				     mesh->o_DrT,
meshBoltzmannRun2D.c:202:				     mesh->o_DsT,
meshBoltzmannRun2D.c:203:				     mesh->o_q,
meshBoltzmannRun2D.c:204:				     mesh->o_wx,
meshBoltzmannRun2D.c:205:				     mesh->o_rhsq,
meshBoltzmannRun2D.c:206:				     mesh->o_rhswx);
meshBoltzmannRun2D.c:208:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:213:	size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
meshBoltzmannRun2D.c:214:	mesh->o_q.copyFrom(recvBuffer, haloBytes, offset);
meshBoltzmannRun2D.c:218:      mesh->boltzmannPmlSurfaceKernel(mesh->Nelements,
meshBoltzmannRun2D.c:219:				      mesh->o_sgeo,
meshBoltzmannRun2D.c:220:				      mesh->o_LIFTT,
meshBoltzmannRun2D.c:221:				      mesh->o_vmapM,
meshBoltzmannRun2D.c:222:				      mesh->o_vmapP,
meshBoltzmannRun2D.c:223:				      mesh->o_EToB,
meshBoltzmannRun2D.c:225:				      mesh->o_x,
meshBoltzmannRun2D.c:226:				      mesh->o_y,
meshBoltzmannRun2D.c:227:				      mesh->o_q,
meshBoltzmannRun2D.c:228:				      mesh->o_wx,
meshBoltzmannRun2D.c:229:				      mesh->o_rhsq,
meshBoltzmannRun2D.c:230:				      mesh->o_rhswx);
meshBoltzmannRun2D.c:233:      mesh->boltzmannUpdateKernel(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannRun2D.c:234:				  mesh->dt,
meshBoltzmannRun2D.c:235:				  mesh->rka[rk],
meshBoltzmannRun2D.c:236:				  mesh->rkb[rk],
meshBoltzmannRun2D.c:237:				  mesh->o_rhsq,
meshBoltzmannRun2D.c:238:				  mesh->o_resq,
meshBoltzmannRun2D.c:239:				  mesh->o_q);
meshBoltzmannRun2D.c:241:      mesh->boltzmannUpdateKernel(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannRun2D.c:242:				  mesh->dt,
meshBoltzmannRun2D.c:243:				  mesh->rka[rk],
meshBoltzmannRun2D.c:244:				  mesh->rkb[rk],
meshBoltzmannRun2D.c:245:				  mesh->o_rhswx,
meshBoltzmannRun2D.c:246:				  mesh->o_reswx,
meshBoltzmannRun2D.c:247:				  mesh->o_wx);
meshBoltzmannRun2D.c:252:    if((tstep%mesh->errorStep)==0){
meshBoltzmannRun2D.c:255:      mesh->o_q.copyTo(mesh->q);
meshBoltzmannRun2D.c:258:      meshBoltzmannError2D(mesh, mesh->dt*(tstep+1));
meshBoltzmannRun2D.c:279:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
meshBoltzmannRun2D.c:282:  size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements * sizeof(dfloat);
meshBoltzmannRun2D.c:283:  iint Nentries = mesh->Np*mesh->Nfields;
meshBoltzmannRun2D.c:293:    mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:296:    o_pinned_send_Q = mesh->device.mappedAlloc(haloBytes, NULL);
meshBoltzmannRun2D.c:297:    o_pinned_recv_Q = mesh->device.mappedAlloc(haloBytes, NULL);
meshBoltzmannRun2D.c:304:    mesh->device.finish();
meshBoltzmannRun2D.c:307:    mesh->device.setStream(mesh->stream0);
meshBoltzmannRun2D.c:308:    mesh->device.finish();
meshBoltzmannRun2D.c:312:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
meshBoltzmannRun2D.c:314:    for(iint rk=0;rk<mesh->Nrk;++rk){
meshBoltzmannRun2D.c:316:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
meshBoltzmannRun2D.c:318:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:321:	mesh->device.finish();
meshBoltzmannRun2D.c:324:        mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:327:	mesh->haloExtractKernel(mesh->totalHaloPairs,
meshBoltzmannRun2D.c:329:				mesh->o_haloElementList,
meshBoltzmannRun2D.c:330:				mesh->o_q,
meshBoltzmannRun2D.c:331:				mesh->o_haloBuffer);
meshBoltzmannRun2D.c:334:        mesh->o_haloBuffer.asyncCopyTo(H_send_Q);
meshBoltzmannRun2D.c:337:        mesh->device.setStream(mesh->stream0);
meshBoltzmannRun2D.c:341:      mesh->boltzmannVolumeKernel(mesh->Nelements,
meshBoltzmannRun2D.c:342:				  mesh->o_vgeo,
meshBoltzmannRun2D.c:343:				  mesh->o_DrT,
meshBoltzmannRun2D.c:344:				  mesh->o_DsT,
meshBoltzmannRun2D.c:345:				  mesh->o_q,
meshBoltzmannRun2D.c:346:				  mesh->o_rhsq);
meshBoltzmannRun2D.c:348:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:351:        mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:354:        mesh->device.finish();
meshBoltzmannRun2D.c:358:          mesh->Np*mesh->Nfields * sizeof(dfloat),
meshBoltzmannRun2D.c:369:        mesh->o_q.asyncCopyFrom(H_recv_Q,haloBytes,offset);
meshBoltzmannRun2D.c:372:        mesh->device.finish();
meshBoltzmannRun2D.c:375:        mesh->device.setStream(mesh->stream0);  
meshBoltzmannRun2D.c:379:      mesh->boltzmannSurfaceKernel(mesh->Nelements,
meshBoltzmannRun2D.c:380:				   mesh->o_sgeo,
meshBoltzmannRun2D.c:381:				   mesh->o_LIFTT,
meshBoltzmannRun2D.c:382:				   mesh->o_vmapM,
meshBoltzmannRun2D.c:383:				   mesh->o_vmapP,
meshBoltzmannRun2D.c:384:				   mesh->o_EToB,
meshBoltzmannRun2D.c:386:				   mesh->o_x,
meshBoltzmannRun2D.c:387:				   mesh->o_y,
meshBoltzmannRun2D.c:388:				   mesh->o_q,
meshBoltzmannRun2D.c:389:				   mesh->o_rhsq);
meshBoltzmannRun2D.c:392:      mesh->boltzmannUpdateKernel(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannRun2D.c:393:				  mesh->dt,
meshBoltzmannRun2D.c:394:				  mesh->rka[rk],
meshBoltzmannRun2D.c:395:				  mesh->rkb[rk],
meshBoltzmannRun2D.c:396:				  mesh->o_rhsq,
meshBoltzmannRun2D.c:397:				  mesh->o_resq,
meshBoltzmannRun2D.c:398:				  mesh->o_q);
meshBoltzmannRun2D.c:403:    if((tstep%mesh->errorStep)==0){
meshBoltzmannRun2D.c:406:      mesh->o_q.copyTo(mesh->q);
meshBoltzmannRun2D.c:409:      meshBoltzmannError2D(mesh, mesh->dt*(tstep+1));
meshBoltzmannRun2D.c:420:    mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:421:    mesh->device.finish();
meshBoltzmannRun2D.c:429:    mesh->device.setStream(mesh->stream0);
meshBoltzmannRun2D.c:439:  iint haloBytes = mesh->totalHaloPairs*mesh->Np*mesh->Nfields*sizeof(dfloat);
meshBoltzmannRun2D.c:442:  size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements * sizeof(dfloat);
meshBoltzmannRun2D.c:443:  iint Nentries = mesh->Np*mesh->Nfields;
meshBoltzmannRun2D.c:453:    mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:456:    o_pinned_send_Q = mesh->device.mappedAlloc(haloBytes, NULL);
meshBoltzmannRun2D.c:457:    o_pinned_recv_Q = mesh->device.mappedAlloc(haloBytes, NULL);
meshBoltzmannRun2D.c:464:    mesh->device.finish();
meshBoltzmannRun2D.c:467:    mesh->device.setStream(mesh->stream0);
meshBoltzmannRun2D.c:468:    mesh->device.finish();
meshBoltzmannRun2D.c:472:  for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
meshBoltzmannRun2D.c:474:    for(iint rk=0;rk<mesh->Nrk;++rk){
meshBoltzmannRun2D.c:476:      dfloat t = tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
meshBoltzmannRun2D.c:478:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:481:	mesh->device.finish();
meshBoltzmannRun2D.c:484:        mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:487:	mesh->haloExtractKernel(mesh->totalHaloPairs,
meshBoltzmannRun2D.c:489:				mesh->o_haloElementList,
meshBoltzmannRun2D.c:490:				mesh->o_q,
meshBoltzmannRun2D.c:491:				mesh->o_haloBuffer);
meshBoltzmannRun2D.c:494:        mesh->o_haloBuffer.asyncCopyTo(H_send_Q);
meshBoltzmannRun2D.c:497:        mesh->device.setStream(mesh->stream0);
meshBoltzmannRun2D.c:501:      mesh->boltzmannVolumeKernel(mesh->Nelements,
meshBoltzmannRun2D.c:502:				  mesh->o_vgeo,
meshBoltzmannRun2D.c:503:				  mesh->o_DrT,
meshBoltzmannRun2D.c:504:				  mesh->o_DsT,
meshBoltzmannRun2D.c:505:				  mesh->o_q,
meshBoltzmannRun2D.c:506:				  mesh->o_rhsq);
meshBoltzmannRun2D.c:509:      mesh->boltzmannPartialSurfaceKernel(mesh->NinternalElements,
meshBoltzmannRun2D.c:510:					  mesh->o_internalElementIds,
meshBoltzmannRun2D.c:511:					  mesh->o_sgeo,
meshBoltzmannRun2D.c:512:					  mesh->o_LIFTT,
meshBoltzmannRun2D.c:513:					  mesh->o_vmapM,
meshBoltzmannRun2D.c:514:					  mesh->o_vmapP,
meshBoltzmannRun2D.c:515:					  mesh->o_EToB,
meshBoltzmannRun2D.c:517:					  mesh->o_x,
meshBoltzmannRun2D.c:518:					  mesh->o_y,
meshBoltzmannRun2D.c:519:					  mesh->o_q,
meshBoltzmannRun2D.c:520:					  mesh->o_rhsq);
meshBoltzmannRun2D.c:522:      if(mesh->totalHaloPairs>0){
meshBoltzmannRun2D.c:525:        mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:528:        mesh->device.finish();
meshBoltzmannRun2D.c:532:          mesh->Np*mesh->Nfields * sizeof(dfloat),
meshBoltzmannRun2D.c:540:        mesh->o_q.asyncCopyFrom(H_recv_Q,haloBytes,offset);
meshBoltzmannRun2D.c:543:        mesh->device.finish();
meshBoltzmannRun2D.c:546:        mesh->device.setStream(mesh->stream0);  
meshBoltzmannRun2D.c:549:      if(mesh->NnotInternalElements){
meshBoltzmannRun2D.c:551:	mesh->boltzmannPartialSurfaceKernel(mesh->NnotInternalElements,
meshBoltzmannRun2D.c:552:					    mesh->o_notInternalElementIds,
meshBoltzmannRun2D.c:553:					    mesh->o_sgeo,
meshBoltzmannRun2D.c:554:					    mesh->o_LIFTT,
meshBoltzmannRun2D.c:555:					    mesh->o_vmapM,
meshBoltzmannRun2D.c:556:					    mesh->o_vmapP,
meshBoltzmannRun2D.c:557:					    mesh->o_EToB,
meshBoltzmannRun2D.c:559:					    mesh->o_x,
meshBoltzmannRun2D.c:560:					    mesh->o_y,
meshBoltzmannRun2D.c:561:					    mesh->o_q,
meshBoltzmannRun2D.c:562:					    mesh->o_rhsq);
meshBoltzmannRun2D.c:567:      mesh->boltzmannUpdateKernel(mesh->Nelements*mesh->Np*mesh->Nfields,
meshBoltzmannRun2D.c:568:				  mesh->dt,
meshBoltzmannRun2D.c:569:				  mesh->rka[rk],
meshBoltzmannRun2D.c:570:				  mesh->rkb[rk],
meshBoltzmannRun2D.c:571:				  mesh->o_rhsq,
meshBoltzmannRun2D.c:572:				  mesh->o_resq,
meshBoltzmannRun2D.c:573:				  mesh->o_q);
meshBoltzmannRun2D.c:578:    if((tstep%mesh->errorStep)==0){
meshBoltzmannRun2D.c:581:      mesh->o_q.copyTo(mesh->q);
meshBoltzmannRun2D.c:584:      meshBoltzmannError2D(mesh, mesh->dt*(tstep+1));
meshBoltzmannRun2D.c:595:    mesh->device.setStream(mesh->stream1);
meshBoltzmannRun2D.c:596:    mesh->device.finish();
meshBoltzmannRun2D.c:604:    mesh->device.setStream(mesh->stream0);
boltzmannMRABSetup2D.c:13:  mesh->Nfields = 6;
boltzmannMRABSetup2D.c:16:  mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannMRABSetup2D.c:17:  mesh->rhsq = (dfloat*) calloc(3*mesh->Nelements*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannMRABSetup2D.c:19:  mesh->fQM  = (dfloat*) calloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields, sizeof(dfloat));
boltzmannMRABSetup2D.c:20:  mesh->fQP  = (dfloat*) calloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields, sizeof(dfloat));
boltzmannMRABSetup2D.c:40:    mesh->RT      = Uref*Uref/(Ma*Ma);
boltzmannMRABSetup2D.c:41:    mesh->sqrtRT  = sqrt(mesh->RT);  
boltzmannMRABSetup2D.c:44:    mesh->tauInv  = mesh->RT/nu;
boltzmannMRABSetup2D.c:49:    mesh->finalTime = 30.0;
boltzmannMRABSetup2D.c:59:    mesh->RT  = Uref*Uref/(Ma*Ma);
boltzmannMRABSetup2D.c:60:    mesh->sqrtRT = sqrt(mesh->RT);  
boltzmannMRABSetup2D.c:63:    mesh->tauInv = mesh->RT/nu;
boltzmannMRABSetup2D.c:75:    mesh->finalTime = 200.;
boltzmannMRABSetup2D.c:79:  mesh->Lambda2 = 0.5/(mesh->sqrtRT);
boltzmannMRABSetup2D.c:87:  dfloat q2bar = rho*u/mesh->sqrtRT;
boltzmannMRABSetup2D.c:88:  dfloat q3bar = rho*v/mesh->sqrtRT;
boltzmannMRABSetup2D.c:89:  dfloat q4bar = (rho*u*v - sigma12)/mesh->RT;
boltzmannMRABSetup2D.c:90:  dfloat q5bar = (rho*u*u - sigma11)/(sqrt(2.)*mesh->RT);
boltzmannMRABSetup2D.c:91:  dfloat q6bar = (rho*v*v - sigma22)/(sqrt(2.)*mesh->RT);
boltzmannMRABSetup2D.c:95:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannMRABSetup2D.c:96:    for(iint n=0;n<mesh->Np;++n){
boltzmannMRABSetup2D.c:98:      dfloat x = mesh->x[n + mesh->Np*e];
boltzmannMRABSetup2D.c:99:      dfloat y = mesh->y[n + mesh->Np*e];
boltzmannMRABSetup2D.c:101:      mesh->q[cnt+0] = q1bar; // uniform density, zero flow
boltzmannMRABSetup2D.c:102:      mesh->q[cnt+1] = ramp*q2bar;
boltzmannMRABSetup2D.c:103:      mesh->q[cnt+2] = ramp*q3bar;
boltzmannMRABSetup2D.c:104:      mesh->q[cnt+3] = ramp*ramp*q4bar;
boltzmannMRABSetup2D.c:105:      mesh->q[cnt+4] = ramp*ramp*q5bar;
boltzmannMRABSetup2D.c:106:      mesh->q[cnt+5] = ramp*ramp*q6bar;  
boltzmannMRABSetup2D.c:107:      cnt += mesh->Nfields;
boltzmannMRABSetup2D.c:116:  dfloat magVelocity  = sqrt(q2bar*q2bar+q3bar*q3bar)/(q1bar/mesh->sqrtRT);
boltzmannMRABSetup2D.c:119:  dfloat *EtoDT       = (dfloat *) calloc(mesh->Nelements,sizeof(dfloat));
boltzmannMRABSetup2D.c:122:  for(iint e=0;e<mesh->Nelements;++e)
boltzmannMRABSetup2D.c:128:    for(iint f=0;f<mesh->Nfaces;++f){
boltzmannMRABSetup2D.c:129:      iint sid    = mesh->Nsgeo*(mesh->Nfaces*e + f);
boltzmannMRABSetup2D.c:130:      dfloat sJ   = mesh->sgeo[sid + SJID];
boltzmannMRABSetup2D.c:131:      dfloat invJ = mesh->sgeo[sid + IJID];
boltzmannMRABSetup2D.c:137:    dfloat dtex   = cfl*hmin/((mesh->N+1.)*(mesh->N+1.)*sqrt(3.)*mesh->sqrtRT);
boltzmannMRABSetup2D.c:138:    dfloat dtim   = 1.f/(mesh->tauInv);
boltzmannMRABSetup2D.c:165:  //  for (iint e=0;e<mesh->Nelements;e++){
boltzmannMRABSetup2D.c:166:  //     for(iint n=0;n<mesh->Np;n++){
boltzmannMRABSetup2D.c:167:  //     mesh->q[cnt1+0] = mesh->MRABlevel[e]; 
boltzmannMRABSetup2D.c:168:  //     cnt1 += mesh->Nfields;
boltzmannMRABSetup2D.c:171:  //   mesh->sqrtRT = 1.0; iint zero = 0;
boltzmannMRABSetup2D.c:184:  mesh->errorStep = 10000;
boltzmannMRABSetup2D.c:186:  printf("dt   = %g ",   mesh->dt);
boltzmannMRABSetup2D.c:187:  printf("max wave speed = %g\n", sqrt(3.)*mesh->sqrtRT);
boltzmannMRABSetup2D.c:188:  printf("Nsteps = %d dt = %.8e MRAB Level: %d  Final Time:%.5e\n", mesh->NtimeSteps, mesh->dt, mesh->MRABNlevels, pow(2, mesh->MRABNlevels-1)*(mesh->dt*mesh->NtimeSteps+1));
boltzmannMRABSetup2D.c:196:  mesh->MRSAAB_A = (dfloat *) calloc(3*3*mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:197:  mesh->MRSAAB_B = (dfloat *) calloc(3*3*mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:198:  mesh->MRSAAB_C = (dfloat *) calloc(    mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:199:  mesh->MRAB_A   = (dfloat *) calloc(3*3*mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:200:  mesh->MRAB_B   = (dfloat *) calloc(3*3*mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:201:  mesh->MRAB_C   = (dfloat *) calloc(    mesh->MRABNlevels,sizeof(dfloat));
boltzmannMRABSetup2D.c:205:  for(iint l = 0; l<mesh->MRABNlevels; ++l){
boltzmannMRABSetup2D.c:207:    dfloat cc = -mesh->tauInv;
boltzmannMRABSetup2D.c:208:    dfloat h  = mesh->dt * pow(2,l); 
boltzmannMRABSetup2D.c:212:      const iint id = order*mesh->MRABNlevels*3 + l*3;
boltzmannMRABSetup2D.c:217:          mesh->MRSAAB_A[id + 0] = (exp(cc*h) - 1.)/cc;
boltzmannMRABSetup2D.c:218:          mesh->MRSAAB_A[id + 1] = 0.f;
boltzmannMRABSetup2D.c:219:          mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannMRABSetup2D.c:221:          mesh->MRSAAB_B[id + 0] = (exp((cc*h)/2.) - 1.)/cc;
boltzmannMRABSetup2D.c:222:          mesh->MRSAAB_B[id + 1] = 0.f;
boltzmannMRABSetup2D.c:223:          mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannMRABSetup2D.c:227:          mesh->MRSAAB_A[id + 0] = (pow(cc,3)*pow(h,4))/24. + (pow(cc,2)*pow(h,3))/6. + (cc*pow(h,2))/2. + h; 
boltzmannMRABSetup2D.c:228:          mesh->MRSAAB_A[id + 1] = 0.f;
boltzmannMRABSetup2D.c:229:          mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannMRABSetup2D.c:231:          mesh->MRSAAB_B[id + 0] = (pow(cc,3)*pow(h,4))/384. + (pow(cc,2)*pow(h,3))/48. + (cc*pow(h,2))/8. + h/2.;
boltzmannMRABSetup2D.c:232:          mesh->MRSAAB_B[id + 1] = 0.f;
boltzmannMRABSetup2D.c:233:          mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannMRABSetup2D.c:237:        mesh->MRAB_A[id + 0]   =  h ;
boltzmannMRABSetup2D.c:238:        mesh->MRAB_A[id + 1]   =  0.f ;
boltzmannMRABSetup2D.c:239:        mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannMRABSetup2D.c:241:        mesh->MRAB_B[id+0]     =  h/2. ;
boltzmannMRABSetup2D.c:242:        mesh->MRAB_B[id+1]     =  0.f ;
boltzmannMRABSetup2D.c:243:        mesh->MRAB_B[id+2]     =  0.f ;
boltzmannMRABSetup2D.c:249:          mesh->MRSAAB_A[id + 0] = (exp(cc*h) - 2.*cc*h + cc*h*exp(cc*h) - 1.)/(pow(cc,2)*h);
boltzmannMRABSetup2D.c:250:          mesh->MRSAAB_A[id + 1] = (cc*h - exp(cc*h) + 1.)/(pow(cc,2)*h);
boltzmannMRABSetup2D.c:251:          mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannMRABSetup2D.c:253:          mesh->MRSAAB_B[id + 0] = (exp((cc*h)/2.) - (3*cc*h)/2. + cc*h*exp((cc*h)/2.) - 1.)/(pow(cc,2)*h);
boltzmannMRABSetup2D.c:254:          mesh->MRSAAB_B[id + 1] = ((cc*h)/2. - exp((cc*h)/2.) + 1.)/(pow(cc,2)*h);
boltzmannMRABSetup2D.c:255:          mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannMRABSetup2D.c:259:          mesh->MRSAAB_A[id + 0] = (pow(cc,3)*pow(h,4))/20. + (5.*pow(cc,2)*pow(h,3))/24. + (2.*h*pow(h,2))/3. + (3.*h)/2.; 
boltzmannMRABSetup2D.c:260:          mesh->MRSAAB_A[id + 1] = - h/2. - (cc*pow(h,2))/6. - (pow(cc,2)*pow(h,3))/24. - (pow(cc,3)*pow(h,4))/120. ; 
boltzmannMRABSetup2D.c:261:          mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannMRABSetup2D.c:263:          mesh->MRSAAB_B[id + 0] = (11.*pow(cc,3)*pow(h,4))/3840. + (3.*pow(cc,2)*pow(h,3))/128. + (7.*cc*pow(h,2))/48. + (5.*h)/8.;
boltzmannMRABSetup2D.c:264:          mesh->MRSAAB_B[id + 1] = - h/8. - (cc*pow(h,2))/48. - (pow(cc,2)*pow(h,3))/384. - (pow(cc,3)*pow(h,4))/3840.;
boltzmannMRABSetup2D.c:265:          mesh->MRSAAB_B[id + 2] = 0.f; 
boltzmannMRABSetup2D.c:269:        mesh->MRAB_A[id + 0]   =  3.*h/2. ;
boltzmannMRABSetup2D.c:270:        mesh->MRAB_A[id + 1]   = -1.*h/2. ;
boltzmannMRABSetup2D.c:271:        mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannMRABSetup2D.c:273:        mesh->MRAB_B[id + 0]   =  5.*h/8. ;
boltzmannMRABSetup2D.c:274:        mesh->MRAB_B[id + 1]   = -1.*h/8. ;
boltzmannMRABSetup2D.c:275:        mesh->MRAB_B[id + 2]   =   0.f ;
boltzmannMRABSetup2D.c:281:          mesh->MRSAAB_A[id+0] = (exp(cc*h) - (5.*cc*h)/2. - 3.*pow(cc,2)*pow(h,2 )+ pow(cc,2)*pow(h,2)*exp(cc*h) + (3.*cc*h*exp(cc*h))/2. - 1.)/(pow(cc,3)*pow(h,2));
boltzmannMRABSetup2D.c:282:          mesh->MRSAAB_A[id+1] = (4.*cc*h - 2.*exp(cc*h) + 3.*pow(cc,2)*pow(h,2 )- 2.*cc*h*exp(cc*h) + 2.)/(pow(cc,3)*pow(h,2));
boltzmannMRABSetup2D.c:283:          mesh->MRSAAB_A[id+2] = -((3.*cc*h)/2. - exp(cc*h) + pow(cc,2)*pow(h,2 )- (cc*h*exp(cc*h))/2. + 1.)/(pow(cc,3)*pow(h,2));
boltzmannMRABSetup2D.c:285:          mesh->MRSAAB_B[id+0] = (exp((cc*h)/2.) - 2.*cc*h - (15.*pow(cc,2)*pow(h,2))/8.f + pow(cc*h,2)*exp((cc*h)/2.) + (3.*cc*h*exp((cc*h)/2.))/2. - 1.)/(pow(cc,3)*pow(h,2.));
boltzmannMRABSetup2D.c:286:          mesh->MRSAAB_B[id+1] = (3.*cc*h - 2.*exp((cc*h)/2.0) + (5.*pow(cc*h,2))/4. - 2.*cc*h*exp((cc*h)/2.) + 2.)/(pow(cc,3)*pow(h,2));
boltzmannMRABSetup2D.c:287:          mesh->MRSAAB_B[id+2] = -(cc*h - exp((cc*h)/2.) + (3.*pow(cc*h,2))/8. - (cc*h*exp((cc*h)/2.))/2. + 1.)/(pow(cc,3)*pow(h,2));
boltzmannMRABSetup2D.c:291:          mesh->MRSAAB_A[id+0] = (pow(cc,3)*pow(h,4))/18. + (19.*pow(cc,2)*pow(h,3))/80. + (19.*cc*pow(h,2))/24. + (23.*h)/12.;
boltzmannMRABSetup2D.c:292:          mesh->MRSAAB_A[id+1] = - (4*h)/3. - (5.*cc*pow(h,2))/12 - (pow(cc,2)*pow(h,3))/10. - (7.*pow(cc,3)*pow(h,4))/360.;
boltzmannMRABSetup2D.c:293:          mesh->MRSAAB_A[id+2] = (pow(cc,3)*pow(h,4))/180. + (7.*pow(cc,2)*pow(h,3))/240. + (cc*pow(h,2))/8. + (5.*h)/12.;
boltzmannMRABSetup2D.c:295:          mesh->MRSAAB_B[id+0] = (139.*pow(cc,3)*pow(h,4))/46080. + (pow(cc,2)*pow(h,3))/40. + (61.*cc*pow(h,2))/384. + (17.*h)/24.; 
boltzmannMRABSetup2D.c:296:          mesh->MRSAAB_B[id+1] = - (7.*h)/24. - (3.*cc*pow(h,2))/64. - (11.*pow(cc,2)*pow(h,3))/1920. - (13.*pow(cc,3)*pow(h,4))/23040. ; 
boltzmannMRABSetup2D.c:297:          mesh->MRSAAB_B[id+2] = (7.*pow(cc,3)*pow(h,4))/46080. + (pow(cc,2)*pow(h,3))/640. + (5.*cc*pow(h,2))/384. + h/12.;
boltzmannMRABSetup2D.c:300:        mesh->MRAB_A[id+0]   =  23.*h/12. ;
boltzmannMRABSetup2D.c:301:        mesh->MRAB_A[id+1]   = -16.*h/12. ;
boltzmannMRABSetup2D.c:302:        mesh->MRAB_A[id+2]   =  5. *h/12. ;
boltzmannMRABSetup2D.c:304:        mesh->MRAB_B[id+0]   =  17.*h/24. ;
boltzmannMRABSetup2D.c:305:        mesh->MRAB_B[id+1]   = - 7.*h/24. ;
boltzmannMRABSetup2D.c:306:        mesh->MRAB_B[id+2]   =   2.*h/24. ;
boltzmannMRABSetup2D.c:312:    mesh->MRSAAB_C[l]    = exp(cc*h);
boltzmannMRABSetup2D.c:313:    mesh->MRAB_C[l]      =   h ;
boltzmannMRABSetup2D.c:335:  mesh->o_MRABelementIds = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABSetup2D.c:336:  mesh->o_MRABhaloIds = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannMRABSetup2D.c:337:  for (iint lev=0;lev<mesh->MRABNlevels;lev++) {
boltzmannMRABSetup2D.c:338:    if (mesh->MRABNelements[lev])
boltzmannMRABSetup2D.c:339:      mesh->o_MRABelementIds[lev] = mesh->device.malloc(mesh->MRABNelements[lev]*sizeof(iint),
boltzmannMRABSetup2D.c:340:         mesh->MRABelementIds[lev]);
boltzmannMRABSetup2D.c:341:    if (mesh->MRABNhaloElements[lev])
boltzmannMRABSetup2D.c:342:      mesh->o_MRABhaloIds[lev] = mesh->device.malloc(mesh->MRABNhaloElements[lev]*sizeof(iint),
boltzmannMRABSetup2D.c:343:         mesh->MRABhaloIds[lev]);
boltzmannMRABSetup2D.c:350:  mesh->o_rhsq.free();
boltzmannMRABSetup2D.c:351:  mesh->o_rhsq = mesh->device.malloc(3*mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannMRABSetup2D.c:353:  if (mesh->totalHaloPairs) {
boltzmannMRABSetup2D.c:355:    mesh->o_haloBuffer.free();
boltzmannMRABSetup2D.c:356:    mesh->o_haloBuffer = mesh->device.malloc(mesh->totalHaloPairs*mesh->Nfp*mesh->Nfields*mesh->Nfaces*sizeof(dfloat));
boltzmannMRABSetup2D.c:361:  mesh->o_c2 = mesh->device.malloc(mesh->Nelements*mesh->cubNp*sizeof(dfloat), mesh->c2);
boltzmannMRABSetup2D.c:362:  mesh->o_fQM = mesh->device.malloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields*sizeof(dfloat),
boltzmannMRABSetup2D.c:363:         mesh->fQM);
boltzmannMRABSetup2D.c:364:  mesh->o_fQP = mesh->device.malloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields*sizeof(dfloat),
boltzmannMRABSetup2D.c:365:         mesh->fQP);
boltzmannMRABSetup2D.c:366:  mesh->o_mapP = mesh->device.malloc(mesh->Nelements*mesh->Nfp*mesh->Nfaces*sizeof(iint), 
boltzmannMRABSetup2D.c:367:         mesh->mapP);
boltzmannMRABSetup2D.c:370:  int maxNodes = mymax(mesh->Np, (mesh->Nfp*mesh->Nfaces));
boltzmannMRABSetup2D.c:371:  int maxCubNodes = mymax(maxNodes,mesh->cubNp);
boltzmannMRABSetup2D.c:377:  int NblockV = 512/mesh->Np; // works for CUDA
boltzmannMRABSetup2D.c:383:  int NblockCub = 512/mesh->cubNp; // works for CUDA
boltzmannMRABSetup2D.c:388:  kernelInfo.addDefine("p_sqrtRT", mesh->sqrtRT);
boltzmannMRABSetup2D.c:393:  kernelInfo.addDefine("p_tauInv", mesh->tauInv);
boltzmannMRABSetup2D.c:413:      mesh->volumeKernel =
boltzmannMRABSetup2D.c:414:        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:419:      mesh->pmlVolumeKernel =
boltzmannMRABSetup2D.c:420:        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:427:       mesh->relaxationKernel =
boltzmannMRABSetup2D.c:428:         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannMRABSetup2D.c:434:        mesh->pmlRelaxationKernel =
boltzmannMRABSetup2D.c:435:         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannMRABSetup2D.c:442:     mesh->relaxationKernel =
boltzmannMRABSetup2D.c:443:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannMRABSetup2D.c:449:    mesh->pmlRelaxationKernel =
boltzmannMRABSetup2D.c:450:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannMRABSetup2D.c:463:      mesh->volumeKernel =
boltzmannMRABSetup2D.c:464:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:469:      mesh->pmlVolumeKernel =
boltzmannMRABSetup2D.c:470:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:477:      mesh->volumeKernel =
boltzmannMRABSetup2D.c:478:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:483:      mesh->pmlVolumeKernel =
boltzmannMRABSetup2D.c:484:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannMRABSetup2D.c:497:    mesh->updateKernel =
boltzmannMRABSetup2D.c:498:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:503:    mesh->traceUpdateKernel =
boltzmannMRABSetup2D.c:504:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:509:    mesh->pmlUpdateKernel =
boltzmannMRABSetup2D.c:510:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:515:    mesh->pmlTraceUpdateKernel =
boltzmannMRABSetup2D.c:516:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:524:    mesh->updateKernel =
boltzmannMRABSetup2D.c:525:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:530:    mesh->traceUpdateKernel =
boltzmannMRABSetup2D.c:531:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:536:    mesh->pmlUpdateKernel =
boltzmannMRABSetup2D.c:537:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:542:    mesh->pmlTraceUpdateKernel =
boltzmannMRABSetup2D.c:543:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannMRABSetup2D.c:551:    mesh->surfaceKernel =
boltzmannMRABSetup2D.c:552:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannMRABSetup2D.c:557:    mesh->pmlSurfaceKernel =
boltzmannMRABSetup2D.c:558:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannMRABSetup2D.c:563:    mesh->haloExtractKernel =
boltzmannMRABSetup2D.c:564:      mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannError2D.c:11:    for(iint e=0;e<mesh->Nelements;++e){
boltzmannError2D.c:12:      for(int n=0;n<mesh->Np;++n){
boltzmannError2D.c:14:        iint id = n+e*mesh->Np;
boltzmannError2D.c:15:        dfloat x = mesh->x[id];
boltzmannError2D.c:16:        dfloat y = mesh->y[id];
boltzmannError2D.c:18:        maxQ1 = mymax(maxQ1, fabs(mesh->q[id*mesh->Nfields + fid]));
boltzmannError2D.c:19:        minQ1 = mymin(minQ1, fabs(mesh->q[id*mesh->Nfields + fid]));
boltzmannError2D.c:48:    dfloat Uref        =  mesh->Ma*mesh->sqrtRT;
boltzmannError2D.c:49:    dfloat nu = mesh->sqrtRT*mesh->sqrtRT/mesh->tauInv;
boltzmannError2D.c:51:    for(iint e=0;e<mesh->Nelements;++e){
boltzmannError2D.c:52:      for(iint n=0;n<mesh->Np;++n){
boltzmannError2D.c:54:        iint id = n+e*mesh->Np;
boltzmannError2D.c:55:        dfloat x = mesh->x[id];
boltzmannError2D.c:56:        dfloat y = mesh->y[id];
boltzmannError2D.c:58:       dfloat u   = mesh->sqrtRT*mesh->q[id*mesh->Nfields + 1]/mesh->q[id*mesh->Nfields+0];
boltzmannError2D.c:65:         // dfloat coef = -mesh->RT*mesh->tauInv/2. + sqrt(pow((mesh->RT*mesh->tauInv),2) /4.0 - (lamda*lamda*mesh->RT*mesh->RT));
boltzmannError2D.c:66:         dfloat coef = -mesh->tauInv/2. + mesh->tauInv/2* sqrt(1.- 4.*pow(1./ mesh->tauInv, 2)* mesh->RT* lamda*lamda);
boltzmannError2D.c:74:        mesh->q[id*mesh->Nfields+2] = fabs(u-uex);
boltzmannError2D.c:76:        maxQ1 = mymax(maxQ1, fabs(mesh->q[id*mesh->Nfields]));
boltzmannError2D.c:77:        minQ1 = mymin(minQ1, fabs(mesh->q[id*mesh->Nfields]));
boltzmannError2D.c:101:    iint tstep = (time-mesh->startTime)/mesh->dt;
boltzmannError2D.c:103:    sprintf(errname, "err_%04d_%04d.vtu", rank, (tstep/mesh->errorStep));
boltzmannError2D.c:122:      fprintf(fp, "%2d %2d %.8e %.8e %.8e %.8e %.8e\n", mesh->N, tmethod, mesh->dt, time,  globalMinQ1, globalMaxQ1, globalMaxErr); 
boltzmannError2D.c:125:      mesh->maxErrorBoltzmann = globalMaxErr; 
meshBoltzmannVolume2D.c:8:  for(iint e=0;e<mesh->Nelements;++e){
meshBoltzmannVolume2D.c:11:    dfloat drdx = mesh->vgeo[e*mesh->Nvgeo + RXID];
meshBoltzmannVolume2D.c:12:    dfloat drdy = mesh->vgeo[e*mesh->Nvgeo + RYID];
meshBoltzmannVolume2D.c:13:    dfloat dsdx = mesh->vgeo[e*mesh->Nvgeo + SXID];
meshBoltzmannVolume2D.c:14:    dfloat dsdy = mesh->vgeo[e*mesh->Nvgeo + SYID];
meshBoltzmannVolume2D.c:17:    for(iint n=0;n<mesh->Np;++n){
meshBoltzmannVolume2D.c:22:      for(iint i=0;i<mesh->Np;++i){
meshBoltzmannVolume2D.c:24:	iint id = mesh->Nfields*(e*mesh->Np + i);
meshBoltzmannVolume2D.c:25:	dfloat q1 = mesh->q[id+0];
meshBoltzmannVolume2D.c:26:	dfloat q2 = mesh->q[id+1];
meshBoltzmannVolume2D.c:27:	dfloat q3 = mesh->q[id+2];
meshBoltzmannVolume2D.c:28:	dfloat q4 = mesh->q[id+3];
meshBoltzmannVolume2D.c:29:	dfloat q5 = mesh->q[id+4];
meshBoltzmannVolume2D.c:30:	dfloat q6 = mesh->q[id+5];
meshBoltzmannVolume2D.c:32:	dfloat Drni = mesh->Dr[n*mesh->Np+i];
meshBoltzmannVolume2D.c:33:	dfloat Dsni = mesh->Ds[n*mesh->Np+i];
meshBoltzmannVolume2D.c:66:      iint id = mesh->Nfields*(e*mesh->Np + n);
meshBoltzmannVolume2D.c:69:      dfloat sqrtRT = mesh->sqrtRT, sqrt2 = sqrt(2.);
meshBoltzmannVolume2D.c:81:      dfloat q1 = mesh->q[id+0];
meshBoltzmannVolume2D.c:82:      dfloat q2 = mesh->q[id+1];
meshBoltzmannVolume2D.c:83:      dfloat q3 = mesh->q[id+2];
meshBoltzmannVolume2D.c:84:      dfloat q4 = mesh->q[id+3];
meshBoltzmannVolume2D.c:85:      dfloat q5 = mesh->q[id+4];
meshBoltzmannVolume2D.c:86:      dfloat q6 = mesh->q[id+5];
meshBoltzmannVolume2D.c:88:      rhsq4 -= mesh->tauInv*(q4 - q2*q3/q1);
meshBoltzmannVolume2D.c:89:      rhsq5 -= mesh->tauInv*(q5 - invsqrt2*q2*q2/q1);
meshBoltzmannVolume2D.c:90:      rhsq6 -= mesh->tauInv*(q6 - invsqrt2*q3*q3/q1);
meshBoltzmannVolume2D.c:93:      mesh->rhsq[id+0] = rhsq1;
meshBoltzmannVolume2D.c:94:      mesh->rhsq[id+1] = rhsq2;
meshBoltzmannVolume2D.c:95:      mesh->rhsq[id+2] = rhsq3;
meshBoltzmannVolume2D.c:96:      mesh->rhsq[id+3] = rhsq4;
meshBoltzmannVolume2D.c:97:      mesh->rhsq[id+4] = rhsq5;
meshBoltzmannVolume2D.c:98:      mesh->rhsq[id+5] = rhsq6;
boltzmannPlotVTU2D.c:23:	  mesh->Nelements*mesh->plotNp, 
boltzmannPlotVTU2D.c:24:	  mesh->Nelements*mesh->plotNelements);
boltzmannPlotVTU2D.c:31:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:32:    for(iint n=0;n<mesh->plotNp;++n){
boltzmannPlotVTU2D.c:35:      for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:36:        plotxn += mesh->plotInterp[n*mesh->Np+m]*mesh->x[m+e*mesh->Np];
boltzmannPlotVTU2D.c:37:        plotyn += mesh->plotInterp[n*mesh->Np+m]*mesh->y[m+e*mesh->Np];
boltzmannPlotVTU2D.c:52:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:53:    for(iint n=0;n<mesh->plotNp;++n){
boltzmannPlotVTU2D.c:55:      for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:56:	        iint base = mesh->Nfields*(m + e*mesh->Np);
boltzmannPlotVTU2D.c:57:          dfloat rho = mesh->q[base + 0];
boltzmannPlotVTU2D.c:58:          dfloat pm = mesh->sqrtRT*mesh->sqrtRT*rho; // need to be modified
boltzmannPlotVTU2D.c:59:          plotpn += mesh->plotInterp[n*mesh->Np+m]*pm;
boltzmannPlotVTU2D.c:72:  dfloat *curlU = (dfloat*) calloc(mesh->Np, sizeof(dfloat));
boltzmannPlotVTU2D.c:73:  dfloat *divU  = (dfloat*) calloc(mesh->Np, sizeof(dfloat));
boltzmannPlotVTU2D.c:75:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:76:    for(iint n=0;n<mesh->Np;++n){
boltzmannPlotVTU2D.c:78:      for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:79:        iint base = mesh->Nfields*(m + e*mesh->Np);
boltzmannPlotVTU2D.c:80:        dfloat rho = mesh->q[base + 0];
boltzmannPlotVTU2D.c:81:        dfloat u = mesh->q[1 + base]*mesh->sqrtRT/rho;
boltzmannPlotVTU2D.c:82:        dfloat v = mesh->q[2 + base]*mesh->sqrtRT/rho;
boltzmannPlotVTU2D.c:83:      	dUdr += mesh->Dr[n*mesh->Np+m]*u;
boltzmannPlotVTU2D.c:84:      	dUds += mesh->Ds[n*mesh->Np+m]*u;
boltzmannPlotVTU2D.c:85:      	dVdr += mesh->Dr[n*mesh->Np+m]*v;
boltzmannPlotVTU2D.c:86:      	dVds += mesh->Ds[n*mesh->Np+m]*v;
boltzmannPlotVTU2D.c:88:      dfloat rx = mesh->vgeo[e*mesh->Nvgeo+RXID];
boltzmannPlotVTU2D.c:89:      dfloat ry = mesh->vgeo[e*mesh->Nvgeo+RYID];
boltzmannPlotVTU2D.c:90:      dfloat sx = mesh->vgeo[e*mesh->Nvgeo+SXID];
boltzmannPlotVTU2D.c:91:      dfloat sy = mesh->vgeo[e*mesh->Nvgeo+SYID];
boltzmannPlotVTU2D.c:102:    for(iint n=0;n<mesh->plotNp;++n){
boltzmannPlotVTU2D.c:105:      for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:106:        plotCurlUn += mesh->plotInterp[n*mesh->Np+m]*curlU[m];
boltzmannPlotVTU2D.c:107:        plotDivUn += mesh->plotInterp[n*mesh->Np+m]*divU[m];	
boltzmannPlotVTU2D.c:121:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:122:    for(iint n=0;n<mesh->plotNp;++n){
boltzmannPlotVTU2D.c:124:      for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:125:        iint base = mesh->Nfields*(m + e*mesh->Np);
boltzmannPlotVTU2D.c:126:        dfloat rho = mesh->q[base];
boltzmannPlotVTU2D.c:127:        dfloat um = mesh->q[1 + base]*mesh->sqrtRT/rho;
boltzmannPlotVTU2D.c:128:        dfloat vm = mesh->q[2 + base]*mesh->sqrtRT/rho;
boltzmannPlotVTU2D.c:130:        plotun += mesh->plotInterp[n*mesh->Np+m]*um;
boltzmannPlotVTU2D.c:131:        plotvn += mesh->plotInterp[n*mesh->Np+m]*vm;
boltzmannPlotVTU2D.c:143:  // for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:144:  //   for(iint n=0;n<mesh->plotNp;++n){
boltzmannPlotVTU2D.c:146:  //     for(iint m=0;m<mesh->Np;++m){
boltzmannPlotVTU2D.c:147:  //       dfloat wx = mesh->q[4 + mesh->Nfields*(m+e*mesh->Np)];
boltzmannPlotVTU2D.c:148:  //       dfloat wy = mesh->q[5 + mesh->Nfields*(m+e*mesh->Np)];
boltzmannPlotVTU2D.c:149:  //       dfloat wz = mesh->q[6 + mesh->Nfields*(m+e*mesh->Np)];
boltzmannPlotVTU2D.c:151:  //       plotwxn += mesh->plotInterp[n*mesh->Np+m]*wx;
boltzmannPlotVTU2D.c:152:  //       plotwyn += mesh->plotInterp[n*mesh->Np+m]*wy;
boltzmannPlotVTU2D.c:153:  //       plotwzn += mesh->plotInterp[n*mesh->Np+m]*wz;
boltzmannPlotVTU2D.c:169:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:170:    for(iint n=0;n<mesh->plotNelements;++n){
boltzmannPlotVTU2D.c:172:      for(int m=0;m<mesh->plotNverts;++m){
boltzmannPlotVTU2D.c:173:	fprintf(fp, "%d ", e*mesh->plotNp + mesh->plotEToV[n*mesh->plotNverts+m]);
boltzmannPlotVTU2D.c:183:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:184:    for(iint n=0;n<mesh->plotNelements;++n){
boltzmannPlotVTU2D.c:185:      cnt += mesh->plotNverts;
boltzmannPlotVTU2D.c:193:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannPlotVTU2D.c:194:    for(iint n=0;n<mesh->plotNelements;++n){
boltzmannReport2D.c:8:   t = mesh->startTime + mesh->dt*tstep*pow(2,(mesh->MRABNlevels-1));
boltzmannReport2D.c:10:   t = mesh->startTime+ tstep*mesh->dt;
boltzmannReport2D.c:13:  mesh->o_q.copyTo(mesh->q);
boltzmannReport2D.c:33:    //boltzmannComputeVorticity2D(mesh, mesh->q, 0, mesh->Nfields);
boltzmannReport2D.c:37:    sprintf(fname, "foo_%04d_%04d.vtu", rank, tstep/mesh->errorStep);
boltzmannReport2D.c:49:    //boltzmannComputeVorticity2D(mesh, mesh->q, 0, mesh->Nfields);
boltzmannReport2D.c:53:    sprintf(fname, "foo_%04d_%04d.vtu",rank, tstep/mesh->errorStep);
boltzmannSARKStep2D.c:10:       mesh->shiftIndex = 0;
boltzmannSARKStep2D.c:16:    dfloat t = mesh->startTime+ tstep*mesh->dt + mesh->dt*mesh->RK_C[s];
boltzmannSARKStep2D.c:23:    if(mesh->totalHaloPairs>0){
boltzmannSARKStep2D.c:26:        mesh->device.setStream(dataStream);
boltzmannSARKStep2D.c:29:      iint Nentries = mesh->Np*mesh->Nfields;
boltzmannSARKStep2D.c:30:      mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannSARKStep2D.c:32:                            mesh->o_haloElementList,
boltzmannSARKStep2D.c:33:                            mesh->o_q,
boltzmannSARKStep2D.c:34:                            mesh->o_haloBuffer);
boltzmannSARKStep2D.c:37:      mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannSARKStep2D.c:40:       mesh->device.setStream(defaultStream);
boltzmannSARKStep2D.c:46:    if (mesh->nonPmlNelements)
boltzmannSARKStep2D.c:47:    mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannSARKStep2D.c:48:                      mesh->o_nonPmlElementIds,
boltzmannSARKStep2D.c:51:                      mesh->Nrhs,
boltzmannSARKStep2D.c:52:                      mesh->shiftIndex,
boltzmannSARKStep2D.c:53:                      mesh->o_vgeo,
boltzmannSARKStep2D.c:54:                      mesh->o_DrT,
boltzmannSARKStep2D.c:55:                      mesh->o_DsT,
boltzmannSARKStep2D.c:56:                      mesh->o_q,
boltzmannSARKStep2D.c:57:                      mesh->o_rhsq);
boltzmannSARKStep2D.c:59:  if (mesh->pmlNelements)
boltzmannSARKStep2D.c:60:    mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannSARKStep2D.c:61:                          mesh->o_pmlElementIds,
boltzmannSARKStep2D.c:62:                          mesh->o_pmlIds,
boltzmannSARKStep2D.c:65:                          mesh->Nrhs,
boltzmannSARKStep2D.c:66:                          mesh->shiftIndex,
boltzmannSARKStep2D.c:67:                          mesh->o_vgeo,
boltzmannSARKStep2D.c:68:                          mesh->o_pmlSigmaX,
boltzmannSARKStep2D.c:69:                          mesh->o_pmlSigmaY,
boltzmannSARKStep2D.c:70:                          mesh->o_DrT,
boltzmannSARKStep2D.c:71:                          mesh->o_DsT,
boltzmannSARKStep2D.c:72:                          mesh->o_q,
boltzmannSARKStep2D.c:73:                          mesh->o_pmlqx,
boltzmannSARKStep2D.c:74:                          mesh->o_pmlqy,
boltzmannSARKStep2D.c:75:                          mesh->o_rhsq,
boltzmannSARKStep2D.c:76:                          mesh->o_pmlrhsqx,
boltzmannSARKStep2D.c:77:                          mesh->o_pmlrhsqy);
boltzmannSARKStep2D.c:82:    if (mesh->nonPmlNelements)
boltzmannSARKStep2D.c:83:      mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannSARKStep2D.c:84:                            mesh->o_nonPmlElementIds,
boltzmannSARKStep2D.c:85:                            mesh->Nrhs,
boltzmannSARKStep2D.c:86:                            mesh->shiftIndex,
boltzmannSARKStep2D.c:87:                            mesh->o_cubInterpT,
boltzmannSARKStep2D.c:88:                            mesh->o_cubProjectT,
boltzmannSARKStep2D.c:89:                            mesh->o_q,
boltzmannSARKStep2D.c:90:                            mesh->o_rhsq);  
boltzmannSARKStep2D.c:92:    if (mesh->pmlNelements)
boltzmannSARKStep2D.c:93:      mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannSARKStep2D.c:94:                                mesh->o_pmlElementIds,
boltzmannSARKStep2D.c:95:                                mesh->o_pmlIds,
boltzmannSARKStep2D.c:96:                                mesh->Nrhs,
boltzmannSARKStep2D.c:97:                                mesh->shiftIndex,
boltzmannSARKStep2D.c:98:                                mesh->o_cubInterpT,
boltzmannSARKStep2D.c:99:                                mesh->o_cubProjectT,
boltzmannSARKStep2D.c:100:                                mesh->o_q,
boltzmannSARKStep2D.c:101:                                mesh->o_rhsq);
boltzmannSARKStep2D.c:106:  if(mesh->totalHaloPairs>0){
boltzmannSARKStep2D.c:108:      mesh->device.setStream(dataStream);
boltzmannSARKStep2D.c:112:    mesh->device.finish();
boltzmannSARKStep2D.c:116:                          mesh->Nfields*mesh->Np*sizeof(dfloat),
boltzmannSARKStep2D.c:125:    size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannSARKStep2D.c:126:    mesh->o_q.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannSARKStep2D.c:127:    mesh->device.finish();        
boltzmannSARKStep2D.c:130:      mesh->device.setStream(defaultStream);
boltzmannSARKStep2D.c:135:  if (mesh->nonPmlNelements)
boltzmannSARKStep2D.c:136:    mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannSARKStep2D.c:137:                        mesh->o_nonPmlElementIds,
boltzmannSARKStep2D.c:140:                        mesh->Nrhs,
boltzmannSARKStep2D.c:141:                        mesh->shiftIndex,
boltzmannSARKStep2D.c:142:                        mesh->o_sgeo,
boltzmannSARKStep2D.c:143:                        mesh->o_LIFTT,
boltzmannSARKStep2D.c:144:                        mesh->o_vmapM,
boltzmannSARKStep2D.c:145:                        mesh->o_vmapP,
boltzmannSARKStep2D.c:146:                        mesh->o_EToB,
boltzmannSARKStep2D.c:147:                        mesh->o_x,
boltzmannSARKStep2D.c:148:                        mesh->o_y,
boltzmannSARKStep2D.c:149:                        mesh->o_q,
boltzmannSARKStep2D.c:150:                        mesh->o_rhsq);
boltzmannSARKStep2D.c:152:  if (mesh->pmlNelements)
boltzmannSARKStep2D.c:153:    mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannSARKStep2D.c:154:                          mesh->o_pmlElementIds,
boltzmannSARKStep2D.c:155:                          mesh->o_pmlIds,
boltzmannSARKStep2D.c:158:                          mesh->Nrhs,
boltzmannSARKStep2D.c:159:                          mesh->shiftIndex,
boltzmannSARKStep2D.c:160:                          mesh->o_sgeo,
boltzmannSARKStep2D.c:161:                          mesh->o_LIFTT,
boltzmannSARKStep2D.c:162:                          mesh->o_vmapM,
boltzmannSARKStep2D.c:163:                          mesh->o_vmapP,
boltzmannSARKStep2D.c:164:                          mesh->o_EToB,
boltzmannSARKStep2D.c:165:                          mesh->o_x,
boltzmannSARKStep2D.c:166:                          mesh->o_y,
boltzmannSARKStep2D.c:167:                          mesh->o_q,
boltzmannSARKStep2D.c:168:                          mesh->o_rhsq,
boltzmannSARKStep2D.c:169:                          mesh->o_pmlrhsqx,
boltzmannSARKStep2D.c:170:                          mesh->o_pmlrhsqy);
boltzmannSARKStep2D.c:175:    mesh->shiftIndex = (mesh->shiftIndex+1)%3;
boltzmannSARKStep2D.c:180:      if (mesh->pmlNelements)
boltzmannSARKStep2D.c:181:        mesh->pmlUpdateStageKernel(mesh->pmlNelements,
boltzmannSARKStep2D.c:182:                  mesh->o_pmlElementIds,
boltzmannSARKStep2D.c:183:                  mesh->o_pmlIds,
boltzmannSARKStep2D.c:184:                  mesh->dt,
boltzmannSARKStep2D.c:185:                  mesh->SARK_C[s],
boltzmannSARKStep2D.c:186:                  mesh->RK_A[s+1][0], 
boltzmannSARKStep2D.c:187:                  mesh->SARK_A[s+1][0], 
boltzmannSARKStep2D.c:188:                  mesh->RK_A[s+1][1], 
boltzmannSARKStep2D.c:189:                  mesh->SARK_A[s+1][1], 
boltzmannSARKStep2D.c:192:                  mesh->o_rhsq,
boltzmannSARKStep2D.c:193:                  mesh->o_pmlrhsqx,
boltzmannSARKStep2D.c:194:                  mesh->o_pmlrhsqy,
boltzmannSARKStep2D.c:195:                  mesh->o_qS,
boltzmannSARKStep2D.c:196:                  mesh->o_qSx,
boltzmannSARKStep2D.c:197:                  mesh->o_qSy,
boltzmannSARKStep2D.c:198:                  mesh->o_pmlqx,
boltzmannSARKStep2D.c:199:                  mesh->o_pmlqy,
boltzmannSARKStep2D.c:200:                  mesh->o_q);
boltzmannSARKStep2D.c:202:      if(mesh->nonPmlNelements)
boltzmannSARKStep2D.c:203:        mesh->updateStageKernel(mesh->nonPmlNelements,
boltzmannSARKStep2D.c:204:                  mesh->o_nonPmlElementIds,
boltzmannSARKStep2D.c:205:                  mesh->dt,
boltzmannSARKStep2D.c:206:                  mesh->SARK_C[s],
boltzmannSARKStep2D.c:207:                  mesh->RK_A[s+1][0], 
boltzmannSARKStep2D.c:208:                  mesh->SARK_A[s+1][0], 
boltzmannSARKStep2D.c:209:                  mesh->RK_A[s+1][1], 
boltzmannSARKStep2D.c:210:                  mesh->SARK_A[s+1][1],
boltzmannSARKStep2D.c:212:                  mesh->o_rhsq,
boltzmannSARKStep2D.c:213:                  mesh->o_qS,
boltzmannSARKStep2D.c:214:                  mesh->o_q);
boltzmannSARKStep2D.c:219:     if (mesh->pmlNelements)
boltzmannSARKStep2D.c:220:        mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannSARKStep2D.c:221:                  mesh->o_pmlElementIds,
boltzmannSARKStep2D.c:222:                  mesh->o_pmlIds,
boltzmannSARKStep2D.c:223:                  mesh->dt,
boltzmannSARKStep2D.c:224:                  mesh->SARK_C[s],
boltzmannSARKStep2D.c:225:                  mesh->RK_B[0], 
boltzmannSARKStep2D.c:226:                  mesh->SARK_B[0], 
boltzmannSARKStep2D.c:227:                  mesh->RK_B[1], 
boltzmannSARKStep2D.c:228:                  mesh->SARK_B[1], 
boltzmannSARKStep2D.c:229:                  mesh->RK_B[2], 
boltzmannSARKStep2D.c:230:                  mesh->SARK_B[2], 
boltzmannSARKStep2D.c:233:                  mesh->o_rhsq,
boltzmannSARKStep2D.c:234:                  mesh->o_pmlrhsqx,
boltzmannSARKStep2D.c:235:                  mesh->o_pmlrhsqy,
boltzmannSARKStep2D.c:236:                  mesh->o_qS,
boltzmannSARKStep2D.c:237:                  mesh->o_qSx,
boltzmannSARKStep2D.c:238:                  mesh->o_qSy,
boltzmannSARKStep2D.c:239:                  mesh->o_pmlqx,
boltzmannSARKStep2D.c:240:                  mesh->o_pmlqy,
boltzmannSARKStep2D.c:241:                  mesh->o_q);
boltzmannSARKStep2D.c:243:      if(mesh->nonPmlNelements)
boltzmannSARKStep2D.c:244:        mesh->updateKernel(mesh->nonPmlNelements,
boltzmannSARKStep2D.c:245:                  mesh->o_nonPmlElementIds,
boltzmannSARKStep2D.c:246:                  mesh->dt,
boltzmannSARKStep2D.c:247:                  mesh->SARK_C[s],
boltzmannSARKStep2D.c:248:                  mesh->RK_B[0], 
boltzmannSARKStep2D.c:249:                  mesh->SARK_B[0], 
boltzmannSARKStep2D.c:250:                  mesh->RK_B[1], 
boltzmannSARKStep2D.c:251:                  mesh->SARK_B[1], 
boltzmannSARKStep2D.c:252:                  mesh->RK_B[2], 
boltzmannSARKStep2D.c:253:                  mesh->SARK_B[2], 
boltzmannSARKStep2D.c:255:                  mesh->o_rhsq,
boltzmannSARKStep2D.c:256:                  mesh->o_qS,
boltzmannSARKStep2D.c:257:                  mesh->o_q);
boltzmannSetup2D.c:15:  mesh->Nfields = 6;
boltzmannSetup2D.c:20:    mesh->Nrhs = 3;
boltzmannSetup2D.c:22:    mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:23:    mesh->rhsq = (dfloat*) calloc(mesh->Nrhs*mesh->Nelements*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:25:    mesh->fQM  = (dfloat*) calloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:26:    mesh->fQP  = (dfloat*) calloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:30:    mesh->Nrhs = 3;
boltzmannSetup2D.c:32:    mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:33:    mesh->rhsq = (dfloat*) calloc(mesh->Nrhs*mesh->Nelements*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:37:    mesh->Nrhs = 1; 
boltzmannSetup2D.c:39:    mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:40:    mesh->rhsq = (dfloat*) calloc(mesh->Nrhs*mesh->Nelements*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:41:    mesh->resq = (dfloat*) calloc(mesh->Nrhs*mesh->Nelements*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:46:    mesh->Nrhs = 1; 
boltzmannSetup2D.c:48:    mesh->q    = (dfloat*) calloc((mesh->totalHaloPairs+mesh->Nelements)*mesh->Np*mesh->Nfields, sizeof(dfloat));
boltzmannSetup2D.c:68:    mesh->RT      = Uref*Uref/(Ma*Ma);
boltzmannSetup2D.c:69:    mesh->sqrtRT  = sqrt(mesh->RT);  
boltzmannSetup2D.c:72:    mesh->tauInv  = mesh->RT/nu;
boltzmannSetup2D.c:77:    mesh->startTime = 0.0; 
boltzmannSetup2D.c:78:    mesh->finalTime = 3.0;
boltzmannSetup2D.c:82:    mesh->Ma = 0.1;     //Set Mach number
boltzmannSetup2D.c:83:    mesh->Re = 10.;   // Set Reynolds number
boltzmannSetup2D.c:88:    mesh->RT  = Uref*Uref/(mesh->Ma*mesh->Ma);
boltzmannSetup2D.c:89:    mesh->sqrtRT = sqrt(mesh->RT);  
boltzmannSetup2D.c:91:    nu = Uref*Lref/mesh->Re; 
boltzmannSetup2D.c:92:    mesh->tauInv = mesh->RT/nu;
boltzmannSetup2D.c:104:    mesh->startTime = 0.0; 
boltzmannSetup2D.c:105:    mesh->finalTime = 1.0;
boltzmannSetup2D.c:109:  mesh->Lambda2 = 0.5/(mesh->sqrtRT);
boltzmannSetup2D.c:116:  dfloat time = mesh->startTime + 0.0; 
boltzmannSetup2D.c:122:  dfloat q2bar = rho*u/mesh->sqrtRT;
boltzmannSetup2D.c:123:  dfloat q3bar = rho*v/mesh->sqrtRT;
boltzmannSetup2D.c:124:  dfloat q4bar = (rho*u*v - sigma12)/mesh->RT;
boltzmannSetup2D.c:125:  dfloat q5bar = (rho*u*u - sigma11)/(sqrt(2.)*mesh->RT);
boltzmannSetup2D.c:126:  dfloat q6bar = (rho*v*v - sigma22)/(sqrt(2.)*mesh->RT);
boltzmannSetup2D.c:131:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannSetup2D.c:132:    for(iint n=0;n<mesh->Np;++n){
boltzmannSetup2D.c:134:      dfloat x = mesh->x[n + mesh->Np*e];
boltzmannSetup2D.c:135:      dfloat y = mesh->y[n + mesh->Np*e];
boltzmannSetup2D.c:145:         // dfloat coef = -mesh->RT*mesh->tauInv/2. + sqrt(pow((mesh->RT*mesh->tauInv),2) /4.0 - (lamda*lamda*mesh->RT*mesh->RT));
boltzmannSetup2D.c:146:         dfloat coef = -mesh->tauInv/2. + mesh->tauInv/2. * sqrt(1. - 4.*pow(1./ mesh->tauInv, 2)* mesh->RT*lamda*lamda);
boltzmannSetup2D.c:154:      mesh->q[cnt+0] = rho; // uniform density, zero flow
boltzmannSetup2D.c:155:      mesh->q[cnt+1] = rho*uex/mesh->sqrtRT;
boltzmannSetup2D.c:156:      mesh->q[cnt+2] = 0.0;
boltzmannSetup2D.c:157:      mesh->q[cnt+3] = sex/mesh->RT;
boltzmannSetup2D.c:158:      mesh->q[cnt+4] = 0.0;
boltzmannSetup2D.c:159:      mesh->q[cnt+5] = 0.0;  
boltzmannSetup2D.c:171:      dfloat rhor  = rho*exp(-Umax*Umax/(2. * mesh->RT) *exp(1.0-r*r/(b*b)));
boltzmannSetup2D.c:175:      mesh->q[cnt+0] = rhor; // uniform density, zero flow
boltzmannSetup2D.c:176:      mesh->q[cnt+1] = ramp*rhor*(-Ur*sin(theta) + u)/mesh->sqrtRT;
boltzmannSetup2D.c:177:      mesh->q[cnt+2] = ramp*rhor*( Ur*cos(theta) + v)/mesh->sqrtRT;
boltzmannSetup2D.c:178:      mesh->q[cnt+3] = ramp*ramp*q4bar;
boltzmannSetup2D.c:179:      mesh->q[cnt+4] = ramp*ramp*q5bar;
boltzmannSetup2D.c:180:      mesh->q[cnt+5] = ramp*ramp*q6bar;  
boltzmannSetup2D.c:186:      mesh->q[cnt+0] = q1bar; // uniform density, zero flow
boltzmannSetup2D.c:187:      mesh->q[cnt+1] = ramp*q2bar;
boltzmannSetup2D.c:188:      mesh->q[cnt+2] = ramp*q3bar;
boltzmannSetup2D.c:189:      mesh->q[cnt+3] = ramp*ramp*q4bar;
boltzmannSetup2D.c:190:      mesh->q[cnt+4] = ramp*ramp*q5bar;
boltzmannSetup2D.c:191:      mesh->q[cnt+5] = ramp*ramp*q6bar;  
boltzmannSetup2D.c:197:      cnt += mesh->Nfields;
boltzmannSetup2D.c:205:  dfloat magVelocity  = sqrt(q2bar*q2bar+q3bar*q3bar)/(q1bar/mesh->sqrtRT);
boltzmannSetup2D.c:210:  dfloat *EtoDT       = (dfloat *) calloc(mesh->Nelements,sizeof(dfloat));
boltzmannSetup2D.c:213:  for(iint e=0;e<mesh->Nelements;++e)
boltzmannSetup2D.c:219:    for(iint f=0;f<mesh->Nfaces;++f){
boltzmannSetup2D.c:220:      iint sid    = mesh->Nsgeo*(mesh->Nfaces*e + f);
boltzmannSetup2D.c:221:      dfloat sJ   = mesh->sgeo[sid + SJID];
boltzmannSetup2D.c:222:      dfloat invJ = mesh->sgeo[sid + IJID];
boltzmannSetup2D.c:230:    dfloat dtex   = cfl*hmin/((mesh->N+1.)*(mesh->N+1.)*sqrt(3.)*mesh->sqrtRT);
boltzmannSetup2D.c:231:    dfloat dtim   = 1.f/(mesh->tauInv);
boltzmannSetup2D.c:247:   printf("dtex = %.5e dtim = %.5e \n", cfl*ghmin/((mesh->N+1.)*(mesh->N+1.)*sqrt(3.)*mesh->sqrtRT), 1.f/(mesh->tauInv));
boltzmannSetup2D.c:258:  //   printf("Time step size scaling with %d", mesh->Ntscale);
boltzmannSetup2D.c:259:  //   // dt = pow(2,mesh->Ntscale)*1e-6; 
boltzmannSetup2D.c:260:  //   dt = mesh->Ntscale*1e-5;   
boltzmannSetup2D.c:266:  MPI_Allreduce(&dt, &(mesh->dt), 1, MPI_DFLOAT, MPI_MIN, MPI_COMM_WORLD);
boltzmannSetup2D.c:267:  mesh->NtimeSteps = (mesh->finalTime-mesh->startTime)/mesh->dt;
boltzmannSetup2D.c:268:  mesh->dt         = (mesh->finalTime-mesh->startTime)/mesh->NtimeSteps;
boltzmannSetup2D.c:271:  mesh->shiftIndex = 0;
boltzmannSetup2D.c:274:  mesh->nonPmlNelements = mesh->Nelements; 
boltzmannSetup2D.c:275:  mesh->pmlNelements    = 0; 
boltzmannSetup2D.c:277:  mesh->nonPmlElementIds = (iint*) calloc(mesh->Nelements, sizeof(iint));
boltzmannSetup2D.c:278:   for(iint e=0;e<mesh->Nelements;++e)
boltzmannSetup2D.c:279:     mesh->nonPmlElementIds[e] = e; 
boltzmannSetup2D.c:287:  mesh->errorStep = 1000;
boltzmannSetup2D.c:289:    printf("dt   = %g ",   mesh->dt);
boltzmannSetup2D.c:290:    printf("max wave speed = %g\n", sqrt(3.)*mesh->sqrtRT);
boltzmannSetup2D.c:291:    if(mesh->MRABNlevels)
boltzmannSetup2D.c:292:      printf("Nsteps = %d dt = %.8e MRAB Level: %d  Final Time:%.5e\n", mesh->NtimeSteps, mesh->dt, mesh->MRABNlevels, mesh->startTime+pow(2, mesh->MRABNlevels-1)*(mesh->dt*(mesh->NtimeSteps+1)));   
boltzmannSetup2D.c:294:     printf("Nsteps = %d dt = %.8e Final Time:%.5e\n", mesh->NtimeSteps, mesh->dt,  mesh->startTime + mesh->dt*mesh->NtimeSteps);
boltzmannSetup2D.c:319:    mesh->o_MRABelementIds = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannSetup2D.c:320:    mesh->o_MRABhaloIds = (occa::memory *) malloc(mesh->MRABNlevels*sizeof(occa::memory));
boltzmannSetup2D.c:321:    for (iint lev=0;lev<mesh->MRABNlevels;lev++) {
boltzmannSetup2D.c:322:      if (mesh->MRABNelements[lev])
boltzmannSetup2D.c:323:        mesh->o_MRABelementIds[lev] = mesh->device.malloc(mesh->MRABNelements[lev]*sizeof(iint),
boltzmannSetup2D.c:324:        mesh->MRABelementIds[lev]);
boltzmannSetup2D.c:325:      if (mesh->MRABNhaloElements[lev])
boltzmannSetup2D.c:326:        mesh->o_MRABhaloIds[lev] = mesh->device.malloc(mesh->MRABNhaloElements[lev]*sizeof(iint),
boltzmannSetup2D.c:327:        mesh->MRABhaloIds[lev]);
boltzmannSetup2D.c:334:    if (mesh->nonPmlNelements)
boltzmannSetup2D.c:335:        mesh->o_nonPmlElementIds = mesh->device.malloc(mesh->nonPmlNelements*sizeof(iint), mesh->nonPmlElementIds);
boltzmannSetup2D.c:350:    Nlevels = mesh->MRABNlevels;
boltzmannSetup2D.c:361:  mesh->MRSAAB_A = (dfloat *) calloc(3*3*Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:362:  mesh->MRSAAB_B = (dfloat *) calloc(3*3*Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:363:  mesh->MRSAAB_C = (dfloat *) calloc(    Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:364:  mesh->MRAB_A   = (dfloat *) calloc(3*3*Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:365:  mesh->MRAB_B   = (dfloat *) calloc(3*3*Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:366:  mesh->MRAB_C   = (dfloat *) calloc(    Nlevels,sizeof(dfloat));
boltzmannSetup2D.c:372:    dfloat alpha = -mesh->tauInv*mesh->dt*pow(2,l);
boltzmannSetup2D.c:373:    dfloat h  = mesh->dt * pow(2,l); 
boltzmannSetup2D.c:393:      //   mesh->MRSAAB_A[id + 0] = creal(p1);
boltzmannSetup2D.c:394:      //   mesh->MRSAAB_A[id + 1] = 0.f;
boltzmannSetup2D.c:395:      //   mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannSetup2D.c:397:      //   // mesh->MRSAAB_B[id + 0] = creal(b1)/Nr;
boltzmannSetup2D.c:398:      //   // mesh->MRSAAB_B[id + 1] = 0.f;
boltzmannSetup2D.c:399:      //   // mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannSetup2D.c:402:      //   mesh->MRAB_A[id + 0]   =  h ;
boltzmannSetup2D.c:403:      //   mesh->MRAB_A[id + 1]   =  0.f ;
boltzmannSetup2D.c:404:      //   mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannSetup2D.c:406:      //   mesh->MRAB_B[id+0]     =  h/2. ;
boltzmannSetup2D.c:407:      //   mesh->MRAB_B[id+1]     =  0.f ;
boltzmannSetup2D.c:408:      //   mesh->MRAB_B[id+2]     =  0.f ;
boltzmannSetup2D.c:424:      //   mesh->MRSAAB_A[id + 0] = creal(p1)+ creal(p2);
boltzmannSetup2D.c:425:      //   mesh->MRSAAB_A[id + 1] = -creal(p2);
boltzmannSetup2D.c:426:      //   mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannSetup2D.c:428:      //   // mesh->MRSAAB_B[id + 0] = creal(b1)/Nr;
boltzmannSetup2D.c:429:      //   // mesh->MRSAAB_B[id + 1] = creal(b2)/Nr;
boltzmannSetup2D.c:430:      //   // mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannSetup2D.c:432:      //   mesh->MRAB_A[id + 0]   =  3.*h/2. ;
boltzmannSetup2D.c:433:      //   mesh->MRAB_A[id + 1]   = -1.*h/2. ;
boltzmannSetup2D.c:434:      //   mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannSetup2D.c:436:      //   mesh->MRAB_B[id + 0]   =  5.*h/8. ;
boltzmannSetup2D.c:437:      //   mesh->MRAB_B[id + 1]   = -1.*h/8. ;
boltzmannSetup2D.c:438:      //   mesh->MRAB_B[id + 2]   =   0.f ;
boltzmannSetup2D.c:456:      //   mesh->MRSAAB_A[id+0] = creal(p1) + 1.5*creal(p2)+ creal(p3);
boltzmannSetup2D.c:457:      //   mesh->MRSAAB_A[id+1] =             -2.*creal(p2)-2.*creal(p3);
boltzmannSetup2D.c:458:      //   mesh->MRSAAB_A[id+2] =             0.5*creal(p2)+ creal(p3);
boltzmannSetup2D.c:460:      //   // mesh->MRSAAB_B[id+0] = creal(b1)/Nr;
boltzmannSetup2D.c:461:      //   // mesh->MRSAAB_B[id+1] = creal(b2)/Nr;
boltzmannSetup2D.c:462:      //   // mesh->MRSAAB_B[id+2] = creal(b3)/Nr;
boltzmannSetup2D.c:465:      //   mesh->MRAB_A[id+0]   =  23.*h/12. ;
boltzmannSetup2D.c:466:      //   mesh->MRAB_A[id+1]   = -16.*h/12. ;
boltzmannSetup2D.c:467:      //   mesh->MRAB_A[id+2]   =  5. *h/12. ;
boltzmannSetup2D.c:469:      //   mesh->MRAB_B[id+0]   =  17.*h/24. ;
boltzmannSetup2D.c:470:      //   mesh->MRAB_B[id+1]   = - 7.*h/24. ;
boltzmannSetup2D.c:471:      //   mesh->MRAB_B[id+2]   =   2.*h/24. ;
boltzmannSetup2D.c:491:        mesh->MRSAAB_A[id + 0] = creal(a1)/Nr;
boltzmannSetup2D.c:492:        mesh->MRSAAB_A[id + 1] = 0.f;
boltzmannSetup2D.c:493:        mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannSetup2D.c:495:        mesh->MRSAAB_B[id + 0] = creal(b1)/Nr;
boltzmannSetup2D.c:496:        mesh->MRSAAB_B[id + 1] = 0.f;
boltzmannSetup2D.c:497:        mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannSetup2D.c:500:        mesh->MRAB_A[id + 0]   =  h ;
boltzmannSetup2D.c:501:        mesh->MRAB_A[id + 1]   =  0.f ;
boltzmannSetup2D.c:502:        mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannSetup2D.c:504:        mesh->MRAB_B[id+0]     =  h/2. ;
boltzmannSetup2D.c:505:        mesh->MRAB_B[id+1]     =  0.f ;
boltzmannSetup2D.c:506:        mesh->MRAB_B[id+2]     =  0.f ;
boltzmannSetup2D.c:524:        mesh->MRSAAB_A[id + 0] = creal(a1)/Nr;
boltzmannSetup2D.c:525:        mesh->MRSAAB_A[id + 1] = creal(a2)/Nr;
boltzmannSetup2D.c:526:        mesh->MRSAAB_A[id + 2] = 0.f;
boltzmannSetup2D.c:528:        mesh->MRSAAB_B[id + 0] = creal(b1)/Nr;
boltzmannSetup2D.c:529:        mesh->MRSAAB_B[id + 1] = creal(b2)/Nr;
boltzmannSetup2D.c:530:        mesh->MRSAAB_B[id + 2] = 0.f;
boltzmannSetup2D.c:534:        mesh->MRAB_A[id + 0]   =  3.*h/2. ;
boltzmannSetup2D.c:535:        mesh->MRAB_A[id + 1]   = -1.*h/2. ;
boltzmannSetup2D.c:536:        mesh->MRAB_A[id + 2]   =  0.f ;
boltzmannSetup2D.c:538:        mesh->MRAB_B[id + 0]   =  5.*h/8. ;
boltzmannSetup2D.c:539:        mesh->MRAB_B[id + 1]   = -1.*h/8. ;
boltzmannSetup2D.c:540:        mesh->MRAB_B[id + 2]   =   0.f ;
boltzmannSetup2D.c:563:        mesh->MRSAAB_A[id+0] = creal(a1)/Nr;
boltzmannSetup2D.c:564:        mesh->MRSAAB_A[id+1] = creal(a2)/Nr;
boltzmannSetup2D.c:565:        mesh->MRSAAB_A[id+2] = creal(a3)/Nr;
boltzmannSetup2D.c:567:        mesh->MRSAAB_B[id+0] = creal(b1)/Nr;
boltzmannSetup2D.c:568:        mesh->MRSAAB_B[id+1] = creal(b2)/Nr;
boltzmannSetup2D.c:569:        mesh->MRSAAB_B[id+2] = creal(b3)/Nr;
boltzmannSetup2D.c:572:        mesh->MRAB_A[id+0]   =  23.*h/12. ;
boltzmannSetup2D.c:573:        mesh->MRAB_A[id+1]   = -16.*h/12. ;
boltzmannSetup2D.c:574:        mesh->MRAB_A[id+2]   =  5. *h/12. ;
boltzmannSetup2D.c:576:        mesh->MRAB_B[id+0]   =  17.*h/24. ;
boltzmannSetup2D.c:577:        mesh->MRAB_B[id+1]   = - 7.*h/24. ;
boltzmannSetup2D.c:578:        mesh->MRAB_B[id+2]   =   2.*h/24. ;
boltzmannSetup2D.c:583:      printf("%.14e\t%.14e\t%.14e\t%.14e\t%.14e\t%.14e\n",mesh->MRSAAB_A[id+0],mesh->MRSAAB_A[id+1],mesh->MRSAAB_A[id+2],
boltzmannSetup2D.c:584:                                                           mesh->MRSAAB_B[id+0], mesh->MRSAAB_B[id+1],mesh->MRSAAB_B[id+2]);  
boltzmannSetup2D.c:589:    mesh->MRSAAB_C[l]    = exp(alpha);
boltzmannSetup2D.c:590:    mesh->MRAB_C[l]      =   h ;
boltzmannSetup2D.c:596:  mesh->o_rhsq.free();
boltzmannSetup2D.c:597:  mesh->o_rhsq = mesh->device.malloc(3*mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannSetup2D.c:602:    if (mesh->totalHaloPairs) {
boltzmannSetup2D.c:604:      mesh->o_haloBuffer.free();
boltzmannSetup2D.c:605:      mesh->o_haloBuffer = mesh->device.malloc(mesh->totalHaloPairs*mesh->Nfp*mesh->Nfields*mesh->Nfaces*sizeof(dfloat));
boltzmannSetup2D.c:608:    mesh->o_fQM = mesh->device.malloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields*sizeof(dfloat),
boltzmannSetup2D.c:609:    mesh->fQM);
boltzmannSetup2D.c:610:    mesh->o_fQP = mesh->device.malloc((mesh->Nelements+mesh->totalHaloPairs)*mesh->Nfp*mesh->Nfaces*mesh->Nfields*sizeof(dfloat),
boltzmannSetup2D.c:611:    mesh->fQP);
boltzmannSetup2D.c:612:    mesh->o_mapP = mesh->device.malloc(mesh->Nelements*mesh->Nfp*mesh->Nfaces*sizeof(iint), 
boltzmannSetup2D.c:613:    mesh->mapP);
boltzmannSetup2D.c:631:        mesh->SARK_A[i][j] = 0.0; mesh->RK_A[i][j]   = 0.0; 
boltzmannSetup2D.c:633:      mesh->SARK_B[i] = 0.0; mesh->SARK_C[i] = 0.0;
boltzmannSetup2D.c:634:      mesh->RK_B[i]   = 0.0; mesh->RK_C[i]   = 0.0;
boltzmannSetup2D.c:643:    mesh->RK_A[0][0] = 0.;  mesh->RK_A[1][0] = a21;  mesh->RK_A[2][0] = a31;   mesh->RK_A[2][1] = a32; 
boltzmannSetup2D.c:644:    mesh->RK_B[0] = b1;     mesh->RK_B[1] = b2;      mesh->RK_B[2] = b3; 
boltzmannSetup2D.c:645:    mesh->RK_C[0] = c1;     mesh->RK_C[1] = c2;      mesh->RK_C[2] = c3; 
boltzmannSetup2D.c:647:    dfloat alpha = -mesh->tauInv*mesh->dt, coef = -mesh->tauInv, h   = mesh->dt; 
boltzmannSetup2D.c:649:    printf("alpha = %.16e\t h= %.16e\t coef=%.16e \n", alpha,mesh->dt, -mesh->tauInv);
boltzmannSetup2D.c:677:      mesh->SARK_A[1][0] = creal(ca21)/ (double) Nr; 
boltzmannSetup2D.c:678:      mesh->SARK_A[2][0] = creal(ca31)/ (double) Nr; 
boltzmannSetup2D.c:679:      mesh->SARK_A[2][1] = creal(ca32)/ (double) Nr; 
boltzmannSetup2D.c:682:      mesh->SARK_B[0] = creal(cb1) / (double) Nr;
boltzmannSetup2D.c:683:      mesh->SARK_B[1] = creal(cb2) / (double) Nr;
boltzmannSetup2D.c:684:      mesh->SARK_B[2] = creal(cb3) / (double) Nr;
boltzmannSetup2D.c:687:      mesh->SARK_C[0] = exp(alpha*c2); 
boltzmannSetup2D.c:688:      mesh->SARK_C[1] = exp(alpha*c3); 
boltzmannSetup2D.c:689:      mesh->SARK_C[2] = exp(alpha*1.0);
boltzmannSetup2D.c:691:      printf("%.14e\t%.14e\t%.14e\t%.14e\t%.14e\t%.14e\n",mesh->SARK_A[1][0],mesh->SARK_A[2][0],mesh->SARK_A[2][1],
boltzmannSetup2D.c:692:                                                           mesh->SARK_B[0],  mesh->SARK_B[1],  mesh->SARK_B[2]);  
boltzmannSetup2D.c:697:    //   mesh->SARK_A[1][0] = (exp(coef*h/2.) - 1.)/(coef*h); // a21
boltzmannSetup2D.c:698:    //   mesh->SARK_A[2][0] = -1.0*(exp(coef*h)-1.0)/(coef*h); // a31
boltzmannSetup2D.c:699:    //   mesh->SARK_A[2][1] =  2.0*(exp(coef*h)-1.0)/(coef*h);// a32 
boltzmannSetup2D.c:702:    //   mesh->SARK_B[0] =   (-4. -coef*h + exp(coef*h)*(4.-3.*coef*h+pow(h*coef,2.)))/ (pow(coef*h,3)) ;
boltzmannSetup2D.c:703:    //   mesh->SARK_B[1] =  4.*(2. + coef*h + exp(coef*h)*(-2. + coef*h)) / (pow(coef*h,3)) ;
boltzmannSetup2D.c:704:    //   mesh->SARK_B[2] =   (-4. -3.*coef*h - pow(coef*h,2)+ exp(coef*h)*(4. - coef*h))/ (pow(coef*h,3)) ;
boltzmannSetup2D.c:707:    //   mesh->SARK_C[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:708:    //   mesh->SARK_C[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:709:    //   mesh->SARK_C[2] = exp(coef*h*1.0);
boltzmannSetup2D.c:718:    //   mesh->SARK_A[1][0] = (pow(coef,4)*pow(h,4))/3840. + (pow(coef,3)*pow(h,3))/384. + (pow(coef,2)*pow(h,2))/48. + (coef*h)/8 + 1./2.;
boltzmannSetup2D.c:719:    //   mesh->SARK_A[2][0] =  -1.0 *  ((pow(coef,4)*pow(h,4))/120. + (pow(coef,3)*pow(h,3))/24. + (pow(coef,2)*pow(h,2))/6. + (coef*h)/2. + 1.);
boltzmannSetup2D.c:720:    //   mesh->SARK_A[2][1] =  2.0*((pow(coef,4)*pow(h,4))/120. + (pow(coef,3)*pow(h,3))/24. + (pow(coef,2)*pow(h,2))/6. + (coef*h)/2. + 1.);
boltzmannSetup2D.c:722:    //   mesh->SARK_B[0] =  (5.*pow(coef,4)*pow(h,4))/1008. + (pow(coef,3)*pow(h,3))/45. + (3.*pow(coef,2)*pow(h,2))/40. + (coef*h)/6. + 1./6. ; 
boltzmannSetup2D.c:723:    //   mesh->SARK_B[1] =  (pow(coef,4)*pow(h,4))/252. + (pow(coef,3)*pow(h,3))/45. + (pow(coef,2)*pow(h,2))/10. + (coef*h)/3. + 2./3. ;
boltzmannSetup2D.c:724:    //   mesh->SARK_B[2] =  1./6. - (pow(coef,3)*pow(h,3))/360. - (pow(coef,4)*pow(h,4))/1680. - (pow(coef,2)*pow(h,2))/120. ;
boltzmannSetup2D.c:727:    //   mesh->SARK_C[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:728:    //   mesh->SARK_C[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:729:    //   mesh->SARK_C[2] = exp(coef*h*1.0);
boltzmannSetup2D.c:733:    mesh->o_qS =
boltzmannSetup2D.c:734:     mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat),
boltzmannSetup2D.c:735:                          mesh->q);
boltzmannSetup2D.c:738:    mesh->o_rhsq.free();
boltzmannSetup2D.c:739:    mesh->o_rhsq = mesh->device.malloc(mesh->Nrhs*mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq); 
boltzmannSetup2D.c:762:  mesh->Nimex = Nimex;
boltzmannSetup2D.c:763:  memcpy(mesh->LSIMEX_B, ImB, Nimex*sizeof(dfloat));
boltzmannSetup2D.c:764:  memcpy(mesh->LSIMEX_C, ImC, Nimex*sizeof(dfloat));
boltzmannSetup2D.c:765:  memcpy(mesh->LSIMEX_Ad, ImAd, Nimex*sizeof(dfloat));
boltzmannSetup2D.c:766:  memcpy(mesh->LSIMEX_ABi, ImAmBim, Nimex*sizeof(dfloat));
boltzmannSetup2D.c:767:  memcpy(mesh->LSIMEX_ABe, ImAmBex, Nimex*sizeof(dfloat));
boltzmannSetup2D.c:769:    mesh->o_qY =    
boltzmannSetup2D.c:770:      mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->q);
boltzmannSetup2D.c:772:    mesh->o_qZ =    
boltzmannSetup2D.c:773:      mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->q);
boltzmannSetup2D.c:775:    mesh->o_qS =
boltzmannSetup2D.c:776:      mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->q);
boltzmannSetup2D.c:780:  int maxNodes = mymax(mesh->Np, (mesh->Nfp*mesh->Nfaces));
boltzmannSetup2D.c:781:  int maxCubNodes = mymax(maxNodes,mesh->cubNp);
boltzmannSetup2D.c:787:  int NblockV = 256/mesh->Np; // works for CUDA
boltzmannSetup2D.c:793:  int NblockCub = 256/mesh->cubNp; // works for CUDA
boltzmannSetup2D.c:798:  kernelInfo.addDefine("p_sqrtRT", mesh->sqrtRT);
boltzmannSetup2D.c:803:  kernelInfo.addDefine("p_tauInv", mesh->tauInv);
boltzmannSetup2D.c:823:      mesh->volumeKernel =
boltzmannSetup2D.c:824:        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:829:      mesh->pmlVolumeKernel =
boltzmannSetup2D.c:830:        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:837:       mesh->relaxationKernel =
boltzmannSetup2D.c:838:         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:844:        mesh->pmlRelaxationKernel =
boltzmannSetup2D.c:845:         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:852:     mesh->relaxationKernel =
boltzmannSetup2D.c:853:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:859:    mesh->pmlRelaxationKernel =
boltzmannSetup2D.c:860:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:874:      mesh->volumeKernel =
boltzmannSetup2D.c:875:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:880:      mesh->pmlVolumeKernel =
boltzmannSetup2D.c:881:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:888:      mesh->volumeKernel =
boltzmannSetup2D.c:889:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:894:      mesh->pmlVolumeKernel =
boltzmannSetup2D.c:895:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:908:    mesh->updateKernel =
boltzmannSetup2D.c:909:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:914:    mesh->traceUpdateKernel =
boltzmannSetup2D.c:915:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:920:    mesh->pmlUpdateKernel =
boltzmannSetup2D.c:921:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:926:    mesh->pmlTraceUpdateKernel =
boltzmannSetup2D.c:927:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:935:    mesh->updateKernel =
boltzmannSetup2D.c:936:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:941:    mesh->traceUpdateKernel =
boltzmannSetup2D.c:942:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:947:    mesh->pmlUpdateKernel =
boltzmannSetup2D.c:948:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:953:    mesh->pmlTraceUpdateKernel =
boltzmannSetup2D.c:954:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:961:     mesh->updateKernel =
boltzmannSetup2D.c:962:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:967:      mesh->pmlUpdateKernel =
boltzmannSetup2D.c:968:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:976:     mesh->updateKernel =
boltzmannSetup2D.c:977:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:982:      mesh->pmlUpdateKernel =
boltzmannSetup2D.c:983:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:990:     mesh->updateKernel =
boltzmannSetup2D.c:991:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:996:      mesh->pmlUpdateKernel =
boltzmannSetup2D.c:997:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1007:    mesh->updateKernel =
boltzmannSetup2D.c:1008:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1014:    mesh->updateStageKernel =
boltzmannSetup2D.c:1015:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1021:    mesh->pmlUpdateKernel =
boltzmannSetup2D.c:1022:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1027:    mesh->pmlUpdateStageKernel =
boltzmannSetup2D.c:1028:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1036:    mesh->surfaceKernel =
boltzmannSetup2D.c:1037:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1042:    mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1043:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1050:    mesh->surfaceKernel =
boltzmannSetup2D.c:1051:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1056:    mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1057:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1067:    mesh->residualUpdateKernel =
boltzmannSetup2D.c:1068:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1073:    mesh->implicitUpdateKernel =
boltzmannSetup2D.c:1074:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1079:   mesh->pmlResidualUpdateKernel =
boltzmannSetup2D.c:1080:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1085:   mesh->pmlImplicitUpdateKernel =
boltzmannSetup2D.c:1086:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1094:       mesh->implicitSolveKernel = 
boltzmannSetup2D.c:1095:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1100:      mesh->pmlImplicitSolveKernel = 
boltzmannSetup2D.c:1101:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1108:      mesh->implicitSolveKernel = 
boltzmannSetup2D.c:1109:      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1114:     mesh->pmlImplicitSolveKernel = 
boltzmannSetup2D.c:1115:     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1122:    mesh->volumeKernel =
boltzmannSetup2D.c:1123:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1129:    mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1130:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1135:    mesh->surfaceKernel =
boltzmannSetup2D.c:1136:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1141:    mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1142:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1147:    mesh->updateKernel =
boltzmannSetup2D.c:1148:    mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1153:       mesh->pmlUpdateKernel =
boltzmannSetup2D.c:1154:       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1161:    mesh->haloExtractKernel =
boltzmannSetup2D.c:1162:      mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannSetup2D.c:1171://   mesh->Lambda2 = 0.5/(mesh->sqrtRT);
boltzmannSetup2D.c:1181://   iint *pmlElementIds = (iint*) calloc(mesh->Nelements, sizeof(iint));
boltzmannSetup2D.c:1182://   iint *nonPmlElementIds = (iint*) calloc(mesh->Nelements, sizeof(iint));
boltzmannSetup2D.c:1185://   for(iint e=0;e<mesh->Nelements;++e){
boltzmannSetup2D.c:1187://     for(iint n=0;n<mesh->Nverts;++n){
boltzmannSetup2D.c:1188://       cx += mesh->EX[e*mesh->Nverts+n];
boltzmannSetup2D.c:1189://       cy += mesh->EY[e*mesh->Nverts+n];
boltzmannSetup2D.c:1191://     cx /= mesh->Nverts;
boltzmannSetup2D.c:1192://     cy /= mesh->Nverts;
boltzmannSetup2D.c:1196:// for(iint n=0;n<mesh->Np;++n){
boltzmannSetup2D.c:1197://   dfloat x = mesh->x[n + e*mesh->Np];
boltzmannSetup2D.c:1198://   dfloat y = mesh->y[n + e*mesh->Np];
boltzmannSetup2D.c:1206://         mesh->sigmax[mesh->Np*e + n] = xsigma*pow(x-xmax,2);
boltzmannSetup2D.c:1210://          mesh->sigmax[mesh->Np*e + n] = xsigma*pow(x-xmin,2);
boltzmannSetup2D.c:1214://         mesh->sigmay[mesh->Np*e + n] = ysigma*pow(y-ymax,2);
boltzmannSetup2D.c:1218://         mesh->sigmay[mesh->Np*e + n] = ysigma*pow(y-ymin,2);   
boltzmannSetup2D.c:1227://         mesh->sigmax[mesh->Np*e + n] = cxsigma;
boltzmannSetup2D.c:1231://          mesh->sigmax[mesh->Np*e + n]= cxsigma;
boltzmannSetup2D.c:1235://         mesh->sigmay[mesh->Np*e + n] = cysigma;
boltzmannSetup2D.c:1239://         mesh->sigmay[mesh->Np*e + n] = cysigma;
boltzmannSetup2D.c:1255://   printf("detected pml: %d pml %d non-pml %d total \n", pmlNelements, nonPmlNelements, mesh->Nelements);
boltzmannSetup2D.c:1259://   for(iint e=0;e<mesh->Nelements;++e){ 
boltzmannSetup2D.c:1263://     for(iint f=0;f<mesh->Nfaces;++f){
boltzmannSetup2D.c:1264://       iint sid = mesh->Nsgeo*(mesh->Nfaces*e + f);
boltzmannSetup2D.c:1265://       dfloat sJ   = mesh->sgeo[sid + SJID];
boltzmannSetup2D.c:1266://       dfloat invJ = mesh->sgeo[sid + IJID];
boltzmannSetup2D.c:1278://   dfloat magVelocity = sqrt(q2bar*q2bar+q3bar*q3bar)/(q1bar/mesh->sqrtRT);
boltzmannSetup2D.c:1281://   dfloat dtex = hmin/((mesh->N+1.)*(mesh->N+1.)*sqrt(3.)*mesh->sqrtRT);
boltzmannSetup2D.c:1282://   dfloat dtim = 1./(mesh->tauInv);
boltzmannSetup2D.c:1316://   printf("max wave speed = %g\n", sqrt(3.)*mesh->sqrtRT);
boltzmannSetup2D.c:1319://   MPI_Allreduce(&dt, &(mesh->dt), 1, MPI_DFLOAT, MPI_MIN, MPI_COMM_WORLD);
boltzmannSetup2D.c:1322://   mesh->NtimeSteps = mesh->finalTime/mesh->dt;
boltzmannSetup2D.c:1323://   mesh->dt = mesh->finalTime/mesh->NtimeSteps;
boltzmannSetup2D.c:1326://   mesh->errorStep = 10000;
boltzmannSetup2D.c:1328://   printf("Nsteps = %d with dt = %.8e\n", mesh->NtimeSteps, mesh->dt);
boltzmannSetup2D.c:1355://     mesh->o_pmlqx =    
boltzmannSetup2D.c:1356://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1357://     mesh->o_rhspmlqx =
boltzmannSetup2D.c:1358://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1359://     mesh->o_respmlqx =
boltzmannSetup2D.c:1360://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1362://     mesh->o_pmlqy =    
boltzmannSetup2D.c:1363://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqy);
boltzmannSetup2D.c:1364://     mesh->o_rhspmlqy =
boltzmannSetup2D.c:1365://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqy);
boltzmannSetup2D.c:1366://     mesh->o_respmlqy =
boltzmannSetup2D.c:1367://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqy);
boltzmannSetup2D.c:1372://     mesh->o_qold =
boltzmannSetup2D.c:1373://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->q);
boltzmannSetup2D.c:1375://     mesh->o_rhsq =
boltzmannSetup2D.c:1376://         mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);    
boltzmannSetup2D.c:1377://     mesh->o_rhsq2 =
boltzmannSetup2D.c:1378://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannSetup2D.c:1379://     mesh->o_rhsq3 =
boltzmannSetup2D.c:1380://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannSetup2D.c:1385://     mesh->o_pmlqx =    
boltzmannSetup2D.c:1386://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1388://     mesh->o_pmlqxold =    
boltzmannSetup2D.c:1389://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1391://     mesh->o_rhspmlqx =
boltzmannSetup2D.c:1392://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1394://     mesh->o_rhspmlqx2 =
boltzmannSetup2D.c:1395://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1397://     mesh->o_rhspmlqx3 =
boltzmannSetup2D.c:1398://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1402://     mesh->o_pmlqy =    
boltzmannSetup2D.c:1403://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1405://     mesh->o_pmlqyold =    
boltzmannSetup2D.c:1406://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1408://     mesh->o_rhspmlqy =
boltzmannSetup2D.c:1409://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1411://     mesh->o_rhspmlqy2 =
boltzmannSetup2D.c:1412://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1414://     mesh->o_rhspmlqy3 =
boltzmannSetup2D.c:1415://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1421://   mesh->sarka[i][j] = 0.0;
boltzmannSetup2D.c:1422://   //mesh->sarkpmla[i][j] = 0.0 ; 
boltzmannSetup2D.c:1424://       mesh->sarkb[i] = 0.0;
boltzmannSetup2D.c:1425://       mesh->sarke[i] = 0.0;
boltzmannSetup2D.c:1426://       // mesh->sarkpmlb[i] = 0.0;
boltzmannSetup2D.c:1427://       // mesh->sarkpmle[i] = 0.0;     
boltzmannSetup2D.c:1430://     dfloat coef = -mesh->tauInv;
boltzmannSetup2D.c:1431://     dfloat  h   = mesh->dt; 
boltzmannSetup2D.c:1450://     mesh->rk3a[0][0] = 0.;  mesh->rk3a[1][0] = a21;  mesh->rk3a[2][0] = a31;   mesh->rk3a[2][1] = a32; 
boltzmannSetup2D.c:1451://     mesh->rk3b[0] = b1;     mesh->rk3b[1] = b2;      mesh->rk3b[2] = b3; 
boltzmannSetup2D.c:1452://     mesh->rk3c[0] = c1;     mesh->rk3c[1] = c2;      mesh->rk3c[2] = c3; 
boltzmannSetup2D.c:1461://       mesh->sarka[1][0] = -(a21*exp(c2*coef*h)*(exp(-c2*coef*h) - 1.))/(c2*coef*h); // a21
boltzmannSetup2D.c:1462://       mesh->sarka[2][0] = -(a31*exp(c3*coef*h)*(exp(-c3*coef*h) - 1.))/(c3*coef*h); // a31
boltzmannSetup2D.c:1463://       mesh->sarka[2][1] = -(a32*exp(c3*coef*h)*(exp(-c3*coef*h) - 1.))/(c3*coef*h); // a32 
boltzmannSetup2D.c:1466://       mesh->sarkb[0] =   (exp(coef*h)*((exp(-coef*h)*(c2 + c3 - c2*c3 + c2*c3*exp(coef*h) - 1.))
boltzmannSetup2D.c:1469://       mesh->sarkb[1] =  -(exp(coef*h)*((exp(-coef*h)*(c1 + c3 - c1*c3 + c1*c3*exp(coef*h) - 1.))
boltzmannSetup2D.c:1472://       mesh->sarkb[2] =   (exp(coef*h)*((exp(-coef*h)*(c1 + c2 - c1*c2 + c1*c2*exp(coef*h) - 1.))/(coef*(c1 - c3)*(c2 - c3)) + (exp(-coef*h)*(2.*exp(coef*h) - 2.) - coef*h*exp(-coef*h)*(c1*exp(coef*h) - c2 - c1 + c2*exp(coef*h) + 2.))
boltzmannSetup2D.c:1475://       mesh->sarke[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:1476://       mesh->sarke[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:1477://       mesh->sarke[2] = exp(coef*h*1.0);
boltzmannSetup2D.c:1481://       mesh->sarka[1][0] = (exp(coef*h/2.) - 1.)/(coef*h); // a21
boltzmannSetup2D.c:1482://       mesh->sarka[2][0] = -1.0*(exp(coef*h)-1.0)/(coef*h); // a31
boltzmannSetup2D.c:1483://       mesh->sarka[2][1] =  2.0*(exp(coef*h)-1.0)/(coef*h);// a32 
boltzmannSetup2D.c:1486://       mesh->sarkb[0] =   (-4. -coef*h + exp(coef*h)*(4.-3.*coef*h+pow(h*coef,2.)))/ (pow(coef*h,3)) ;
boltzmannSetup2D.c:1487://       mesh->sarkb[1] =  4.*(2. + coef*h + exp(coef*h)*(-2. + coef*h)) / (pow(coef*h,3)) ;
boltzmannSetup2D.c:1488://       mesh->sarkb[2] =   (-4. -3.*coef*h - pow(coef*h,2)+ exp(coef*h)*(4. - coef*h))/ (pow(coef*h,3)) ;
boltzmannSetup2D.c:1491://       mesh->sarke[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:1492://       mesh->sarke[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:1493://       mesh->sarke[2] = exp(coef*h*1.0);
boltzmannSetup2D.c:1505://       mesh->sarka[1][0] = (a21*c2*(pow(c2,4)*pow(coef,4)*pow(h,4) + 5.*pow(c2,3)*pow(coef,3)*pow(h,3) 
boltzmannSetup2D.c:1507://       mesh->sarka[2][0] = (a31*c3*(pow(c3,4)*pow(coef,4)*pow(h,4) + 5.*pow(c3,3)*pow(coef,3)*pow(h,3) 
boltzmannSetup2D.c:1509://       mesh->sarka[2][1] = (a32*c3*(pow(c3,4)*pow(coef,4)*pow(h,4) + 5.*pow(c3,3)*pow(coef,3)*pow(h,3) 
boltzmannSetup2D.c:1513://       mesh->sarkb[0] =   -(2520.*c2 + 2520.*c3 - 5040.*c2*c3 - 420.*coef*h - 84.*pow(coef,2)*pow(h,2) - 14.*pow(coef,3)*pow(h,3) 
boltzmannSetup2D.c:1518://       mesh->sarkb[1] =  (2520.*c1 + 2520.*c3 - 5040.*c1*c3 - 420.*coef*h - 84.*pow(coef,2)*pow(h,2) - 14.*pow(coef,3)*pow(h,3) - 2*pow(coef,4)*pow(h,4) 
boltzmannSetup2D.c:1523://       mesh->sarkb[2] =   -(2520.*c1 + 2520.*c2 - 5040.*c1*c2 - 420.*coef*h - 84.*pow(coef,2)*pow(h,2) - 14.*pow(coef,3)*pow(h,3) - 2.*pow(coef,4)*pow(h,4) 
boltzmannSetup2D.c:1528://       mesh->sarke[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:1529://       mesh->sarke[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:1530://       mesh->sarke[2] = exp(coef*h*1.0);           
boltzmannSetup2D.c:1534://       mesh->sarka[1][0] = (pow(coef,4)*pow(h,4))/3840. + (pow(coef,3)*pow(h,3))/384. + (pow(coef,2)*pow(h,2))/48. + (coef*h)/8 + 1./2.;
boltzmannSetup2D.c:1535://       mesh->sarka[2][0] =  -1.0 *  ((pow(coef,4)*pow(h,4))/120. + (pow(coef,3)*pow(h,3))/24. + (pow(coef,2)*pow(h,2))/6. + (coef*h)/2. + 1.);
boltzmannSetup2D.c:1536://       mesh->sarka[2][1] =  2.0*((pow(coef,4)*pow(h,4))/120. + (pow(coef,3)*pow(h,3))/24. + (pow(coef,2)*pow(h,2))/6. + (coef*h)/2. + 1.);
boltzmannSetup2D.c:1538://       mesh->sarkb[0] =  (5.*pow(coef,4)*pow(h,4))/1008. + (pow(coef,3)*pow(h,3))/45. + (3.*pow(coef,2)*pow(h,2))/40. + (coef*h)/6. + 1./6. ; 
boltzmannSetup2D.c:1539://       mesh->sarkb[1] =  (pow(coef,4)*pow(h,4))/252. + (pow(coef,3)*pow(h,3))/45. + (pow(coef,2)*pow(h,2))/10. + (coef*h)/3. + 2./3. ;
boltzmannSetup2D.c:1540://       mesh->sarkb[2] =  1./6. - (pow(coef,3)*pow(h,3))/360. - (pow(coef,4)*pow(h,4))/1680. - (pow(coef,2)*pow(h,2))/120. ;
boltzmannSetup2D.c:1543://       mesh->sarke[0] = exp(coef*h*c2); 
boltzmannSetup2D.c:1544://       mesh->sarke[1] = exp(coef*h*c3); 
boltzmannSetup2D.c:1545://       mesh->sarke[2] = exp(coef*h*1.0);
boltzmannSetup2D.c:1556://     mesh->o_rhsq2 =
boltzmannSetup2D.c:1557://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannSetup2D.c:1558://     mesh->o_rhsq3 =
boltzmannSetup2D.c:1559://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhsq);
boltzmannSetup2D.c:1561://     mesh->o_pmlqx =    
boltzmannSetup2D.c:1562://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1563://     mesh->o_rhspmlqx =
boltzmannSetup2D.c:1564://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1565://     mesh->o_rhspmlqx2 =
boltzmannSetup2D.c:1566://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1567://     mesh->o_rhspmlqx3 =
boltzmannSetup2D.c:1568://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);  
boltzmannSetup2D.c:1570://     mesh->o_pmlqy =    
boltzmannSetup2D.c:1571://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqy);
boltzmannSetup2D.c:1572://     mesh->o_rhspmlqy =
boltzmannSetup2D.c:1573://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqy);
boltzmannSetup2D.c:1574://     mesh->o_rhspmlqy2 =
boltzmannSetup2D.c:1575://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqy);
boltzmannSetup2D.c:1576://     mesh->o_rhspmlqy3 =
boltzmannSetup2D.c:1577://       mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqy);  
boltzmannSetup2D.c:1581://     mesh->mrab[0] = 23.*dt/12. ;
boltzmannSetup2D.c:1582://     mesh->mrab[1] = -4.*dt/3. ;
boltzmannSetup2D.c:1583://     mesh->mrab[2] =  5.*dt/12. ;
boltzmannSetup2D.c:1586://     dfloat cc = -mesh->tauInv;
boltzmannSetup2D.c:1587://     dfloat h  = mesh->dt; 
boltzmannSetup2D.c:1590://       mesh->saab[0] = (exp(cc*h) - (5.*cc*h)/2. - 3.*pow(cc,2)*pow(h,2 )+ pow(cc,2)*pow(h,2)*exp(cc*h) + (3.*cc*h*exp(cc*h))/2. - 1.)/(pow(cc,3)*pow(h,2));
boltzmannSetup2D.c:1591://       mesh->saab[1] = (4.*cc*h - 2.*exp(cc*h) + 3.*pow(cc,2)*pow(h,2 )- 2.*cc*h*exp(cc*h) + 2.)/(pow(cc,3)*pow(h,2));
boltzmannSetup2D.c:1592://       mesh->saab[2] = -((3.*cc*h)/2. - exp(cc*h) + pow(cc,2)*pow(h,2 )- (cc*h*exp(cc*h))/2. + 1.)/(pow(cc,3)*pow(h,2));
boltzmannSetup2D.c:1593://       mesh->saabexp = exp(cc*h);
boltzmannSetup2D.c:1597://       mesh->saab[0] = (pow(cc,3)*pow(h,4))/18. + (19.*pow(cc,2)*pow(h,3))/80. + (19.*cc*pow(h,2))/24. + (23.*h)/12.;
boltzmannSetup2D.c:1598://       mesh->saab[1] = -(4.*h)/3. - (5.*cc*pow(h,2))/12. - (pow(cc,2)*pow(h,3))/10. - (7.*pow(cc,3)*pow(h,4))/360.;
boltzmannSetup2D.c:1599://       mesh->saab[2] = (pow(cc,3)*pow(h,4))/180. + (7.*pow(cc,2)*pow(h,3))/240. + (cc*pow(h,2))/8. + (5.*h)/12.;
boltzmannSetup2D.c:1600://       mesh->saabexp = exp(cc*h);
boltzmannSetup2D.c:1606://     mesh->o_qY =    
boltzmannSetup2D.c:1607://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqy);
boltzmannSetup2D.c:1609://     mesh->o_qZ =    
boltzmannSetup2D.c:1610://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqy);
boltzmannSetup2D.c:1612://     mesh->o_qS =
boltzmannSetup2D.c:1613://       mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1618://       mesh->o_pmlqx =    
boltzmannSetup2D.c:1619://   mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqx);
boltzmannSetup2D.c:1620://       mesh->o_qSx =
boltzmannSetup2D.c:1621://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1622://       mesh->o_qYx =
boltzmannSetup2D.c:1623://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1624://       mesh->o_qZx =
boltzmannSetup2D.c:1625://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqx);
boltzmannSetup2D.c:1627://       mesh->o_pmlqy =    
boltzmannSetup2D.c:1628://   mesh->device.malloc(mesh->Np*(mesh->totalHaloPairs+mesh->Nelements)*mesh->Nfields*sizeof(dfloat), mesh->pmlqy);
boltzmannSetup2D.c:1629://       mesh->o_qSy =
boltzmannSetup2D.c:1630://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqx);
boltzmannSetup2D.c:1631://       mesh->o_qYy =
boltzmannSetup2D.c:1632://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->rhspmlqy);
boltzmannSetup2D.c:1633://       mesh->o_qZy =
boltzmannSetup2D.c:1634://   mesh->device.malloc(mesh->Np*mesh->Nelements*mesh->Nfields*sizeof(dfloat), mesh->respmlqy);
boltzmannSetup2D.c:1642://   mesh->o_sigmax =
boltzmannSetup2D.c:1643://     mesh->device.malloc(mesh->Nelements*mesh->Np*sizeof(dfloat), mesh->sigmax);
boltzmannSetup2D.c:1645://   mesh->o_sigmay =
boltzmannSetup2D.c:1646://     mesh->device.malloc(mesh->Nelements*mesh->Np*sizeof(dfloat), mesh->sigmay);
boltzmannSetup2D.c:1648://   mesh->nonPmlNelements = nonPmlNelements;
boltzmannSetup2D.c:1649://   mesh->pmlNelements    = pmlNelements;
boltzmannSetup2D.c:1651://   if(mesh->nonPmlNelements)
boltzmannSetup2D.c:1652://     mesh->o_nonPmlElementIds = 
boltzmannSetup2D.c:1653://       mesh->device.malloc(nonPmlNelements*sizeof(iint), nonPmlElementIds);
boltzmannSetup2D.c:1655://   if(mesh->pmlNelements)
boltzmannSetup2D.c:1656://     mesh->o_pmlElementIds = 
boltzmannSetup2D.c:1657://       mesh->device.malloc(pmlNelements*sizeof(iint), pmlElementIds);
boltzmannSetup2D.c:1661://   kernelInfo.addDefine("p_maxNodesVolume", mymax(mesh->cubNp,mesh->Np));
boltzmannSetup2D.c:1663://   int maxNodes = mymax(mesh->Np, (mesh->Nfp*mesh->Nfaces));
boltzmannSetup2D.c:1664://   int maxCubNodes = mymax(maxNodes,mesh->cubNp);
boltzmannSetup2D.c:1671://   int NblockV = 128/mesh->Np; // works for CUDA
boltzmannSetup2D.c:1677://    int NblockCub = 512/mesh->cubNp; // works for CUDA
boltzmannSetup2D.c:1680://   printf("Np: %d \t Ncub: %d \n", mesh->Np, mesh->cubNp);
boltzmannSetup2D.c:1686://   kernelInfo.addDefine("p_sqrtRT", mesh->sqrtRT);
boltzmannSetup2D.c:1691://   kernelInfo.addDefine("p_tauInv", mesh->tauInv);
boltzmannSetup2D.c:1710://       mesh->volumeKernel =
boltzmannSetup2D.c:1711://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1716://        mesh->relaxationKernel =
boltzmannSetup2D.c:1717://        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:1721://       mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1722://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1727://       mesh->pmlRelaxationKernel =
boltzmannSetup2D.c:1728://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:1735://       mesh->volumeKernel =
boltzmannSetup2D.c:1736://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1741://       mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1742://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1749://     mesh->surfaceKernel =
boltzmannSetup2D.c:1750://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1755://     mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1756://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1762://     mesh->updateKernel =
boltzmannSetup2D.c:1763://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1769://     mesh->pmlUpdateKernel =
boltzmannSetup2D.c:1770://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1776://     mesh->haloExtractKernel =
boltzmannSetup2D.c:1777://     mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannSetup2D.c:1786://       mesh->volumeKernel =
boltzmannSetup2D.c:1787://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1792://       mesh->relaxationKernel =
boltzmannSetup2D.c:1793://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:1798://         mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1799://         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1804://         mesh->pmlRelaxationKernel =
boltzmannSetup2D.c:1805://         mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:1811://     mesh->volumeKernel =
boltzmannSetup2D.c:1812://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1817://       mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1818://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1824://   mesh->surfaceKernel =
boltzmannSetup2D.c:1825://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1830://       mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1831://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1837://   mesh->updateKernel =
boltzmannSetup2D.c:1838://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1844://   mesh->updateStageKernel =
boltzmannSetup2D.c:1845://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1851://   mesh->pmlUpdateKernel =
boltzmannSetup2D.c:1852://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1857://   mesh->pmlUpdateStageKernel =
boltzmannSetup2D.c:1858://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1862://   mesh->haloExtractKernel =
boltzmannSetup2D.c:1863://     mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannSetup2D.c:1873://     mesh->residualUpdateKernel =
boltzmannSetup2D.c:1874://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1879://     mesh->implicitUpdateKernel =
boltzmannSetup2D.c:1880://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1885://    mesh->pmlResidualUpdateKernel =
boltzmannSetup2D.c:1886://      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1891://    mesh->pmlImplicitUpdateKernel =
boltzmannSetup2D.c:1892://      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1900://        mesh->implicitSolveKernel = 
boltzmannSetup2D.c:1901://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1906://       mesh->pmlImplicitSolveKernel = 
boltzmannSetup2D.c:1907://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1914://       mesh->implicitSolveKernel = 
boltzmannSetup2D.c:1915://       mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1920://      mesh->pmlImplicitSolveKernel = 
boltzmannSetup2D.c:1921://      mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannLSIMEXImplicitSolve2D.okl",
boltzmannSetup2D.c:1928://     mesh->volumeKernel =
boltzmannSetup2D.c:1929://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1935://     mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1936://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1941://     mesh->surfaceKernel =
boltzmannSetup2D.c:1942://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1947://     mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:1948://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:1953://     mesh->updateKernel =
boltzmannSetup2D.c:1954://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1959://        mesh->pmlUpdateKernel =
boltzmannSetup2D.c:1960://        mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:1964://     mesh->haloExtractKernel =
boltzmannSetup2D.c:1965://     mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannSetup2D.c:1976://     mesh->volumeKernel =
boltzmannSetup2D.c:1977://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1982://     mesh->relaxationKernel =
boltzmannSetup2D.c:1983://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:1988://     mesh->pmlVolumeKernel =
boltzmannSetup2D.c:1989://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:1994://     mesh->pmlRelaxationKernel =
boltzmannSetup2D.c:1995://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannRelaxation2D.okl",
boltzmannSetup2D.c:2002://     mesh->volumeKernel =
boltzmannSetup2D.c:2003://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:2008://     mesh->pmlVolumeKernel =
boltzmannSetup2D.c:2009://     mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannVolume2D.okl",
boltzmannSetup2D.c:2015://   mesh->surfaceKernel =
boltzmannSetup2D.c:2016://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:2021://   mesh->pmlSurfaceKernel =
boltzmannSetup2D.c:2022://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannSurface2D.okl",
boltzmannSetup2D.c:2028://   mesh->updateKernel =
boltzmannSetup2D.c:2029://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:2036://   mesh->pmlUpdateKernel =
boltzmannSetup2D.c:2037://   mesh->device.buildKernelFromSource(DHOLMES "/okl/boltzmannUpdate2D.okl",
boltzmannSetup2D.c:2041://   mesh->haloExtractKernel =
boltzmannSetup2D.c:2042://   mesh->device.buildKernelFromSource(DHOLMES "/okl/meshHaloExtract2D.okl",
boltzmannComputeVorticity2D.c:6:  dfloat *u = (dfloat*) calloc(mesh->Np, sizeof(dfloat));
boltzmannComputeVorticity2D.c:7:  dfloat *v = (dfloat*) calloc(mesh->Np, sizeof(dfloat));
boltzmannComputeVorticity2D.c:8:  for(iint e=0;e<mesh->Nelements;++e){
boltzmannComputeVorticity2D.c:10:    for(iint n=0;n<mesh->Np;++n){
boltzmannComputeVorticity2D.c:11:      iint base = mesh->Nfields*(n + e*mesh->Np);
boltzmannComputeVorticity2D.c:12:      dfloat rho = mesh->q[base];
boltzmannComputeVorticity2D.c:13:      u[n] = mesh->q[1 + base]*mesh->sqrtRT/rho;
boltzmannComputeVorticity2D.c:14:      v[n] = mesh->q[2 + base]*mesh->sqrtRT/rho;
boltzmannComputeVorticity2D.c:16:    for(iint n=0;n<mesh->Np;++n){
boltzmannComputeVorticity2D.c:18:      for(iint m=0;m<mesh->Np;++m){
boltzmannComputeVorticity2D.c:19:	dudr += mesh->Dr[n*mesh->Np+m]*u[m];
boltzmannComputeVorticity2D.c:20:	duds += mesh->Ds[n*mesh->Np+m]*u[m];
boltzmannComputeVorticity2D.c:21:	dvdr += mesh->Dr[n*mesh->Np+m]*v[m];
boltzmannComputeVorticity2D.c:22:	dvds += mesh->Ds[n*mesh->Np+m]*v[m];
boltzmannComputeVorticity2D.c:25:	mesh->vgeo[mesh->Nvgeo*e+RYID]*dudr +
boltzmannComputeVorticity2D.c:26:	mesh->vgeo[mesh->Nvgeo*e+SYID]*duds;
boltzmannComputeVorticity2D.c:28:	mesh->vgeo[mesh->Nvgeo*e+RXID]*dvdr +
boltzmannComputeVorticity2D.c:29:	mesh->vgeo[mesh->Nvgeo*e+SXID]*dvds;
boltzmannComputeVorticity2D.c:30:      q[outfld + Nfields*(n+e*mesh->Np)] = dudy-dvdx;
boltzmannLSERKStep2D.c:8:   mesh->shiftIndex = 0; 	
boltzmannLSERKStep2D.c:11:  for(iint rk=0;rk<mesh->Nrk;++rk){
boltzmannLSERKStep2D.c:14:    dfloat t = mesh->startTime + tstep*mesh->dt + mesh->dt*mesh->rkc[rk];
boltzmannLSERKStep2D.c:16:   if(mesh->totalHaloPairs>0){
boltzmannLSERKStep2D.c:19:      mesh->device.setStream(dataStream);
boltzmannLSERKStep2D.c:22:    iint Nentries = mesh->Np*mesh->Nfields;
boltzmannLSERKStep2D.c:23:    mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannLSERKStep2D.c:25:                            mesh->o_haloElementList,
boltzmannLSERKStep2D.c:26:                            mesh->o_q,
boltzmannLSERKStep2D.c:27:                            mesh->o_haloBuffer);
boltzmannLSERKStep2D.c:30:    mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannLSERKStep2D.c:33:      mesh->device.setStream(defaultStream);
boltzmannLSERKStep2D.c:45:    mesh->device.finish();
boltzmannLSERKStep2D.c:49:    if(mesh->pmlNelements){	
boltzmannLSERKStep2D.c:50:    	mesh->device.finish();
boltzmannLSERKStep2D.c:53:    mesh->pmlVolumeKernel(mesh->pmlNelements,
boltzmannLSERKStep2D.c:54:                          mesh->o_pmlElementIds,
boltzmannLSERKStep2D.c:55:                          mesh->o_pmlIds,
boltzmannLSERKStep2D.c:58:                          mesh->Nrhs,
boltzmannLSERKStep2D.c:59:                          mesh->shiftIndex,
boltzmannLSERKStep2D.c:60:                          mesh->o_vgeo,
boltzmannLSERKStep2D.c:61:                          mesh->o_pmlSigmaX,
boltzmannLSERKStep2D.c:62:                          mesh->o_pmlSigmaY,
boltzmannLSERKStep2D.c:63:                          mesh->o_DrT,
boltzmannLSERKStep2D.c:64:                          mesh->o_DsT,
boltzmannLSERKStep2D.c:65:                          mesh->o_q,
boltzmannLSERKStep2D.c:66:                          mesh->o_pmlqx,
boltzmannLSERKStep2D.c:67:                          mesh->o_pmlqy,
boltzmannLSERKStep2D.c:68:                          mesh->o_rhsq,
boltzmannLSERKStep2D.c:69:                          mesh->o_pmlrhsqx,
boltzmannLSERKStep2D.c:70:                          mesh->o_pmlrhsqy);
boltzmannLSERKStep2D.c:72:       mesh->device.finish();
boltzmannLSERKStep2D.c:78:    if(mesh->nonPmlNelements){
boltzmannLSERKStep2D.c:80:      mesh->device.finish();
boltzmannLSERKStep2D.c:83:       mesh->volumeKernel(mesh->nonPmlNelements,
boltzmannLSERKStep2D.c:84:                      mesh->o_nonPmlElementIds,
boltzmannLSERKStep2D.c:87:                      mesh->Nrhs,
boltzmannLSERKStep2D.c:88:                      mesh->shiftIndex,
boltzmannLSERKStep2D.c:89:                      mesh->o_vgeo,
boltzmannLSERKStep2D.c:90:                      mesh->o_DrT,
boltzmannLSERKStep2D.c:91:                      mesh->o_DsT,
boltzmannLSERKStep2D.c:92:                      mesh->o_q,
boltzmannLSERKStep2D.c:93:                      mesh->o_rhsq);
boltzmannLSERKStep2D.c:95:      mesh->device.finish();
boltzmannLSERKStep2D.c:101:    mesh->device.finish();
boltzmannLSERKStep2D.c:110:    mesh->device.finish();
boltzmannLSERKStep2D.c:113:		if(mesh->pmlNelements){
boltzmannLSERKStep2D.c:114:			mesh->device.finish();
boltzmannLSERKStep2D.c:117:		  mesh->pmlRelaxationKernel(mesh->pmlNelements,
boltzmannLSERKStep2D.c:118:                                mesh->o_pmlElementIds,
boltzmannLSERKStep2D.c:119:                                mesh->o_pmlIds,
boltzmannLSERKStep2D.c:120:                                mesh->Nrhs,
boltzmannLSERKStep2D.c:121:                                mesh->shiftIndex,
boltzmannLSERKStep2D.c:122:                                mesh->o_cubInterpT,
boltzmannLSERKStep2D.c:123:                                mesh->o_cubProjectT,
boltzmannLSERKStep2D.c:124:                                mesh->o_q,
boltzmannLSERKStep2D.c:125:                                mesh->o_rhsq);
boltzmannLSERKStep2D.c:127:		   mesh->device.finish();
boltzmannLSERKStep2D.c:132:		if(mesh->nonPmlNelements){
boltzmannLSERKStep2D.c:133:		  mesh->device.finish();
boltzmannLSERKStep2D.c:136:		  mesh->relaxationKernel(mesh->nonPmlNelements,
boltzmannLSERKStep2D.c:137:                            mesh->o_nonPmlElementIds,
boltzmannLSERKStep2D.c:138:                            mesh->Nrhs,
boltzmannLSERKStep2D.c:139:                            mesh->shiftIndex,
boltzmannLSERKStep2D.c:140:                            mesh->o_cubInterpT,
boltzmannLSERKStep2D.c:141:                            mesh->o_cubProjectT,
boltzmannLSERKStep2D.c:142:                            mesh->o_q,
boltzmannLSERKStep2D.c:143:                            mesh->o_rhsq);  
boltzmannLSERKStep2D.c:145:	      mesh->device.finish();
boltzmannLSERKStep2D.c:149:    mesh->device.finish();
boltzmannLSERKStep2D.c:156:  if(mesh->totalHaloPairs>0){
boltzmannLSERKStep2D.c:158:      mesh->device.setStream(dataStream);
boltzmannLSERKStep2D.c:162:    mesh->device.finish();
boltzmannLSERKStep2D.c:166:                          mesh->Nfields*mesh->Np*sizeof(dfloat),
boltzmannLSERKStep2D.c:175:    size_t offset = mesh->Np*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannLSERKStep2D.c:176:    mesh->o_q.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannLSERKStep2D.c:177:    mesh->device.finish();        
boltzmannLSERKStep2D.c:180:      mesh->device.setStream(defaultStream);
boltzmannLSERKStep2D.c:187:    mesh->device.finish();
boltzmannLSERKStep2D.c:190:     if(mesh->pmlNelements){
boltzmannLSERKStep2D.c:192:      mesh->device.finish();
boltzmannLSERKStep2D.c:195:     mesh->pmlSurfaceKernel(mesh->pmlNelements,
boltzmannLSERKStep2D.c:196:                          mesh->o_pmlElementIds,
boltzmannLSERKStep2D.c:197:                          mesh->o_pmlIds,
boltzmannLSERKStep2D.c:200:                          mesh->Nrhs,
boltzmannLSERKStep2D.c:201:                          mesh->shiftIndex,
boltzmannLSERKStep2D.c:202:                          mesh->o_sgeo,
boltzmannLSERKStep2D.c:203:                          mesh->o_LIFTT,
boltzmannLSERKStep2D.c:204:                          mesh->o_vmapM,
boltzmannLSERKStep2D.c:205:                          mesh->o_vmapP,
boltzmannLSERKStep2D.c:206:                          mesh->o_EToB,
boltzmannLSERKStep2D.c:207:                          mesh->o_x,
boltzmannLSERKStep2D.c:208:                          mesh->o_y,
boltzmannLSERKStep2D.c:209:                          mesh->o_q,
boltzmannLSERKStep2D.c:210:                          mesh->o_rhsq,
boltzmannLSERKStep2D.c:211:                          mesh->o_pmlrhsqx,
boltzmannLSERKStep2D.c:212:                          mesh->o_pmlrhsqy);
boltzmannLSERKStep2D.c:214:    mesh->device.finish();
boltzmannLSERKStep2D.c:218:    if(mesh->nonPmlNelements){
boltzmannLSERKStep2D.c:219:    	  mesh->device.finish();
boltzmannLSERKStep2D.c:222:       mesh->surfaceKernel(mesh->nonPmlNelements,
boltzmannLSERKStep2D.c:223:                        mesh->o_nonPmlElementIds,
boltzmannLSERKStep2D.c:226:                        mesh->Nrhs,
boltzmannLSERKStep2D.c:227:                        mesh->shiftIndex,
boltzmannLSERKStep2D.c:228:                        mesh->o_sgeo,
boltzmannLSERKStep2D.c:229:                        mesh->o_LIFTT,
boltzmannLSERKStep2D.c:230:                        mesh->o_vmapM,
boltzmannLSERKStep2D.c:231:                        mesh->o_vmapP,
boltzmannLSERKStep2D.c:232:                        mesh->o_EToB,
boltzmannLSERKStep2D.c:233:                        mesh->o_x,
boltzmannLSERKStep2D.c:234:                        mesh->o_y,
boltzmannLSERKStep2D.c:235:                        mesh->o_q,
boltzmannLSERKStep2D.c:236:                        mesh->o_rhsq);
boltzmannLSERKStep2D.c:238:       mesh->device.finish();
boltzmannLSERKStep2D.c:242:    mesh->device.finish();
boltzmannLSERKStep2D.c:246:    dfloat tupdate = tstep*mesh->dt + mesh->dt*mesh->rkc[rk+1];
boltzmannLSERKStep2D.c:253:    mesh->device.finish();
boltzmannLSERKStep2D.c:256:    //printf("running with %d pml Nelements\n",mesh->pmlNelements);    
boltzmannLSERKStep2D.c:257:    if (mesh->pmlNelements){   
boltzmannLSERKStep2D.c:258:      mesh->device.finish();
boltzmannLSERKStep2D.c:261:      mesh->pmlUpdateKernel(mesh->pmlNelements,
boltzmannLSERKStep2D.c:262:			    mesh->o_pmlElementIds,
boltzmannLSERKStep2D.c:263:			    mesh->o_pmlIds,
boltzmannLSERKStep2D.c:264:			    mesh->dt,
boltzmannLSERKStep2D.c:265:			    mesh->rka[rk],
boltzmannLSERKStep2D.c:266:			    mesh->rkb[rk],
boltzmannLSERKStep2D.c:268:			    mesh->o_rhsq,
boltzmannLSERKStep2D.c:269:			    mesh->o_pmlrhsqx,
boltzmannLSERKStep2D.c:270:			    mesh->o_pmlrhsqy,
boltzmannLSERKStep2D.c:271:			    mesh->o_resq,
boltzmannLSERKStep2D.c:272:			    mesh->o_pmlresqx,
boltzmannLSERKStep2D.c:273:			    mesh->o_pmlresqy,
boltzmannLSERKStep2D.c:274:			    mesh->o_pmlqx,
boltzmannLSERKStep2D.c:275:			    mesh->o_pmlqy,
boltzmannLSERKStep2D.c:276:			    mesh->o_q);
boltzmannLSERKStep2D.c:277:       mesh->device.finish();
boltzmannLSERKStep2D.c:281:    if(mesh->nonPmlNelements){
boltzmannLSERKStep2D.c:282:    	 mesh->device.finish();
boltzmannLSERKStep2D.c:284:      mesh->updateKernel(mesh->nonPmlNelements,
boltzmannLSERKStep2D.c:285:			 mesh->o_nonPmlElementIds,
boltzmannLSERKStep2D.c:286:			 mesh->dt,
boltzmannLSERKStep2D.c:287:			 mesh->rka[rk],
boltzmannLSERKStep2D.c:288:			 mesh->rkb[rk],
boltzmannLSERKStep2D.c:289:			 mesh->o_rhsq,
boltzmannLSERKStep2D.c:290:			 mesh->o_resq,
boltzmannLSERKStep2D.c:291:			 mesh->o_q);
boltzmannLSERKStep2D.c:292:       mesh->device.finish();
boltzmannLSERKStep2D.c:296:    mesh->device.finish();
boltzmannPmlSetup2D.c:10:  mesh->pmlNelements=0;
boltzmannPmlSetup2D.c:13:    for (iint m=0;m<mesh->Nelements;m++) {
boltzmannPmlSetup2D.c:14:      iint e = mesh->nonPmlElementIds[m];
boltzmannPmlSetup2D.c:15:      int type = mesh->elementInfo[e];
boltzmannPmlSetup2D.c:17:        mesh->pmlNelements++;
boltzmannPmlSetup2D.c:22:printf("Number of pmlElements: %d \n", mesh->pmlNelements);
boltzmannPmlSetup2D.c:25:  if (mesh->pmlNelements) {
boltzmannPmlSetup2D.c:28:    iint *pmlIds = (iint *) calloc(mesh->Nelements,sizeof(iint));
boltzmannPmlSetup2D.c:31:    for (iint e=0;e<mesh->Nelements;e++) {
boltzmannPmlSetup2D.c:32:      int type = mesh->elementInfo[e];
boltzmannPmlSetup2D.c:39:      mesh->pmlElementIds = (iint *) calloc(mesh->pmlNelements,sizeof(iint));
boltzmannPmlSetup2D.c:40:      mesh->pmlIds        = (iint *) calloc(mesh->pmlNelements,sizeof(iint));
boltzmannPmlSetup2D.c:45:      for (iint m=0;m<mesh->Nelements;m++){
boltzmannPmlSetup2D.c:46:        iint e = mesh->nonPmlElementIds[m];
boltzmannPmlSetup2D.c:47:        int type = mesh->elementInfo[e];
boltzmannPmlSetup2D.c:50:          mesh->pmlElementIds[pmlcnt] = e;
boltzmannPmlSetup2D.c:51:          mesh->pmlIds[pmlcnt] = pmlIds[e];
boltzmannPmlSetup2D.c:54:          mesh->nonPmlElementIds[nonpmlcnt] = e;
boltzmannPmlSetup2D.c:61:      mesh->nonPmlNelements -= mesh->pmlNelements;
boltzmannPmlSetup2D.c:62:      mesh->nonPmlElementIds = (iint*) realloc(mesh->nonPmlElementIds,mesh->nonPmlNelements*sizeof(iint));
boltzmannPmlSetup2D.c:68:    mesh->pmlSigmaX = (dfloat *) calloc(mesh->pmlNelements*mesh->Np,sizeof(dfloat));
boltzmannPmlSetup2D.c:69:    mesh->pmlSigmaY = (dfloat *) calloc(mesh->pmlNelements*mesh->Np,sizeof(dfloat));
boltzmannPmlSetup2D.c:76:    for (iint e=0;e<mesh->Nelements;e++) {
boltzmannPmlSetup2D.c:77:      for (int n=0;n<mesh->Nverts;n++) {
boltzmannPmlSetup2D.c:78:        dfloat x = mesh->EX[e*mesh->Nverts+n];
boltzmannPmlSetup2D.c:79:        dfloat y = mesh->EY[e*mesh->Nverts+n];
boltzmannPmlSetup2D.c:88:      int type = mesh->elementInfo[e];
boltzmannPmlSetup2D.c:91:      for (int n=0;n<mesh->Nverts;n++) {
boltzmannPmlSetup2D.c:92:        dfloat x = mesh->EX[e*mesh->Nverts+n];
boltzmannPmlSetup2D.c:93:        dfloat y = mesh->EY[e*mesh->Nverts+n];
boltzmannPmlSetup2D.c:113:    for (iint es=0;es<mesh->pmlNelements;es++){
boltzmannPmlSetup2D.c:114:        iint e     = mesh->pmlElementIds[es];
boltzmannPmlSetup2D.c:115:        iint pmlId = mesh->pmlIds[es];
boltzmannPmlSetup2D.c:116:        int type = mesh->elementInfo[e];
boltzmannPmlSetup2D.c:117:        iint id = e*mesh->Nverts;
boltzmannPmlSetup2D.c:119:        dfloat xe1 = mesh->EX[id+0]; /* x-coordinates of vertices */
boltzmannPmlSetup2D.c:120:        dfloat xe2 = mesh->EX[id+1];
boltzmannPmlSetup2D.c:121:        dfloat xe3 = mesh->EX[id+2];
boltzmannPmlSetup2D.c:123:        dfloat ye1 = mesh->EY[id+0]; /* y-coordinates of vertices */
boltzmannPmlSetup2D.c:124:        dfloat ye2 = mesh->EY[id+1];
boltzmannPmlSetup2D.c:125:        dfloat ye3 = mesh->EY[id+2];
boltzmannPmlSetup2D.c:127:        for(iint n=0;n<mesh->Np;++n){ /* for each node */
boltzmannPmlSetup2D.c:128:          dfloat x = mesh->x[n + e*mesh->Np];
boltzmannPmlSetup2D.c:129:          dfloat y = mesh->y[n + e*mesh->Np];
boltzmannPmlSetup2D.c:135:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmax,2)/xmaxScale;
boltzmannPmlSetup2D.c:137:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmin,2)/xminScale;
boltzmannPmlSetup2D.c:140:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymax,2)/ymaxScale;
boltzmannPmlSetup2D.c:142:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymin,2)/yminScale;
boltzmannPmlSetup2D.c:145:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmax,2)/xmaxScale;
boltzmannPmlSetup2D.c:147:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = xsigma*pow(x-xmin,2)/xminScale;
boltzmannPmlSetup2D.c:149:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymax,2)/ymaxScale;
boltzmannPmlSetup2D.c:151:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = ysigma*pow(y-ymin,2)/yminScale;
boltzmannPmlSetup2D.c:160:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannPmlSetup2D.c:162:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannPmlSetup2D.c:165:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannPmlSetup2D.c:167:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannPmlSetup2D.c:170:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannPmlSetup2D.c:172:              mesh->pmlSigmaX[mesh->Np*pmlId + n] = cxsigma;
boltzmannPmlSetup2D.c:174:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannPmlSetup2D.c:176:              mesh->pmlSigmaY[mesh->Np*pmlId + n] = cysigma;
boltzmannPmlSetup2D.c:179:         //printf("%.6f %.6f\n", mesh->pmlSigmaX[mesh->Np*pmlId + n],mesh->pmlSigmaY[mesh->Np*pmlId + n]);
boltzmannPmlSetup2D.c:186:    mesh->pmlNelements, mesh->Nelements-mesh->pmlNelements);
boltzmannPmlSetup2D.c:188:    mesh->pmlNfields = 6;
boltzmannPmlSetup2D.c:191:      mesh->pmlqx    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:192:      mesh->pmlrhsqx = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:194:      mesh->pmlqy    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:195:      mesh->pmlrhsqy = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:199:      mesh->o_pmlqx     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:200:      mesh->o_pmlrhsqx  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqx);
boltzmannPmlSetup2D.c:202:      mesh->o_pmlqy     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:203:      mesh->o_pmlrhsqy  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqy);
boltzmannPmlSetup2D.c:209:      mesh->pmlqx    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:210:      mesh->pmlrhsqx = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:211:      mesh->pmlresqx = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:213:      mesh->pmlqy    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:214:      mesh->pmlrhsqy = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:215:      mesh->pmlresqy = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:219:      mesh->o_pmlqx     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:220:      mesh->o_pmlrhsqx  = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqx);
boltzmannPmlSetup2D.c:221:      mesh->o_pmlresqx  = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlresqx);
boltzmannPmlSetup2D.c:223:      mesh->o_pmlqy     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:224:      mesh->o_pmlrhsqy  = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqy);
boltzmannPmlSetup2D.c:225:      mesh->o_pmlresqy  = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlresqy);
boltzmannPmlSetup2D.c:230:      mesh->pmlqx    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:231:      mesh->pmlrhsqx = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:233:      mesh->pmlqy    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:234:      mesh->pmlrhsqy = (dfloat*) calloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:238:      mesh->o_pmlqx     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:239:      mesh->o_qSx       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:240:      mesh->o_pmlrhsqx  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqx);
boltzmannPmlSetup2D.c:242:      mesh->o_pmlqy     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:243:      mesh->o_qSy       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:244:      mesh->o_pmlrhsqy  = mesh->device.malloc(mesh->Nrhs*mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlrhsqy);
boltzmannPmlSetup2D.c:249:      mesh->pmlqx    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:250:      mesh->pmlqy    = (dfloat*) calloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields, sizeof(dfloat));
boltzmannPmlSetup2D.c:252:      mesh->o_pmlqx     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);   
boltzmannPmlSetup2D.c:253:      mesh->o_qSx       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:254:      mesh->o_qYx       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:255:      mesh->o_qZx       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqx);
boltzmannPmlSetup2D.c:257:      mesh->o_pmlqy     = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:258:      mesh->o_qSy       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:259:      mesh->o_qYy       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:260:      mesh->o_qZy       = mesh->device.malloc(mesh->pmlNelements*mesh->Np*mesh->pmlNfields*sizeof(dfloat), mesh->pmlqy);
boltzmannPmlSetup2D.c:267:    mesh->o_pmlSigmaX = mesh->device.malloc(mesh->pmlNelements*mesh->Np*sizeof(dfloat),mesh->pmlSigmaX);
boltzmannPmlSetup2D.c:268:    mesh->o_pmlSigmaY = mesh->device.malloc(mesh->pmlNelements*mesh->Np*sizeof(dfloat),mesh->pmlSigmaY);
boltzmannPmlSetup2D.c:273:      if (mesh->pmlNelements) {
boltzmannPmlSetup2D.c:274:        mesh->o_pmlElementIds = mesh->device.malloc(mesh->pmlNelements*sizeof(iint), mesh->pmlElementIds);
boltzmannPmlSetup2D.c:275:        mesh->o_pmlIds        = mesh->device.malloc(mesh->pmlNelements*sizeof(iint), mesh->pmlIds);
meshBoltzmannSurface2D.c:30:  dfloat *fluxq1 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:31:  dfloat *fluxq2 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:32:  dfloat *fluxq3 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:33:  dfloat *fluxq4 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:34:  dfloat *fluxq5 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:35:  dfloat *fluxq6 = (dfloat*) calloc(mesh->Nfp*mesh->Nfaces,sizeof(dfloat));
meshBoltzmannSurface2D.c:38:  for(iint e=0;e<mesh->Nelements;++e){
meshBoltzmannSurface2D.c:40:    for(iint n=0;n<mesh->Nfp*mesh->Nfaces;++n){
meshBoltzmannSurface2D.c:42:      iint face = n/mesh->Nfp;
meshBoltzmannSurface2D.c:45:      iint sid = mesh->Nsgeo*(e*mesh->Nfaces+face);
meshBoltzmannSurface2D.c:46:      dfloat nx = mesh->sgeo[sid+0];
meshBoltzmannSurface2D.c:47:      dfloat ny = mesh->sgeo[sid+1];
meshBoltzmannSurface2D.c:48:      dfloat sJ = mesh->sgeo[sid+2];
meshBoltzmannSurface2D.c:49:      dfloat invJ = mesh->sgeo[sid+3];
meshBoltzmannSurface2D.c:52:      iint id  = e*mesh->Nfp*mesh->Nfaces + n;
meshBoltzmannSurface2D.c:53:      iint idM = mesh->vmapM[id];
meshBoltzmannSurface2D.c:54:      iint idP = mesh->vmapP[id];
meshBoltzmannSurface2D.c:56:      iint qidM = mesh->Nfields*idM;
meshBoltzmannSurface2D.c:57:      iint qidP = mesh->Nfields*idP;
meshBoltzmannSurface2D.c:60:      dfloat q1M = mesh->q[qidM+0];
meshBoltzmannSurface2D.c:61:      dfloat q2M = mesh->q[qidM+1];
meshBoltzmannSurface2D.c:62:      dfloat q3M = mesh->q[qidM+2];
meshBoltzmannSurface2D.c:63:      dfloat q4M = mesh->q[qidM+3];
meshBoltzmannSurface2D.c:64:      dfloat q5M = mesh->q[qidM+4];
meshBoltzmannSurface2D.c:65:      dfloat q6M = mesh->q[qidM+5];
meshBoltzmannSurface2D.c:68:      dfloat q1P = mesh->q[qidP+0];
meshBoltzmannSurface2D.c:69:      dfloat q2P = mesh->q[qidP+1];
meshBoltzmannSurface2D.c:70:      dfloat q3P = mesh->q[qidP+2];
meshBoltzmannSurface2D.c:71:      dfloat q4P = mesh->q[qidP+3];
meshBoltzmannSurface2D.c:72:      dfloat q5P = mesh->q[qidP+4];
meshBoltzmannSurface2D.c:73:      dfloat q6P = mesh->q[qidP+5];
meshBoltzmannSurface2D.c:76:      iint boundaryType = mesh->EToB[e*mesh->Nfaces+face];
meshBoltzmannSurface2D.c:78:	boundaryConditions2D(boundaryType, t, mesh->x[idM], mesh->y[idM],
meshBoltzmannSurface2D.c:84:      dfloat sqrt2 = sqrt(2.), sqrtRT = mesh->sqrtRT;
meshBoltzmannSurface2D.c:87:	+ sqrtRT*mesh->Lambda2*(-nx*(q2P-q2M)-ny*(q3P-q3M));   
meshBoltzmannSurface2D.c:89:	+ sqrtRT*mesh->Lambda2*(-nx*(q1P-q1M+sqrt2*(q5P-q5M))-ny*(q4P-q4M));		    
meshBoltzmannSurface2D.c:91:	+ sqrtRT*mesh->Lambda2*(-nx*(q4P-q4M)-ny*(q1P-q1M+sqrt2*(q6P-q6M)));
meshBoltzmannSurface2D.c:94:	+ sqrtRT*mesh->Lambda2*(-nx*(q3P-q3M)-ny*(q2P-q2M));
meshBoltzmannSurface2D.c:97:	+ sqrtRT*mesh->Lambda2*(-nx*sqrt2*(q2P-q2M));
meshBoltzmannSurface2D.c:100:	+ sqrtRT*mesh->Lambda2*(-ny*sqrt2*(q3P-q3M));          
meshBoltzmannSurface2D.c:112:    for(iint n=0;n<mesh->Np;++n){
meshBoltzmannSurface2D.c:113:      iint id = mesh->Nfields*(mesh->Np*e + n);
meshBoltzmannSurface2D.c:116:      dfloat rhsq1 = mesh->rhsq[id];
meshBoltzmannSurface2D.c:117:      dfloat rhsq2 = mesh->rhsq[id+1];
meshBoltzmannSurface2D.c:118:      dfloat rhsq3 = mesh->rhsq[id+2];
meshBoltzmannSurface2D.c:119:      dfloat rhsq4 = mesh->rhsq[id+3];
meshBoltzmannSurface2D.c:120:      dfloat rhsq5 = mesh->rhsq[id+4];
meshBoltzmannSurface2D.c:121:      dfloat rhsq6 = mesh->rhsq[id+5];
meshBoltzmannSurface2D.c:124:      for(int m=0;m<mesh->Nfp*mesh->Nfaces;++m){
meshBoltzmannSurface2D.c:125:	dfloat L = mesh->LIFT[n*mesh->Nfp*mesh->Nfaces+m];
meshBoltzmannSurface2D.c:135:      mesh->rhsq[id]   = rhsq1;
meshBoltzmannSurface2D.c:136:      mesh->rhsq[id+1] = rhsq2;
meshBoltzmannSurface2D.c:137:      mesh->rhsq[id+2] = rhsq3;
meshBoltzmannSurface2D.c:138:      mesh->rhsq[id+3] = rhsq4;
meshBoltzmannSurface2D.c:139:      mesh->rhsq[id+4] = rhsq5;
meshBoltzmannSurface2D.c:140:      mesh->rhsq[id+5] = rhsq6;
boltzmannMRABStep2D.c:10:for (iint Ntick=0; Ntick < pow(2,mesh->MRABNlevels-1);Ntick++) {
boltzmannMRABStep2D.c:13:    dfloat t = mesh->dt*(tstep*pow(2,mesh->MRABNlevels-1) + Ntick);
boltzmannMRABStep2D.c:50:      for (lev=0;lev<mesh->MRABNlevels;lev++)
boltzmannMRABStep2D.c:55:    if(mesh->totalHaloPairs>0){
boltzmannMRABStep2D.c:58:          mesh->device.setStream(dataStream);
boltzmannMRABStep2D.c:61:        iint Nentries = mesh->Nfp*mesh->Nfields*mesh->Nfaces;
boltzmannMRABStep2D.c:62:        mesh->haloExtractKernel(mesh->totalHaloPairs,
boltzmannMRABStep2D.c:64:                    mesh->o_haloElementList,
boltzmannMRABStep2D.c:65:                    mesh->o_fQP,
boltzmannMRABStep2D.c:66:                    mesh->o_haloBuffer);
boltzmannMRABStep2D.c:69:        mesh->o_haloBuffer.asyncCopyTo(sendBuffer);
boltzmannMRABStep2D.c:72:          mesh->device.setStream(defaultStream);
boltzmannMRABStep2D.c:79:        if (mesh->MRABNelements[l])
boltzmannMRABStep2D.c:80:             mesh->volumeKernel(mesh->MRABNelements[l],
boltzmannMRABStep2D.c:81:                            mesh->o_MRABelementIds[l],
boltzmannMRABStep2D.c:84:                            mesh->Nrhs,
boltzmannMRABStep2D.c:85:                            mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:86:                            mesh->o_vgeo,
boltzmannMRABStep2D.c:87:                            mesh->o_DrT,
boltzmannMRABStep2D.c:88:                            mesh->o_DsT,
boltzmannMRABStep2D.c:89:                            mesh->o_q,
boltzmannMRABStep2D.c:90:                            mesh->o_rhsq);
boltzmannMRABStep2D.c:92:        if (mesh->MRABpmlNelements[l])
boltzmannMRABStep2D.c:93:          mesh->pmlVolumeKernel(mesh->MRABpmlNelements[l],
boltzmannMRABStep2D.c:94:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRABStep2D.c:95:                            mesh->o_MRABpmlIds[l],
boltzmannMRABStep2D.c:98:                            mesh->Nrhs,
boltzmannMRABStep2D.c:99:                            mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:100:                            mesh->o_vgeo,
boltzmannMRABStep2D.c:101:                            mesh->o_pmlSigmaX,
boltzmannMRABStep2D.c:102:                            mesh->o_pmlSigmaY,
boltzmannMRABStep2D.c:103:                            mesh->o_DrT,
boltzmannMRABStep2D.c:104:                            mesh->o_DsT,
boltzmannMRABStep2D.c:105:                            mesh->o_q,
boltzmannMRABStep2D.c:106:                            mesh->o_pmlqx,
boltzmannMRABStep2D.c:107:                            mesh->o_pmlqy,
boltzmannMRABStep2D.c:108:                            mesh->o_rhsq,
boltzmannMRABStep2D.c:109:                            mesh->o_pmlrhsqx,
boltzmannMRABStep2D.c:110:                            mesh->o_pmlrhsqy);
boltzmannMRABStep2D.c:118:        if (mesh->MRABNelements[l])
boltzmannMRABStep2D.c:119:              mesh->relaxationKernel(mesh->MRABNelements[l],
boltzmannMRABStep2D.c:120:                            mesh->o_MRABelementIds[l],
boltzmannMRABStep2D.c:121:                            mesh->Nrhs,
boltzmannMRABStep2D.c:122:                            mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:123:                            mesh->o_cubInterpT,
boltzmannMRABStep2D.c:124:                            mesh->o_cubProjectT,
boltzmannMRABStep2D.c:125:                            mesh->o_q,
boltzmannMRABStep2D.c:126:                            mesh->o_rhsq);  
boltzmannMRABStep2D.c:128:        if (mesh->MRABpmlNelements[l])
boltzmannMRABStep2D.c:129:             mesh->pmlRelaxationKernel(mesh->MRABpmlNelements[l],
boltzmannMRABStep2D.c:130:                            mesh->o_MRABpmlElementIds[l],
boltzmannMRABStep2D.c:131:                            mesh->o_MRABpmlIds[l],
boltzmannMRABStep2D.c:132:                            mesh->Nrhs,
boltzmannMRABStep2D.c:133:                            mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:134:                            mesh->o_cubInterpT,
boltzmannMRABStep2D.c:135:                            mesh->o_cubProjectT,
boltzmannMRABStep2D.c:136:                            mesh->o_q,
boltzmannMRABStep2D.c:137:                            mesh->o_rhsq);
boltzmannMRABStep2D.c:142:       if(mesh->totalHaloPairs>0){
boltzmannMRABStep2D.c:144:          mesh->device.setStream(dataStream);
boltzmannMRABStep2D.c:148:        mesh->device.finish();
boltzmannMRABStep2D.c:152:              mesh->Nfields*mesh->Nfp*mesh->Nfaces*sizeof(dfloat),
boltzmannMRABStep2D.c:160:        size_t offset = mesh->Nfaces*mesh->Nfp*mesh->Nfields*mesh->Nelements*sizeof(dfloat); // offset for halo data
boltzmannMRABStep2D.c:161:        mesh->o_fQP.asyncCopyFrom(recvBuffer, haloBytes, offset);
boltzmannMRABStep2D.c:162:        mesh->device.finish();        
boltzmannMRABStep2D.c:165:          mesh->device.setStream(defaultStream);
boltzmannMRABStep2D.c:172:        if (mesh->MRABNelements[l])
boltzmannMRABStep2D.c:173:          mesh->surfaceKernel(mesh->MRABNelements[l],
boltzmannMRABStep2D.c:174:                              mesh->o_MRABelementIds[l],
boltzmannMRABStep2D.c:177:                              mesh->Nrhs,
boltzmannMRABStep2D.c:178:                              mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:179:                              mesh->o_sgeo,
boltzmannMRABStep2D.c:180:                              mesh->o_LIFTT,
boltzmannMRABStep2D.c:181:                              mesh->o_vmapM,
boltzmannMRABStep2D.c:182:                              mesh->o_mapP,
boltzmannMRABStep2D.c:183:                              mesh->o_EToB,
boltzmannMRABStep2D.c:184:                              mesh->o_x,
boltzmannMRABStep2D.c:185:                              mesh->o_y,
boltzmannMRABStep2D.c:186:                              mesh->o_q,
boltzmannMRABStep2D.c:187:                              mesh->o_fQM,
boltzmannMRABStep2D.c:188:                              mesh->o_fQP,
boltzmannMRABStep2D.c:189:                              mesh->o_rhsq);
boltzmannMRABStep2D.c:191:        if (mesh->MRABpmlNelements[l])
boltzmannMRABStep2D.c:192:          mesh->pmlSurfaceKernel(mesh->MRABpmlNelements[l],
boltzmannMRABStep2D.c:193:                              mesh->o_MRABpmlElementIds[l],
boltzmannMRABStep2D.c:194:                              mesh->o_MRABpmlIds[l],
boltzmannMRABStep2D.c:197:                              mesh->Nrhs,
boltzmannMRABStep2D.c:198:                              mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:199:                              mesh->o_sgeo,
boltzmannMRABStep2D.c:200:                              mesh->o_LIFTT,
boltzmannMRABStep2D.c:201:                              mesh->o_vmapM,
boltzmannMRABStep2D.c:202:                              mesh->o_mapP,
boltzmannMRABStep2D.c:203:                              mesh->o_EToB,
boltzmannMRABStep2D.c:204:                              mesh->o_x,
boltzmannMRABStep2D.c:205:                              mesh->o_y,
boltzmannMRABStep2D.c:206:                              mesh->o_q,
boltzmannMRABStep2D.c:207:                              mesh->o_fQM,
boltzmannMRABStep2D.c:208:                              mesh->o_fQP,
boltzmannMRABStep2D.c:209:                              mesh->o_rhsq,
boltzmannMRABStep2D.c:210:                              mesh->o_pmlrhsqx,
boltzmannMRABStep2D.c:211:                              mesh->o_pmlrhsqy);
boltzmannMRABStep2D.c:215:      for (lev=0;lev<mesh->MRABNlevels;lev++)
boltzmannMRABStep2D.c:221:          if (mesh->MRABNelements[l])
boltzmannMRABStep2D.c:222:            mesh->updateKernel(mesh->MRABNelements[l],
boltzmannMRABStep2D.c:223:                              mesh->o_MRABelementIds[l],
boltzmannMRABStep2D.c:224:                              mesh->dt*pow(2,l),
boltzmannMRABStep2D.c:226:                              mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:227:                              mesh->o_vmapM,
boltzmannMRABStep2D.c:228:                              mesh->o_rhsq,
boltzmannMRABStep2D.c:229:                              mesh->o_fQM,
boltzmannMRABStep2D.c:230:                              mesh->o_fQP,
boltzmannMRABStep2D.c:231:                              mesh->o_q);
boltzmannMRABStep2D.c:233:          if (mesh->MRABpmlNelements[l])
boltzmannMRABStep2D.c:234:            mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannMRABStep2D.c:235:                                  mesh->o_MRABpmlElementIds[l],
boltzmannMRABStep2D.c:236:                                  mesh->o_MRABpmlIds[l],
boltzmannMRABStep2D.c:237:                                  mesh->dt*pow(2,l),
boltzmannMRABStep2D.c:239:                                  mesh->MRABshiftIndex[l],
boltzmannMRABStep2D.c:240:                                  mesh->o_vmapM,
boltzmannMRABStep2D.c:241:                                  mesh->o_rhsq,
boltzmannMRABStep2D.c:242:                                  mesh->o_pmlrhsqx,
boltzmannMRABStep2D.c:243:                                  mesh->o_pmlrhsqy,
boltzmannMRABStep2D.c:244:                                  mesh->o_q,
boltzmannMRABStep2D.c:245:                                  mesh->o_pmlqx,
boltzmannMRABStep2D.c:246:                                  mesh->o_pmlqy,
boltzmannMRABStep2D.c:247:                                  mesh->o_fQM,
boltzmannMRABStep2D.c:248:                                  mesh->o_fQP);
boltzmannMRABStep2D.c:251:          mesh->MRABshiftIndex[l] = (mesh->MRABshiftIndex[l]+1)%3;
boltzmannMRABStep2D.c:255:        if (lev<mesh->MRABNlevels) {
boltzmannMRABStep2D.c:257:          if (mesh->MRABNhaloElements[lev])
boltzmannMRABStep2D.c:258:            mesh->traceUpdateKernel(mesh->MRABNhaloElements[lev],
boltzmannMRABStep2D.c:259:                                    mesh->o_MRABhaloIds[lev],
boltzmannMRABStep2D.c:260:                                    mesh->dt*pow(2,lev-1),
boltzmannMRABStep2D.c:262:                                    mesh->MRABshiftIndex[lev],
boltzmannMRABStep2D.c:263:                                    mesh->o_vmapM,
boltzmannMRABStep2D.c:264:                                    mesh->o_rhsq,
boltzmannMRABStep2D.c:265:                                    mesh->o_fQM,
boltzmannMRABStep2D.c:266:                                    mesh->o_fQP,
boltzmannMRABStep2D.c:267:                                    mesh->o_q);
boltzmannMRABStep2D.c:269:          if (mesh->MRABpmlNhaloElements[lev])
boltzmannMRABStep2D.c:270:            mesh->pmlTraceUpdateKernel(mesh->MRABpmlNhaloElements[lev],
boltzmannMRABStep2D.c:271:                                      mesh->o_MRABpmlHaloElementIds[lev],
boltzmannMRABStep2D.c:272:                                      mesh->o_MRABpmlHaloIds[lev],
boltzmannMRABStep2D.c:273:                                      mesh->dt*pow(2,lev-1),
boltzmannMRABStep2D.c:275:                                      mesh->MRABshiftIndex[lev],
boltzmannMRABStep2D.c:276:                                      mesh->o_vmapM,
boltzmannMRABStep2D.c:277:                                      mesh->o_rhsq,
boltzmannMRABStep2D.c:278:                                      mesh->o_pmlrhsqx,
boltzmannMRABStep2D.c:279:                                      mesh->o_pmlrhsqy,
boltzmannMRABStep2D.c:280:                                      mesh->o_q,
boltzmannMRABStep2D.c:281:                                      mesh->o_pmlqx,
boltzmannMRABStep2D.c:282:                                      mesh->o_pmlqy,
boltzmannMRABStep2D.c:283:                                      mesh->o_fQM,
boltzmannMRABStep2D.c:284:                                      mesh->o_fQP);
boltzmannRun2D.c:8:  iint haloBytes = mesh->totalHaloPairs*mesh->Nfp*mesh->Nfields*mesh->Nfaces*sizeof(dfloat);
boltzmannRun2D.c:10:    occa::memory o_sendBufferPinned = mesh->device.mappedAlloc(haloBytes, NULL);
boltzmannRun2D.c:11:    occa::memory o_recvBufferPinned = mesh->device.mappedAlloc(haloBytes, NULL);
boltzmannRun2D.c:20:  for (iint l=0; l<mesh->MRABNlevels; l++) {
boltzmannRun2D.c:23:       if (mesh->MRABNelements[l])
boltzmannRun2D.c:24:      mesh->updateKernel(mesh->MRABNelements[l],
boltzmannRun2D.c:25:                        mesh->o_MRABelementIds[l],
boltzmannRun2D.c:28:                        mesh->MRABshiftIndex[l],
boltzmannRun2D.c:29:                        mesh->o_vmapM,
boltzmannRun2D.c:30:                        mesh->o_rhsq,
boltzmannRun2D.c:31:                        mesh->o_fQM,
boltzmannRun2D.c:32:                        mesh->o_fQP,
boltzmannRun2D.c:33:                        mesh->o_q);
boltzmannRun2D.c:35:    if (mesh->MRABpmlNelements[l])
boltzmannRun2D.c:36:      mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannRun2D.c:37:                            mesh->o_MRABpmlElementIds[l],
boltzmannRun2D.c:38:                            mesh->o_MRABpmlIds[l],
boltzmannRun2D.c:41:                            mesh->MRABshiftIndex[l],
boltzmannRun2D.c:42:                            mesh->o_vmapM,
boltzmannRun2D.c:43:                            mesh->o_rhsq,
boltzmannRun2D.c:44:                            mesh->o_pmlrhsqx,
boltzmannRun2D.c:45:                            mesh->o_pmlrhsqy,
boltzmannRun2D.c:46:                            mesh->o_q,
boltzmannRun2D.c:47:                            mesh->o_pmlqx,
boltzmannRun2D.c:48:                            mesh->o_pmlqy,
boltzmannRun2D.c:49:                            mesh->o_fQM,
boltzmannRun2D.c:50:                            mesh->o_fQP);
boltzmannRun2D.c:55:    if (mesh->MRABNelements[l])
boltzmannRun2D.c:56:      mesh->updateKernel(mesh->MRABNelements[l],
boltzmannRun2D.c:57:                        mesh->o_MRABelementIds[l],
boltzmannRun2D.c:61:                        mesh->MRABshiftIndex[l],
boltzmannRun2D.c:62:                        mesh->o_vmapM,
boltzmannRun2D.c:63:                        mesh->o_rhsq,
boltzmannRun2D.c:64:                        mesh->o_fQM,
boltzmannRun2D.c:65:                        mesh->o_fQP,
boltzmannRun2D.c:66:                        mesh->o_q);
boltzmannRun2D.c:68:    if (mesh->MRABpmlNelements[l])
boltzmannRun2D.c:69:      mesh->pmlUpdateKernel(mesh->MRABpmlNelements[l],
boltzmannRun2D.c:70:                            mesh->o_MRABpmlElementIds[l],
boltzmannRun2D.c:71:                            mesh->o_MRABpmlIds[l],
boltzmannRun2D.c:75:                            mesh->MRABshiftIndex[l],
boltzmannRun2D.c:76:                            mesh->o_vmapM,
boltzmannRun2D.c:77:                            mesh->o_rhsq,
boltzmannRun2D.c:78:                            mesh->o_pmlrhsqx,
boltzmannRun2D.c:79:                            mesh->o_pmlrhsqy,
boltzmannRun2D.c:80:                            mesh->o_q,
boltzmannRun2D.c:81:                            mesh->o_pmlqx,
boltzmannRun2D.c:82:                            mesh->o_pmlqy,
boltzmannRun2D.c:83:                            mesh->o_fQM,
boltzmannRun2D.c:84:                            mesh->o_fQP);
boltzmannRun2D.c:91:printf("N: %d Nsteps: %d dt: %.5e \n", mesh->N, mesh->NtimeSteps, mesh->dt);
boltzmannRun2D.c:92:occa::initTimer(mesh->device);
boltzmannRun2D.c:96:    mesh->device.finish();
boltzmannRun2D.c:99: for(iint tstep=0;tstep<mesh->NtimeSteps;++tstep){
boltzmannRun2D.c:103:      if((tstep%mesh->errorStep)==0){
boltzmannRun2D.c:144:mesh->device.finish();
boltzmannRun2D.c:149:boltzmannReport2D(mesh, mesh->NtimeSteps,options);
